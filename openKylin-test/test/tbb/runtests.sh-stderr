build/linux.inc:39: "uname_m: " riscv64
build/linux.inc:40: "uname_a: " Linux openkylin 5.11.0-1030-generic #34 SMP Fri Mar 11 15:27:17 CST 2022 riscv64 riscv64 riscv64 GNU/Linux
build/linux.inc:41: "deb_host_arch: " riscv64
build/linux.inc:74: "Unknown arch: " riscv64
build/linux.inc:75: "Unknown uname_a: " Linux openkylin 5.11.0-1030-generic #34 SMP Fri Mar 11 15:27:17 CST 2022 riscv64 riscv64 riscv64 GNU/Linux
../build/linux.inc:39: "uname_m: " riscv64
../build/linux.inc:40: "uname_a: " Linux openkylin 5.11.0-1030-generic #34 SMP Fri Mar 11 15:27:17 CST 2022 riscv64 riscv64 riscv64 GNU/Linux
../build/linux.inc:41: "deb_host_arch: " riscv64
../build/linux.inc:74: "Unknown arch: " riscv64
../build/linux.inc:75: "Unknown uname_a: " Linux openkylin 5.11.0-1030-generic #34 SMP Fri Mar 11 15:27:17 CST 2022 riscv64 riscv64 riscv64 GNU/Linux
In file included from ../../include/tbb/concurrent_vector.h:36,
                 from ../../src/test/test_concurrent_vector.cpp:21:
../../include/tbb/internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; OtherAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/concurrent_vector.h:751:53:   required from ‘tbb::concurrent_vector<T, A>& tbb::concurrent_vector<T, A>::operator=(tbb::concurrent_vector<T, A>&&) [with T = FooWithAssign; A = static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>]’
../../src/test/test_container_move_support.h:733:9:   required from ‘void TestMoveAssignOperatorPOCMAStateful() [with container_traits = c_vector_type]’
../../src/test/test_container_move_support.h:794:58:   required from ‘void TestMoveAssignOperator() [with container_traits = c_vector_type]’
../../src/test/test_concurrent_vector.cpp:1803:43:   required from here
../../include/tbb/internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘constexpr static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>& static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>::operator=(const static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_concurrent_vector.cpp:32:
../../src/test/harness_allocator.h:364:5: note: because ‘static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>’ has user-provided ‘static_shared_counting_allocator<tag, base_alloc_t, count_t>::static_shared_counting_allocator(const static_shared_counting_allocator<tag, base_alloc_t, count_t>&) [with tag = Harness::int_to_type<643>; base_alloc_t = arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>; count_t = long unsigned int]’
  364 |     static_shared_counting_allocator(const static_shared_counting_allocator& src) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../include/tbb/internal/_concurrent_unordered_impl.h:47,
                 from ../../include/tbb/concurrent_unordered_set.h:26,
                 from ../../src/test/test_concurrent_unordered_set.cpp:25:
../../include/tbb/internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >; OtherAlloc = local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/internal/_node_handle_impl.h:70:49:   required from ‘tbb::internal::node_handle_base<Value, Node, Allocator>& tbb::internal::node_handle_base<Value, Node, Allocator>::operator=(tbb::internal::node_handle_base<Value, Node, Allocator>&&) [with Value = int; Node = tbb::interface5::internal::split_ordered_list<int, local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> > >::node; Allocator = local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >]’
../../include/tbb/internal/_node_handle_impl.h:138:7:   required from ‘void node_handling::TestHandle(Table) [with Table = tbb::interface5::concurrent_unordered_set<int, tbb::tbb_hash<int>, std::equal_to<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_associative_common.h:1335:19:   required from ‘void node_handling::NodeHandlingTests(const Table&, const typename Table::value_type&) [with Table = tbb::interface5::concurrent_unordered_set<int, tbb::tbb_hash<int>, std::equal_to<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >; typename Table::value_type = int]’
../../src/test/test_concurrent_associative_common.h:1474:41:   required from ‘void node_handling::TestNodeHandling() [with Table = tbb::interface5::concurrent_unordered_set<int, tbb::tbb_hash<int>, std::equal_to<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_unordered_set.cpp:263:44:   required from here
../../include/tbb/internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >& local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >::operator=(const local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >&)’ is deprecated [-Wdeprecated-copy]
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_container_move_support.h:22,
                 from ../../src/test/test_concurrent_associative_common.h:21,
                 from ../../src/test/test_concurrent_unordered_common.h:19,
                 from ../../src/test/test_concurrent_unordered_set.cpp:49:
../../src/test/harness_allocator.h:441:5: note: because ‘local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >’ has user-provided ‘local_counting_allocator<base_alloc_t, count_t>::local_counting_allocator(const local_counting_allocator<base_alloc_t, count_t>&) [with base_alloc_t = debug_allocator<int, std::allocator>; count_t = tbb::atomic<long unsigned int>]’
  441 |     local_counting_allocator(const local_counting_allocator &a) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:398:7: warning: implicitly-declared ‘constexpr debug_allocator<int, std::allocator>& debug_allocator<int, std::allocator>::operator=(const debug_allocator<int, std::allocator>&)’ is deprecated [-Wdeprecated-copy]
  398 | class local_counting_allocator : public base_alloc_t
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:509:5: note: because ‘debug_allocator<int, std::allocator>’ has user-provided ‘debug_allocator<T, Allocator>::debug_allocator(const debug_allocator<T, Allocator>&) [with T = int; Allocator = std::allocator]’
  509 |     debug_allocator(const debug_allocator &a) throw() : base_allocator_type( a ) { }
      |     ^~~~~~~~~~~~~~~
In file included from ../../include/tbb/internal/_concurrent_unordered_impl.h:47,
                 from ../../include/tbb/concurrent_unordered_set.h:26,
                 from ../../src/test/test_concurrent_unordered_set.cpp:25:
../../include/tbb/internal/_allocator_traits.h:60:18: note: synthesized method ‘local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >& local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >::operator=(const local_counting_allocator<debug_allocator<int, std::allocator>, tbb::atomic<long unsigned int> >&)’ first required here
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/test_concurrent_hash_map.cpp: In static member function ‘static MyKey MyKey::make(int)’:
../../src/test/test_concurrent_hash_map.cpp:101:16: warning: implicitly-declared ‘constexpr MyKey::MyKey(const MyKey&)’ is deprecated [-Wdeprecated-copy]
  101 |         return result;
      |                ^~~~~~
../../src/test/test_concurrent_hash_map.cpp:93:10: note: because ‘MyKey’ has user-provided ‘void MyKey::operator=(const MyKey&)’
   93 |     void operator=( const MyKey&  );    // Deny access
      |          ^~~~~~~~
In file included from ../../include/tbb/internal/_concurrent_unordered_impl.h:47,
                 from ../../include/tbb/concurrent_unordered_map.h:26,
                 from ../../src/test/test_concurrent_unordered_map.cpp:22:
../../include/tbb/internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >; OtherAlloc = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/internal/_node_handle_impl.h:70:49:   required from ‘tbb::internal::node_handle_base<Value, Node, Allocator>& tbb::internal::node_handle_base<Value, Node, Allocator>::operator=(tbb::internal::node_handle_base<Value, Node, Allocator>&&) [with Value = std::pair<const int, int>; Node = tbb::interface5::internal::split_ordered_list<std::pair<const int, int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >::node; Allocator = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >]’
../../include/tbb/internal/_node_handle_impl.h:104:7:   required from ‘void node_handling::TestHandle(Table) [with Table = tbb::interface5::concurrent_unordered_map<int, int, tbb::tbb_hash<int>, std::equal_to<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_associative_common.h:1335:19:   required from ‘void node_handling::NodeHandlingTests(const Table&, const typename Table::value_type&) [with Table = tbb::interface5::concurrent_unordered_map<int, int, tbb::tbb_hash<int>, std::equal_to<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >; typename Table::value_type = std::pair<const int, int>]’
../../src/test/test_concurrent_associative_common.h:1474:41:   required from ‘void node_handling::TestNodeHandling() [with Table = tbb::interface5::concurrent_unordered_map<int, int, tbb::tbb_hash<int>, std::equal_to<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_unordered_map.cpp:245:44:   required from here
../../include/tbb/internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >& local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >::operator=(const local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >&)’ is deprecated [-Wdeprecated-copy]
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_container_move_support.h:22,
                 from ../../src/test/test_concurrent_associative_common.h:21,
                 from ../../src/test/test_concurrent_unordered_common.h:19,
                 from ../../src/test/test_concurrent_unordered_map.cpp:38:
../../src/test/harness_allocator.h:441:5: note: because ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >’ has user-provided ‘local_counting_allocator<base_alloc_t, count_t>::local_counting_allocator(const local_counting_allocator<base_alloc_t, count_t>&) [with base_alloc_t = debug_allocator<std::pair<const int, int>, std::allocator>; count_t = tbb::atomic<long unsigned int>]’
  441 |     local_counting_allocator(const local_counting_allocator &a) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:398:7: warning: implicitly-declared ‘constexpr debug_allocator<std::pair<const int, int>, std::allocator>& debug_allocator<std::pair<const int, int>, std::allocator>::operator=(const debug_allocator<std::pair<const int, int>, std::allocator>&)’ is deprecated [-Wdeprecated-copy]
  398 | class local_counting_allocator : public base_alloc_t
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:509:5: note: because ‘debug_allocator<std::pair<const int, int>, std::allocator>’ has user-provided ‘debug_allocator<T, Allocator>::debug_allocator(const debug_allocator<T, Allocator>&) [with T = std::pair<const int, int>; Allocator = std::allocator]’
  509 |     debug_allocator(const debug_allocator &a) throw() : base_allocator_type( a ) { }
      |     ^~~~~~~~~~~~~~~
In file included from ../../include/tbb/internal/_concurrent_unordered_impl.h:47,
                 from ../../include/tbb/concurrent_unordered_map.h:26,
                 from ../../src/test/test_concurrent_unordered_map.cpp:22:
../../include/tbb/internal/_allocator_traits.h:60:18: note: synthesized method ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >& local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >::operator=(const local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >&)’ first required here
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../include/tbb/concurrent_hash_map.h:37,
                 from ../../src/test/test_concurrent_hash_map.cpp:41:
../../include/tbb/internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<tbb::interface5::concurrent_hash_map<FooWithAssign, FooWithAssign, hash_map_move_traits::hash_compare<FooWithAssign>, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int> >::node, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; OtherAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<tbb::interface5::concurrent_hash_map<FooWithAssign, FooWithAssign, hash_map_move_traits::hash_compare<FooWithAssign>, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int> >::node, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/concurrent_hash_map.h:1186:49:   required from ‘void tbb::interface5::concurrent_hash_map<Key, T, HashCompare, A>::internal_move_assign(tbb::interface5::concurrent_hash_map<Key, T, HashCompare, A>&&, tbb::internal::traits_true_type) [with Key = FooWithAssign; T = FooWithAssign; HashCompare = hash_map_move_traits::hash_compare<FooWithAssign>; Allocator = static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’
../../include/tbb/concurrent_hash_map.h:946:13:   required from ‘tbb::interface5::concurrent_hash_map<Key, T, HashCompare, A>& tbb::interface5::concurrent_hash_map<Key, T, HashCompare, A>::operator=(tbb::interface5::concurrent_hash_map<Key, T, HashCompare, A>&&) [with Key = FooWithAssign; T = FooWithAssign; HashCompare = hash_map_move_traits::hash_compare<FooWithAssign>; Allocator = static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>]’
../../src/test/test_container_move_support.h:733:9:   required from ‘void TestMoveAssignOperatorPOCMAStateful() [with container_traits = hash_map_move_traits]’
../../src/test/test_container_move_support.h:794:58:   required from ‘void TestMoveAssignOperator() [with container_traits = hash_map_move_traits]’
../../src/test/test_concurrent_hash_map.cpp:1403:50:   required from here
../../include/tbb/internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘constexpr static_shared_counting_allocator<Harness::int_to_type<643>, arena<tbb::interface5::concurrent_hash_map<FooWithAssign, FooWithAssign, hash_map_move_traits::hash_compare<FooWithAssign>, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int> >::node, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>& static_shared_counting_allocator<Harness::int_to_type<643>, arena<tbb::interface5::concurrent_hash_map<FooWithAssign, FooWithAssign, hash_map_move_traits::hash_compare<FooWithAssign>, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int> >::node, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>::operator=(const static_shared_counting_allocator<Harness::int_to_type<643>, arena<tbb::interface5::concurrent_hash_map<FooWithAssign, FooWithAssign, hash_map_move_traits::hash_compare<FooWithAssign>, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int> >::node, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_concurrent_hash_map.cpp:81:
../../src/test/harness_allocator.h:364:5: note: because ‘static_shared_counting_allocator<Harness::int_to_type<643>, arena<tbb::interface5::concurrent_hash_map<FooWithAssign, FooWithAssign, hash_map_move_traits::hash_compare<FooWithAssign>, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int> >::node, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>’ has user-provided ‘static_shared_counting_allocator<tag, base_alloc_t, count_t>::static_shared_counting_allocator(const static_shared_counting_allocator<tag, base_alloc_t, count_t>&) [with tag = Harness::int_to_type<643>; base_alloc_t = arena<tbb::interface5::concurrent_hash_map<FooWithAssign, FooWithAssign, hash_map_move_traits::hash_compare<FooWithAssign>, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int> >::node, std::integral_constant<bool, true>, long unsigned int>; count_t = long unsigned int]’
  364 |     static_shared_counting_allocator(const static_shared_counting_allocator& src) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../include/tbb/internal/../concurrent_vector.h:36,
                 from ../../include/tbb/internal/../enumerable_thread_specific.h:24,
                 from ../../include/tbb/internal/_concurrent_skip_list_impl.h:29,
                 from ../../include/tbb/concurrent_set.h:32,
                 from ../../src/test/test_concurrent_set.cpp:27:
../../include/tbb/internal/../internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >; OtherAlloc = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/internal/_node_handle_impl.h:70:49:   required from ‘tbb::internal::node_handle_base<Value, Node, Allocator>& tbb::internal::node_handle_base<Value, Node, Allocator>::operator=(tbb::internal::node_handle_base<Value, Node, Allocator>&&) [with Value = int; Node = tbb::interface10::internal::skip_list_node<int, tbb::spin_mutex>; Allocator = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >]’
../../include/tbb/internal/_node_handle_impl.h:138:7:   required from ‘void node_handling::TestHandle(Table) [with Table = tbb::interface10::concurrent_set<int, std::less<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_associative_common.h:1335:19:   required from ‘void node_handling::NodeHandlingTests(const Table&, const typename Table::value_type&) [with Table = tbb::interface10::concurrent_set<int, std::less<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >; typename Table::value_type = int]’
../../src/test/test_concurrent_associative_common.h:1474:41:   required from ‘void node_handling::TestNodeHandling() [with Table = tbb::interface10::concurrent_set<int, std::less<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_set.cpp:233:44:   required from here
../../include/tbb/internal/../internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >& local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >::operator=(const local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >&)’ is deprecated [-Wdeprecated-copy]
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_container_move_support.h:22,
                 from ../../src/test/test_concurrent_associative_common.h:21,
                 from ../../src/test/test_concurrent_ordered_common.h:17,
                 from ../../src/test/test_concurrent_set.cpp:44:
../../src/test/harness_allocator.h:441:5: note: because ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >’ has user-provided ‘local_counting_allocator<base_alloc_t, count_t>::local_counting_allocator(const local_counting_allocator<base_alloc_t, count_t>&) [with base_alloc_t = debug_allocator<std::pair<const int, int>, std::allocator>; count_t = tbb::atomic<long unsigned int>]’
  441 |     local_counting_allocator(const local_counting_allocator &a) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:398:7: warning: implicitly-declared ‘constexpr debug_allocator<std::pair<const int, int>, std::allocator>& debug_allocator<std::pair<const int, int>, std::allocator>::operator=(const debug_allocator<std::pair<const int, int>, std::allocator>&)’ is deprecated [-Wdeprecated-copy]
  398 | class local_counting_allocator : public base_alloc_t
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:509:5: note: because ‘debug_allocator<std::pair<const int, int>, std::allocator>’ has user-provided ‘debug_allocator<T, Allocator>::debug_allocator(const debug_allocator<T, Allocator>&) [with T = std::pair<const int, int>; Allocator = std::allocator]’
  509 |     debug_allocator(const debug_allocator &a) throw() : base_allocator_type( a ) { }
      |     ^~~~~~~~~~~~~~~
In file included from ../../include/tbb/internal/../concurrent_vector.h:36,
                 from ../../include/tbb/internal/../enumerable_thread_specific.h:24,
                 from ../../include/tbb/internal/_concurrent_skip_list_impl.h:29,
                 from ../../include/tbb/concurrent_set.h:32,
                 from ../../src/test/test_concurrent_set.cpp:27:
../../include/tbb/internal/../internal/_allocator_traits.h:60:18: note: synthesized method ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >& local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >::operator=(const local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >&)’ first required here
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../include/tbb/internal/../internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; OtherAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/internal/_concurrent_skip_list_impl.h:1030:49:   required from ‘void tbb::interface10::internal::concurrent_skip_list<Traits>::internal_move_assign(tbb::interface10::internal::concurrent_skip_list<Traits>&&, std::true_type) [with Traits = tbb::interface10::set_traits<FooWithAssign, std::less<FooWithAssign>, tbb::interface10::internal::concurrent_geometric_level_generator<64>, 64, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>, false>; std::true_type = std::integral_constant<bool, true>]’
../../include/tbb/internal/_concurrent_skip_list_impl.h:341:13:   required from ‘tbb::interface10::internal::concurrent_skip_list<Traits>& tbb::interface10::internal::concurrent_skip_list<Traits>::operator=(tbb::interface10::internal::concurrent_skip_list<Traits>&&) [with Traits = tbb::interface10::set_traits<FooWithAssign, std::less<FooWithAssign>, tbb::interface10::internal::concurrent_geometric_level_generator<64>, 64, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>, false>]’
../../include/tbb/concurrent_set.h:134:65:   required from ‘tbb::interface10::concurrent_set<Key, Comp, Allocator>& tbb::interface10::concurrent_set<Key, Comp, Allocator>::operator=(tbb::interface10::concurrent_set<Key, Comp, Allocator>&&) [with Key = FooWithAssign; Comp = std::less<FooWithAssign>; Allocator = static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>]’
../../src/test/test_container_move_support.h:733:9:   required from ‘void TestMoveAssignOperatorPOCMAStateful() [with container_traits = co_set_type]’
../../src/test/test_container_move_support.h:794:58:   required from ‘void TestMoveAssignOperator() [with container_traits = co_set_type]’
../../src/test/test_concurrent_associative_common.h:804:45:   required from ‘void test_rvalue_ref_support(const char*) [with container_traits = co_set_type]’
../../src/test/test_concurrent_set.cpp:223:60:   required from here
../../include/tbb/internal/../internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘constexpr static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>& static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>::operator=(const static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
In file included from ../../src/test/test_container_move_support.h:22,
                 from ../../src/test/test_concurrent_associative_common.h:21,
                 from ../../src/test/test_concurrent_ordered_common.h:17,
                 from ../../src/test/test_concurrent_set.cpp:44:
../../src/test/harness_allocator.h:364:5: note: because ‘static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>’ has user-provided ‘static_shared_counting_allocator<tag, base_alloc_t, count_t>::static_shared_counting_allocator(const static_shared_counting_allocator<tag, base_alloc_t, count_t>&) [with tag = Harness::int_to_type<643>; base_alloc_t = arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>; count_t = long unsigned int]’
  364 |     static_shared_counting_allocator(const static_shared_counting_allocator& src) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../include/tbb/concurrent_unordered_map.h:26,
                 from ../../src/test/test_concurrent_unordered_map.cpp:22:
../../include/tbb/internal/_concurrent_unordered_impl.h: In function ‘void MultiMapEraseTests() [with MultiMap = tbb::interface5::concurrent_unordered_multimap<int, int, tbb::tbb_hash<int>, std::equal_to<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’:
../../include/tbb/internal/_concurrent_unordered_impl.h:190:43: warning: ‘erased_it.tbb::interface5::internal::solist_iterator<tbb::interface5::internal::split_ordered_list<std::pair<const int, int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >, std::pair<const int, int> >::my_list_ptr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  190 |     return i.my_node_ptr == j.my_node_ptr && i.my_list_ptr == j.my_list_ptr;
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_concurrent_unordered_common.h:19,
                 from ../../src/test/test_concurrent_unordered_map.cpp:38:
../../src/test/test_concurrent_associative_common.h:245:33: note: ‘erased_it.tbb::interface5::internal::solist_iterator<tbb::interface5::internal::split_ordered_list<std::pair<const int, int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >, std::pair<const int, int> >::my_list_ptr’ was declared here
  245 |     typename MultiMap::iterator erased_it;
      |                                 ^~~~~~~~~
In file included from ../../include/tbb/internal/../concurrent_vector.h:36,
                 from ../../include/tbb/internal/../enumerable_thread_specific.h:24,
                 from ../../include/tbb/internal/_concurrent_skip_list_impl.h:29,
                 from ../../include/tbb/concurrent_map.h:32,
                 from ../../src/test/test_concurrent_map.cpp:27:
../../include/tbb/internal/../internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >; OtherAlloc = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/internal/_node_handle_impl.h:70:49:   required from ‘tbb::internal::node_handle_base<Value, Node, Allocator>& tbb::internal::node_handle_base<Value, Node, Allocator>::operator=(tbb::internal::node_handle_base<Value, Node, Allocator>&&) [with Value = std::pair<const int, int>; Node = tbb::interface10::internal::skip_list_node<std::pair<const int, int>, tbb::spin_mutex>; Allocator = local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >]’
../../include/tbb/internal/_node_handle_impl.h:104:7:   required from ‘void node_handling::TestHandle(Table) [with Table = tbb::interface10::concurrent_map<int, int, std::less<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_associative_common.h:1335:19:   required from ‘void node_handling::NodeHandlingTests(const Table&, const typename Table::value_type&) [with Table = tbb::interface10::concurrent_map<int, int, std::less<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >; typename Table::value_type = std::pair<const int, int>]’
../../src/test/test_concurrent_associative_common.h:1474:41:   required from ‘void node_handling::TestNodeHandling() [with Table = tbb::interface10::concurrent_map<int, int, std::less<int>, local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> > >]’
../../src/test/test_concurrent_map.cpp:245:44:   required from here
../../include/tbb/internal/../internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >& local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >::operator=(const local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >&)’ is deprecated [-Wdeprecated-copy]
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_container_move_support.h:22,
                 from ../../src/test/test_concurrent_associative_common.h:21,
                 from ../../src/test/test_concurrent_ordered_common.h:17,
                 from ../../src/test/test_concurrent_map.cpp:43:
../../src/test/harness_allocator.h:441:5: note: because ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >’ has user-provided ‘local_counting_allocator<base_alloc_t, count_t>::local_counting_allocator(const local_counting_allocator<base_alloc_t, count_t>&) [with base_alloc_t = debug_allocator<std::pair<const int, int>, std::allocator>; count_t = tbb::atomic<long unsigned int>]’
  441 |     local_counting_allocator(const local_counting_allocator &a) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:398:7: warning: implicitly-declared ‘constexpr debug_allocator<std::pair<const int, int>, std::allocator>& debug_allocator<std::pair<const int, int>, std::allocator>::operator=(const debug_allocator<std::pair<const int, int>, std::allocator>&)’ is deprecated [-Wdeprecated-copy]
  398 | class local_counting_allocator : public base_alloc_t
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
../../src/test/harness_allocator.h:509:5: note: because ‘debug_allocator<std::pair<const int, int>, std::allocator>’ has user-provided ‘debug_allocator<T, Allocator>::debug_allocator(const debug_allocator<T, Allocator>&) [with T = std::pair<const int, int>; Allocator = std::allocator]’
  509 |     debug_allocator(const debug_allocator &a) throw() : base_allocator_type( a ) { }
      |     ^~~~~~~~~~~~~~~
In file included from ../../include/tbb/internal/../concurrent_vector.h:36,
                 from ../../include/tbb/internal/../enumerable_thread_specific.h:24,
                 from ../../include/tbb/internal/_concurrent_skip_list_impl.h:29,
                 from ../../include/tbb/concurrent_map.h:32,
                 from ../../src/test/test_concurrent_map.cpp:27:
../../include/tbb/internal/../internal/_allocator_traits.h:60:18: note: synthesized method ‘local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >& local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >::operator=(const local_counting_allocator<debug_allocator<std::pair<const int, int>, std::allocator> >&)’ first required here
   60 |     my_allocator = std::move(other_allocator);
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../include/tbb/internal/../internal/_allocator_traits.h: In instantiation of ‘void tbb::internal::allocator_move_assignment(MyAlloc&, OtherAlloc&, tbb::internal::traits_true_type) [with MyAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; OtherAlloc = static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>; tbb::internal::traits_true_type = std::integral_constant<bool, true>]’:
../../include/tbb/internal/_concurrent_skip_list_impl.h:1030:49:   required from ‘void tbb::interface10::internal::concurrent_skip_list<Traits>::internal_move_assign(tbb::interface10::internal::concurrent_skip_list<Traits>&&, std::true_type) [with Traits = tbb::interface10::map_traits<FooWithAssign, FooWithAssign, std::less<FooWithAssign>, tbb::interface10::internal::concurrent_geometric_level_generator<64>, 64, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>, false>; std::true_type = std::integral_constant<bool, true>]’
../../include/tbb/internal/_concurrent_skip_list_impl.h:341:13:   required from ‘tbb::interface10::internal::concurrent_skip_list<Traits>& tbb::interface10::internal::concurrent_skip_list<Traits>::operator=(tbb::interface10::internal::concurrent_skip_list<Traits>&&) [with Traits = tbb::interface10::map_traits<FooWithAssign, FooWithAssign, std::less<FooWithAssign>, tbb::interface10::internal::concurrent_geometric_level_generator<64>, 64, static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>, false>]’
../../include/tbb/concurrent_map.h:158:65:   required from ‘tbb::interface10::concurrent_map<Key, Value, Comp, Allocator>& tbb::interface10::concurrent_map<Key, Value, Comp, Allocator>::operator=(tbb::interface10::concurrent_map<Key, Value, Comp, Allocator>&&) [with Key = FooWithAssign; Value = FooWithAssign; Comp = std::less<FooWithAssign>; Allocator = static_shared_counting_allocator<Harness::int_to_type<643>, arena<FooWithAssign, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>]’
../../src/test/test_container_move_support.h:733:9:   required from ‘void TestMoveAssignOperatorPOCMAStateful() [with container_traits = co_map_type]’
../../src/test/test_container_move_support.h:794:58:   required from ‘void TestMoveAssignOperator() [with container_traits = co_map_type]’
../../src/test/test_concurrent_associative_common.h:804:45:   required from ‘void test_rvalue_ref_support(const char*) [with container_traits = co_map_type]’
../../src/test/test_concurrent_map.cpp:235:60:   required from here
../../include/tbb/internal/../internal/_allocator_traits.h:60:18: warning: implicitly-declared ‘constexpr static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>& static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>::operator=(const static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
In file included from ../../src/test/test_container_move_support.h:22,
                 from ../../src/test/test_concurrent_associative_common.h:21,
                 from ../../src/test/test_concurrent_ordered_common.h:17,
                 from ../../src/test/test_concurrent_map.cpp:43:
../../src/test/harness_allocator.h:364:5: note: because ‘static_shared_counting_allocator<Harness::int_to_type<643>, arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>, long unsigned int>’ has user-provided ‘static_shared_counting_allocator<tag, base_alloc_t, count_t>::static_shared_counting_allocator(const static_shared_counting_allocator<tag, base_alloc_t, count_t>&) [with tag = Harness::int_to_type<643>; base_alloc_t = arena<unsigned char, std::integral_constant<bool, true>, long unsigned int>; count_t = long unsigned int]’
  364 |     static_shared_counting_allocator(const static_shared_counting_allocator& src) throw()
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_parallel_for.cpp:38:
../../include/tbb/parallel_for.h: In instantiation of ‘tbb::interface9::internal::start_for<Range, Body, Partitioner>::start_for(const Range&, const Body&, Partitioner&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner]’:
../../include/tbb/parallel_for.h:91:33:   required from ‘static void tbb::interface9::internal::start_for<Range, Body, Partitioner>::run(const Range&, const Body&, Partitioner&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner]’
../../include/tbb/parallel_for.h:229:62:   required from ‘void tbb::parallel_for(const Range&, const Body&, tbb::affinity_partitioner&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body]’
../../src/test/test_parallel_for.cpp:518:22:   required from ‘void various_range_implementations::uniform_distribution::test() [with RangeType = test_partitioner_utils::TestRanges::BlockedRange; bool feedback = true; bool ensure_non_emptiness = false]’
../../src/test/test_parallel_for.cpp:530:90:   required from here
../../include/tbb/parallel_for.h:58:37: warning: implicitly-declared ‘constexpr various_range_implementations::Body::Body(const various_range_implementations::Body&)’ is deprecated [-Wdeprecated-copy]
   58 |             my_partition(partitioner)
      |                                     ^
../../src/test/test_parallel_for.cpp:487:11: note: because ‘various_range_implementations::Body’ has user-provided ‘various_range_implementations::Body& various_range_implementations::Body::operator=(const various_range_implementations::Body&)’
  487 |     Body& operator =(const Body&) { return *this; }
      |           ^~~~~~~~
In file included from ../../src/test/test_parallel_for.cpp:38:
../../include/tbb/parallel_for.h: In instantiation of ‘tbb::interface9::internal::start_for<Range, Body, Partitioner>::start_for(const Range&, const Body&, Partitioner&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = const tbb::static_partitioner]’:
../../include/tbb/parallel_for.h:91:33:   required from ‘static void tbb::interface9::internal::start_for<Range, Body, Partitioner>::run(const Range&, const Body&, Partitioner&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = const tbb::static_partitioner]’
../../include/tbb/parallel_for.h:222:66:   required from ‘void tbb::parallel_for(const Range&, const Body&, const tbb::static_partitioner&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body]’
../../src/test/test_parallel_for.cpp:519:22:   required from ‘void various_range_implementations::uniform_distribution::test() [with RangeType = test_partitioner_utils::TestRanges::BlockedRange; bool feedback = true; bool ensure_non_emptiness = false]’
../../src/test/test_parallel_for.cpp:530:90:   required from here
../../include/tbb/parallel_for.h:58:37: warning: implicitly-declared ‘constexpr various_range_implementations::Body::Body(const various_range_implementations::Body&)’ is deprecated [-Wdeprecated-copy]
   58 |             my_partition(partitioner)
      |                                     ^
../../src/test/test_parallel_for.cpp:487:11: note: because ‘various_range_implementations::Body’ has user-provided ‘various_range_implementations::Body& various_range_implementations::Body::operator=(const various_range_implementations::Body&)’
  487 |     Body& operator =(const Body&) { return *this; }
      |           ^~~~~~~~
In file included from ../../src/test/test_parallel_for.cpp:38:
../../include/tbb/parallel_for.h: In instantiation of ‘tbb::interface9::internal::start_for<Range, Body, Partitioner>::start_for(tbb::interface9::internal::start_for<Range, Body, Partitioner>&, typename Partitioner::split_type&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = const tbb::static_partitioner; typename Partitioner::split_type = tbb::proportional_split]’:
../../include/tbb/parallel_for.h:121:21:   required from ‘void tbb::interface9::internal::start_for<Range, Body, Partitioner>::offer_work(typename Partitioner::split_type&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = const tbb::static_partitioner; typename Partitioner::split_type = tbb::proportional_split]’
../../include/tbb/partitioner.h:252:21:   required from ‘void tbb::interface9::internal::partition_type_base<Partition>::execute(StartType&, Range&) [with StartType = tbb::interface9::internal::start_for<test_partitioner_utils::TestRanges::BlockedRange, various_range_implementations::Body, const tbb::static_partitioner>; Range = test_partitioner_utils::TestRanges::BlockedRange; Partition = tbb::interface9::internal::static_partition_type]’
../../include/tbb/parallel_for.h:142:9:   required from ‘tbb::task* tbb::interface9::internal::start_for<Range, Body, Partitioner>::execute() [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = const tbb::static_partitioner]’
../../include/tbb/parallel_for.h:140:11:   required from here
../../include/tbb/parallel_for.h:67:57: warning: implicitly-declared ‘constexpr various_range_implementations::Body::Body(const various_range_implementations::Body&)’ is deprecated [-Wdeprecated-copy]
   67 |             my_partition(parent_.my_partition, split_obj)
      |                                                         ^
../../src/test/test_parallel_for.cpp:487:11: note: because ‘various_range_implementations::Body’ has user-provided ‘various_range_implementations::Body& various_range_implementations::Body::operator=(const various_range_implementations::Body&)’
  487 |     Body& operator =(const Body&) { return *this; }
      |           ^~~~~~~~
In file included from ../../src/test/test_parallel_for.cpp:38:
../../include/tbb/parallel_for.h: In instantiation of ‘tbb::interface9::internal::start_for<Range, Body, Partitioner>::start_for(tbb::interface9::internal::start_for<Range, Body, Partitioner>&, typename Partitioner::split_type&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner; typename Partitioner::split_type = tbb::proportional_split]’:
../../include/tbb/parallel_for.h:121:21:   required from ‘void tbb::interface9::internal::start_for<Range, Body, Partitioner>::offer_work(typename Partitioner::split_type&) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner; typename Partitioner::split_type = tbb::proportional_split]’
../../include/tbb/partitioner.h:252:21:   required from ‘void tbb::interface9::internal::partition_type_base<Partition>::execute(StartType&, Range&) [with StartType = tbb::interface9::internal::start_for<test_partitioner_utils::TestRanges::BlockedRange, various_range_implementations::Body, tbb::affinity_partitioner>; Range = test_partitioner_utils::TestRanges::BlockedRange; Partition = tbb::interface9::internal::affinity_partition_type]’
../../include/tbb/parallel_for.h:142:9:   required from ‘tbb::task* tbb::interface9::internal::start_for<Range, Body, Partitioner>::execute() [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner]’
../../include/tbb/parallel_for.h:140:11:   required from here
../../include/tbb/parallel_for.h:67:57: warning: implicitly-declared ‘constexpr various_range_implementations::Body::Body(const various_range_implementations::Body&)’ is deprecated [-Wdeprecated-copy]
   67 |             my_partition(parent_.my_partition, split_obj)
      |                                                         ^
../../src/test/test_parallel_for.cpp:487:11: note: because ‘various_range_implementations::Body’ has user-provided ‘various_range_implementations::Body& various_range_implementations::Body::operator=(const various_range_implementations::Body&)’
  487 |     Body& operator =(const Body&) { return *this; }
      |           ^~~~~~~~
In file included from ../../src/test/test_parallel_for.cpp:38:
../../include/tbb/parallel_for.h: In instantiation of ‘tbb::interface9::internal::start_for<Range, Body, Partitioner>::start_for(tbb::interface9::internal::start_for<Range, Body, Partitioner>&, const Range&, tbb::interface9::internal::depth_t) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner; tbb::interface9::internal::depth_t = unsigned char]’:
../../include/tbb/parallel_for.h:125:21:   required from ‘void tbb::interface9::internal::start_for<Range, Body, Partitioner>::offer_work(const Range&, tbb::interface9::internal::depth_t) [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner; tbb::interface9::internal::depth_t = unsigned char]’
../../include/tbb/partitioner.h:431:25:   required from ‘void tbb::interface9::internal::dynamic_grainsize_mode<Mode>::work_balance(StartType&, Range&) [with StartType = tbb::interface9::internal::start_for<test_partitioner_utils::TestRanges::BlockedRange, various_range_implementations::Body, tbb::affinity_partitioner>; Range = test_partitioner_utils::TestRanges::BlockedRange; Mode = tbb::interface9::internal::linear_affinity_mode<tbb::interface9::internal::affinity_partition_type>]’
../../include/tbb/partitioner.h:256:9:   required from ‘void tbb::interface9::internal::partition_type_base<Partition>::execute(StartType&, Range&) [with StartType = tbb::interface9::internal::start_for<test_partitioner_utils::TestRanges::BlockedRange, various_range_implementations::Body, tbb::affinity_partitioner>; Range = test_partitioner_utils::TestRanges::BlockedRange; Partition = tbb::interface9::internal::affinity_partition_type]’
../../include/tbb/parallel_for.h:142:9:   required from ‘tbb::task* tbb::interface9::internal::start_for<Range, Body, Partitioner>::execute() [with Range = test_partitioner_utils::TestRanges::BlockedRange; Body = various_range_implementations::Body; Partitioner = tbb::affinity_partitioner]’
../../include/tbb/parallel_for.h:140:11:   required from here
../../include/tbb/parallel_for.h:77:55: warning: implicitly-declared ‘constexpr various_range_implementations::Body::Body(const various_range_implementations::Body&)’ is deprecated [-Wdeprecated-copy]
   77 |             my_partition(parent_.my_partition, split())
      |                                                       ^
../../src/test/test_parallel_for.cpp:487:11: note: because ‘various_range_implementations::Body’ has user-provided ‘various_range_implementations::Body& various_range_implementations::Body::operator=(const various_range_implementations::Body&)’
  487 |     Body& operator =(const Body&) { return *this; }
      |           ^~~~~~~~
In file included from ../../src/test/test_container_move_support.h:22,
                 from ../../src/test/test_concurrent_associative_common.h:21,
                 from ../../src/test/test_concurrent_ordered_common.h:17,
                 from ../../src/test/test_concurrent_map.cpp:43:
../../src/test/harness_allocator.h: In function ‘void test_scoped_allocator() [with Map = tbb::interface10::concurrent_map]’:
../../src/test/harness_allocator.h:816:49: warning: ‘v1.allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  816 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
../../src/test/harness_allocator.h:816:49: warning: ‘*((void*)(& v1)+8).allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  816 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
../../src/test/harness_allocator.h:816:49: warning: ‘v2.allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  816 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
../../src/test/harness_allocator.h:818:49: warning: ‘*((void*)(& v2)+8).allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  818 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
../../src/test/harness_allocator.h: In function ‘void test_scoped_allocator() [with Map = tbb::interface10::concurrent_multimap]’:
../../src/test/harness_allocator.h:816:49: warning: ‘v1.allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  816 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
../../src/test/harness_allocator.h:816:49: warning: ‘*((void*)(& v1)+8).allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  816 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
../../src/test/harness_allocator.h:816:49: warning: ‘v2.allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  816 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
../../src/test/harness_allocator.h:818:49: warning: ‘*((void*)(& v2)+8).allocator_aware_data<std::scoped_allocator_adaptor<tbb::tbb_allocator<int> > >::my_value’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  818 |         : my_allocator(allocator), my_value(rhs.my_value) {}
      |                                             ~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_while.cpp:17:
../../include/tbb/parallel_while.h: In instantiation of ‘tbb::internal::while_iteration_task<Body>::while_iteration_task(const typename Body::argument_type&, const Body&) [with Body = MatrixMultiplyBody; typename Body::argument_type = MinimalArgumentType]’:
../../include/tbb/parallel_while.h:179:26:   required from ‘void tbb::parallel_while<Body>::add(const value_type&) [with Body = MatrixMultiplyBody; tbb::parallel_while<Body>::value_type = MinimalArgumentType]’
../../src/test/test_parallel_while.cpp:79:33:   required from here
../../include/tbb/parallel_while.h:48:42: warning: implicitly-declared ‘constexpr MinimalArgumentType::MinimalArgumentType(const MinimalArgumentType&)’ is deprecated [-Wdeprecated-copy]
   48 |             my_body(body), my_value(value)
      |                                          ^
../../src/test/test_parallel_while.cpp:26:10: note: because ‘MinimalArgumentType’ has user-provided ‘void MinimalArgumentType::operator=(const MinimalArgumentType&)’
   26 |     void operator=( const MinimalArgumentType& );
      |          ^~~~~~~~
In file included from ../../src/test/test_parallel_while.cpp:17:
../../include/tbb/parallel_while.h: In instantiation of ‘tbb::task* tbb::internal::while_iteration_task<Body>::execute() [with Body = MatrixMultiplyBody]’:
../../include/tbb/parallel_while.h:43:15:   required from here
../../include/tbb/parallel_while.h:44:20: warning: implicitly-declared ‘constexpr MinimalArgumentType::MinimalArgumentType(const MinimalArgumentType&)’ is deprecated [-Wdeprecated-copy]
   44 |             my_body(my_value);
      |             ~~~~~~~^~~~~~~~~~
../../src/test/test_parallel_while.cpp:26:10: note: because ‘MinimalArgumentType’ has user-provided ‘void MinimalArgumentType::operator=(const MinimalArgumentType&)’
   26 |     void operator=( const MinimalArgumentType& );
      |          ^~~~~~~~
../../src/test/test_parallel_while.cpp:74:36: note:   initializing argument 1 of ‘void MatrixMultiplyBody::operator()(MatrixMultiplyBody::argument_type) const’
   74 |     void operator()( argument_type i_arg ) const {
      |                      ~~~~~~~~~~~~~~^~~~~
In file included from ../../src/test/test_parallel_do.cpp:17:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstRefVersion; Item = value_t]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstRefVersion; Item = value_t]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstRefVersion; Item = value_t]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::ConstRandomIterator<value_t>& Harness::ConstRandomIterator<value_t>::operator=(const Harness::ConstRandomIterator<value_t>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:45:
../../src/test/harness_iterator.h:148:5: note: because ‘Harness::ConstRandomIterator<value_t>’ has user-provided ‘Harness::ConstRandomIterator<T>::ConstRandomIterator(const Harness::ConstRandomIterator<T>&) [with T = value_t]’
  148 |     ConstRandomIterator ( const ConstRandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:17:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstVersion; Item = value_t]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstVersion; Item = value_t]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstVersion; Item = value_t]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::ConstRandomIterator<value_t>& Harness::ConstRandomIterator<value_t>::operator=(const Harness::ConstRandomIterator<value_t>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:45:
../../src/test/harness_iterator.h:148:5: note: because ‘Harness::ConstRandomIterator<value_t>’ has user-provided ‘Harness::ConstRandomIterator<T>::ConstRandomIterator(const Harness::ConstRandomIterator<T>&) [with T = value_t]’
  148 |     ConstRandomIterator ( const ConstRandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:17:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody; Item = value_t]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody; Item = value_t]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody; Item = value_t]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::ConstRandomIterator<value_t>& Harness::ConstRandomIterator<value_t>::operator=(const Harness::ConstRandomIterator<value_t>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:45:
../../src/test/harness_iterator.h:148:5: note: because ‘Harness::ConstRandomIterator<value_t>’ has user-provided ‘Harness::ConstRandomIterator<T>::ConstRandomIterator(const Harness::ConstRandomIterator<T>&) [with T = value_t]’
  148 |     ConstRandomIterator ( const ConstRandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:17:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = FakeTaskGeneratorBody_ConstRefVersion; Item = value_t]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::ConstRandomIterator<value_t>; Body = FakeTaskGeneratorBody_ConstRefVersion; Item = value_t]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = FakeTaskGeneratorBody_ConstRefVersion; Item = value_t]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::ConstRandomIterator<value_t>& Harness::ConstRandomIterator<value_t>::operator=(const Harness::ConstRandomIterator<value_t>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:45:
../../src/test/harness_iterator.h:148:5: note: because ‘Harness::ConstRandomIterator<value_t>’ has user-provided ‘Harness::ConstRandomIterator<T>::ConstRandomIterator(const Harness::ConstRandomIterator<T>&) [with T = value_t]’
  148 |     ConstRandomIterator ( const ConstRandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:17:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = FakeTaskGeneratorBody; Item = value_t]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::ConstRandomIterator<value_t>; Body = FakeTaskGeneratorBody; Item = value_t]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = FakeTaskGeneratorBody; Item = value_t]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::ConstRandomIterator<value_t>& Harness::ConstRandomIterator<value_t>::operator=(const Harness::ConstRandomIterator<value_t>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:45:
../../src/test/harness_iterator.h:148:5: note: because ‘Harness::ConstRandomIterator<value_t>’ has user-provided ‘Harness::ConstRandomIterator<T>::ConstRandomIterator(const Harness::ConstRandomIterator<T>&) [with T = value_t]’
  148 |     ConstRandomIterator ( const ConstRandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:17:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstVolatileRefVersion; Item = value_t]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstVolatileRefVersion; Item = value_t]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::ConstRandomIterator<value_t>; Body = TaskGeneratorBody_ConstVolatileRefVersion; Item = value_t]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::ConstRandomIterator<value_t>& Harness::ConstRandomIterator<value_t>::operator=(const Harness::ConstRandomIterator<value_t>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_do.cpp:45:
../../src/test/harness_iterator.h:148:5: note: because ‘Harness::ConstRandomIterator<value_t>’ has user-provided ‘Harness::ConstRandomIterator<T>::ConstRandomIterator(const Harness::ConstRandomIterator<T>&) [with T = value_t]’
  148 |     ConstRandomIterator ( const ConstRandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyWithThrowingFeederTasks; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyWithThrowingFeederTasks; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyWithThrowingFeederTasks; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoWithEhBodyWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoWithEhBodyWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoWithEhBodyWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoWithEhBody<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoWithEhBody<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoWithEhBody<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithIsolatedCtxWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithIsolatedCtxWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithIsolatedCtxWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithIsolatedCtx<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithIsolatedCtx<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithIsolatedCtx<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBodyWithFeeder<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBody<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBody<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = OuterParDoBody<Harness::RandomIterator<long unsigned int> >; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = SimpleParDoBodyWithFeeder; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = SimpleParDoBodyWithFeeder; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = SimpleParDoBodyWithFeeder; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = SimpleParDoBody; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = SimpleParDoBody; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = SimpleParDoBody; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancelWithFeeder; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancelWithFeeder; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancelWithFeeder; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel2; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel2; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel2; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:31:
../../include/tbb/parallel_do.h: In instantiation of ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run_for_random_access_iterator() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel2WithFeeder; Item = long unsigned int]’:
../../include/tbb/parallel_do.h:374:71:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::run(std::random_access_iterator_tag*) [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel2WithFeeder; Item = long unsigned int]’
../../include/tbb/parallel_do.h:325:45:   required from ‘tbb::task* tbb::interface9::internal::do_task_iter<Iterator, Body, Item>::execute() [with Iterator = Harness::RandomIterator<long unsigned int>; Body = ParDoBodyToCancel2WithFeeder; Item = long unsigned int]’
../../include/tbb/parallel_do.h:322:15:   required from here
../../include/tbb/parallel_do.h:388:25: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  388 |                 my_last = middle;
      |                 ~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_eh_algorithms.cpp:588:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../include/tbb/parallel_for.h:26,
                 from ../../include/tbb/parallel_for_each.h:21,
                 from ../../src/test/test_parallel_for_each.cpp:21:
../../include/tbb/blocked_range.h: In instantiation of ‘static Value tbb::blocked_range<Value>::do_split(tbb::blocked_range<Value>&, tbb::split) [with Value = Harness::RandomIterator<long unsigned int>]’:
../../include/tbb/blocked_range.h:100:26:   required from ‘tbb::blocked_range<Value>::blocked_range(tbb::blocked_range<Value>&, tbb::split) [with Value = Harness::RandomIterator<long unsigned int>]’
../../include/tbb/parallel_for.h:67:57:   required from ‘tbb::interface9::internal::start_for<Range, Body, Partitioner>::start_for(tbb::interface9::internal::start_for<Range, Body, Partitioner>&, typename Partitioner::split_type&) [with Range = tbb::blocked_range<Harness::RandomIterator<long unsigned int> >; Body = tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int&), Harness::RandomIterator<long unsigned int> >; Partitioner = const tbb::auto_partitioner; typename Partitioner::split_type = tbb::split]’
../../include/tbb/parallel_for.h:121:21:   required from ‘void tbb::interface9::internal::start_for<Range, Body, Partitioner>::offer_work(typename Partitioner::split_type&) [with Range = tbb::blocked_range<Harness::RandomIterator<long unsigned int> >; Body = tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int&), Harness::RandomIterator<long unsigned int> >; Partitioner = const tbb::auto_partitioner; typename Partitioner::split_type = tbb::split]’
../../include/tbb/partitioner.h:252:21:   required from ‘void tbb::interface9::internal::partition_type_base<Partition>::execute(StartType&, Range&) [with StartType = tbb::interface9::internal::start_for<tbb::blocked_range<Harness::RandomIterator<long unsigned int> >, tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int&), Harness::RandomIterator<long unsigned int> >, const tbb::auto_partitioner>; Range = tbb::blocked_range<Harness::RandomIterator<long unsigned int> >; Partition = tbb::interface9::internal::auto_partition_type]’
../../include/tbb/parallel_for.h:142:9:   required from ‘tbb::task* tbb::interface9::internal::start_for<Range, Body, Partitioner>::execute() [with Range = tbb::blocked_range<Harness::RandomIterator<long unsigned int> >; Body = tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int&), Harness::RandomIterator<long unsigned int> >; Partitioner = const tbb::auto_partitioner]’
../../include/tbb/parallel_for.h:140:11:   required from here
../../include/tbb/blocked_range.h:135:18: warning: implicitly-declared ‘constexpr Harness::RandomIterator<long unsigned int>& Harness::RandomIterator<long unsigned int>::operator=(const Harness::RandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  135 |         r.my_end = middle;
      |         ~~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_for_each.cpp:25:
../../src/test/harness_iterator.h:127:5: note: because ‘Harness::RandomIterator<long unsigned int>’ has user-provided ‘Harness::RandomIterator<T>::RandomIterator(const Harness::RandomIterator<T>&) [with T = long unsigned int]’
  127 |     RandomIterator ( const RandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~
In file included from ../../include/tbb/parallel_for.h:26,
                 from ../../include/tbb/parallel_for_each.h:21,
                 from ../../src/test/test_parallel_for_each.cpp:21:
../../include/tbb/blocked_range.h: In instantiation of ‘static Value tbb::blocked_range<Value>::do_split(tbb::blocked_range<Value>&, tbb::split) [with Value = Harness::ConstRandomIterator<long unsigned int>]’:
../../include/tbb/blocked_range.h:100:26:   required from ‘tbb::blocked_range<Value>::blocked_range(tbb::blocked_range<Value>&, tbb::split) [with Value = Harness::ConstRandomIterator<long unsigned int>]’
../../include/tbb/parallel_for.h:67:57:   required from ‘tbb::interface9::internal::start_for<Range, Body, Partitioner>::start_for(tbb::interface9::internal::start_for<Range, Body, Partitioner>&, typename Partitioner::split_type&) [with Range = tbb::blocked_range<Harness::ConstRandomIterator<long unsigned int> >; Body = tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int), Harness::ConstRandomIterator<long unsigned int> >; Partitioner = const tbb::auto_partitioner; typename Partitioner::split_type = tbb::split]’
../../include/tbb/parallel_for.h:121:21:   required from ‘void tbb::interface9::internal::start_for<Range, Body, Partitioner>::offer_work(typename Partitioner::split_type&) [with Range = tbb::blocked_range<Harness::ConstRandomIterator<long unsigned int> >; Body = tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int), Harness::ConstRandomIterator<long unsigned int> >; Partitioner = const tbb::auto_partitioner; typename Partitioner::split_type = tbb::split]’
../../include/tbb/partitioner.h:252:21:   required from ‘void tbb::interface9::internal::partition_type_base<Partition>::execute(StartType&, Range&) [with StartType = tbb::interface9::internal::start_for<tbb::blocked_range<Harness::ConstRandomIterator<long unsigned int> >, tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int), Harness::ConstRandomIterator<long unsigned int> >, const tbb::auto_partitioner>; Range = tbb::blocked_range<Harness::ConstRandomIterator<long unsigned int> >; Partition = tbb::interface9::internal::auto_partition_type]’
../../include/tbb/parallel_for.h:142:9:   required from ‘tbb::task* tbb::interface9::internal::start_for<Range, Body, Partitioner>::execute() [with Range = tbb::blocked_range<Harness::ConstRandomIterator<long unsigned int> >; Body = tbb::internal::parallel_for_each_body_for<void (*)(long unsigned int), Harness::ConstRandomIterator<long unsigned int> >; Partitioner = const tbb::auto_partitioner]’
../../include/tbb/parallel_for.h:140:11:   required from here
../../include/tbb/blocked_range.h:135:18: warning: implicitly-declared ‘constexpr Harness::ConstRandomIterator<long unsigned int>& Harness::ConstRandomIterator<long unsigned int>::operator=(const Harness::ConstRandomIterator<long unsigned int>&)’ is deprecated [-Wdeprecated-copy]
  135 |         r.my_end = middle;
      |         ~~~~~~~~~^~~~~~~~
In file included from ../../src/test/test_parallel_for_each.cpp:25:
../../src/test/harness_iterator.h:148:5: note: because ‘Harness::ConstRandomIterator<long unsigned int>’ has user-provided ‘Harness::ConstRandomIterator<T>::ConstRandomIterator(const Harness::ConstRandomIterator<T>&) [with T = long unsigned int]’
  148 |     ConstRandomIterator ( const ConstRandomIterator& r ) : my_ptr(r.my_ptr){}
      |     ^~~~~~~~~~~~~~~~~~~
TBB Warning: The number of workers is currently limited to 0. The request for 1 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 1 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 6 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 6 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 6 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 6 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 6 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 6 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 8 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 8 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 8 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

TBB Warning: The number of workers is currently limited to 0. The request for 8 workers is ignored. Further requests for more workers will be silently ignored until the limit changes.

