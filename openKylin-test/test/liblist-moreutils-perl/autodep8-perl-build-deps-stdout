t/pureperl/Import.t ............... 
ok 1 - main->can('any')
ok 2 - main->can('all')
ok 3 - main->can('none')
ok 4 - main->can('notall')
ok 5 - main->can('one')
ok 6 - main->can('any_u')
ok 7 - main->can('all_u')
ok 8 - main->can('none_u')
ok 9 - main->can('notall_u')
ok 10 - main->can('one_u')
ok 11 - main->can('true')
ok 12 - main->can('false')
ok 13 - main->can('insert_after')
ok 14 - main->can('insert_after_string')
ok 15 - main->can('apply')
ok 16 - main->can('indexes')
ok 17 - main->can('after')
ok 18 - main->can('after_incl')
ok 19 - main->can('before')
ok 20 - main->can('before_incl')
ok 21 - main->can('firstidx')
ok 22 - main->can('lastidx')
ok 23 - main->can('onlyidx')
ok 24 - main->can('firstval')
ok 25 - main->can('lastval')
ok 26 - main->can('onlyval')
ok 27 - main->can('firstres')
ok 28 - main->can('lastres')
ok 29 - main->can('onlyres')
ok 30 - main->can('singleton')
ok 31 - main->can('each_array')
ok 32 - main->can('each_arrayref')
ok 33 - main->can('pairwise')
ok 34 - main->can('natatime')
ok 35 - main->can('mesh')
ok 36 - main->can('uniq')
ok 37 - main->can('minmax')
ok 38 - main->can('part')
ok 39 - main->can('bsearch')
ok 40 - main->can('bsearchidx')
ok 41 - main->can('sort_by')
ok 42 - main->can('nsort_by')
ok 43 - main->can('last_index')
ok 44 - main->can('first_index')
ok 45 - main->can('zip')
ok 46 - main->can('last_value')
ok 47 - main->can('first_value')
ok 48 - main->can('only_value')
ok 49 - main->can('first_result')
ok 50 - main->can('last_result')
ok 51 - main->can('only_index')
ok 52 - main->can('bsearch_index')
ok 53 - main->can('only_result')
ok 54 - main->can('distinct')
1..54
ok
t/pureperl/XS.t ................... 
ok 1 - _XScompiled
1..1
ok
t/pureperl/after.t ................ 
ok 1 - after 5
ok 2 - Got the null list
ok 3 - after /b/
ok 4 - No memory leaks in after (leaks 0 <= 0)
ok 5 - after without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 366.
ok 6 - check XS implementation doesn't mess up stack
1..6
ok
t/pureperl/after_incl.t ........... 
ok 1 - after 5, included
ok 2 - Got the null list
ok 3 - after /b/, included
ok 4 - No memory leaks in after_incl (leaks 0 <= 0)
ok 5 - after_incl without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 375.
1..5
ok
t/pureperl/all.t .................. 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_true ()
ok 5 - No memory leaks in all (leaks 0 <= 0)
ok 6 - all without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 40.
1..6
ok
t/pureperl/all_u.t ................ 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_undef()
ok 5 - No memory leaks in all_u (leaks 0 <= 0)
ok 6 - all_u without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 88.
1..6
ok
t/pureperl/any.t .................. 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_true ()
ok 6 - is_false()
ok 7 - No memory leaks in any (leaks 0 <= 0)
ok 8 - No memory leaks in any with a coderef that dies (leaks 0 <= 0)
ok 9 - any without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 30.
1..9
ok
t/pureperl/any_u.t ................ 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_true ()
ok 6 - is_undef()
ok 7 - No memory leaks in any_u (leaks 0 <= 0)
ok 8 - No memory leaks in any_u with a coderef that dies (leaks 0 <= 0)
ok 9 - any_u without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 80.
1..9
ok
t/pureperl/apply.t ................ 
ok 1 - apply(null) returns undef
ok 2 - apply(null) returns null list
ok 3 - original numbers untouched
ok 4 - returned numbers increased
ok 5 - original strings untouched
ok 6 - returned strings stripped
ok 7
ok 8 # skip PurePerl will not fail here ...
ok 9
ok 10
ok 11 - No memory leaks in apply (leaks 0 <= 0)
ok 12 - No memory leaks in dying callback during apply (leaks 0 <= 0)
ok 13 - apply without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 353.
1..13
ok
t/pureperl/arrayify.t ............. 
ok 1 - linear flattened int mix i
ok 2 - linear flattened int mix ii
ok 3 - arrayified struct with one element
ok 4 - arrayified struct with three elements
ok 5 - linear flattened magic int mix
ok 6 - linear flattened magic int mixture
ok 7 - linear flattened string mix i
ok 8 - No memory leaks in arrayify (leaks 0 <= 0)
ok 9 - No memory leaks in arrayify magic (leaks 0 <= 0)
ok 10 - No memory leaks in arrayify with exception in overloading stringify at begin (leaks 0 <= 0)
ok 11 - No memory leaks in arrayify with exception in overloading stringify at end (leaks 0 <= 0)
1..11
ok
t/pureperl/before.t ............... 
ok 1 - before 5
ok 2 - Got the null list
ok 3 - before /f/
ok 4 - No memory leaks in before (leaks 0 <= 0)
ok 5 - before without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 382.
1..5
ok
t/pureperl/before_incl.t .......... 
ok 1 - before 5, included
ok 2
ok 3 - before /f/, included
ok 4 - No memory leaks in before_incl (leaks 0 <= 0)
ok 5 - before_incl without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 394.
1..5
ok
t/pureperl/binsert.t .............. 
ok 1 - Inserting into empty list
ok 2 - Inserting into one-item list
ok 3 - binsert odd elements into even list succeeded
ok 4 - binsert odd elements reversely into even list succeeded
ok 5 - binsert even elements into odd list succeeded
ok 6 - binsert even elements reversely into odd list succeeded
ok 7 - binsert existing even elements into even list succeeded
ok 8 - binsert existing even elements reversely into even list succeeded
ok 9 - No memory leaks in binsert random (leaks 0 <= 0)
ok 10 - No memory leaks in binsert existing random (leaks 0 <= 0)
ok 11 - No memory leaks in binsert odd into even (leaks 0 <= 0)
ok 12 - No memory leaks in binsert even into odd (leaks 0 <= 0)
ok 13 - No memory leaks in binsert odd into odd (leaks 0 <= 0)
ok 14 - No memory leaks in binsert even into even (leaks 0 <= 0)
ok 15 - No memory leaks in binsert random with stack-growing (leaks 0 <= 0)
ok 16 - No memory leaks in binsert odd with stack-growing (leaks 0 <= 0)
ok 17 - No memory leaks in binsert even with stack-growing (leaks 0 <= 0)
ok 18 - No memory leaks in binsert with stack-growing and exception (leaks 0 <= 0)
ok 19 - binsert without sub is_dying()
# Can't use string ("4") as an ARRAY ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 843.
1..19
ok
t/pureperl/bremove.t .............. 
ok 1 - 1 in order removed
ok 2 - 3 in order removed
ok 3 - 5 in order removed
ok 4 - 7 in order removed
ok 5 - 9 in order removed
ok 6 - 11 in order removed
ok 7 - 13 in order removed
ok 8 - 15 in order removed
ok 9 - 17 in order removed
ok 10 - 19 in order removed
ok 11 - 21 in order removed
ok 12 - 23 in order removed
ok 13 - 25 in order removed
ok 14 - 27 in order removed
ok 15 - 29 in order removed
ok 16 - 31 in order removed
ok 17 - 33 in order removed
ok 18 - 35 in order removed
ok 19 - 37 in order removed
ok 20 - 39 in order removed
ok 21 - 41 in order removed
ok 22 - 43 in order removed
ok 23 - 45 in order removed
ok 24 - 47 in order removed
ok 25 - 49 in order removed
ok 26 - 51 in order removed
ok 27 - 53 in order removed
ok 28 - 55 in order removed
ok 29 - 57 in order removed
ok 30 - 59 in order removed
ok 31 - 61 in order removed
ok 32 - 63 in order removed
ok 33 - 65 in order removed
ok 34 - 67 in order removed
ok 35 - 69 in order removed
ok 36 - 71 in order removed
ok 37 - 73 in order removed
ok 38 - 75 in order removed
ok 39 - 77 in order removed
ok 40 - 79 in order removed
ok 41 - 81 in order removed
ok 42 - 83 in order removed
ok 43 - 85 in order removed
ok 44 - 87 in order removed
ok 45 - 89 in order removed
ok 46 - 91 in order removed
ok 47 - 93 in order removed
ok 48 - 95 in order removed
ok 49 - 97 in order removed
ok 50 - 99 in order removed
ok 51 - 101 in order removed
ok 52 - 103 in order removed
ok 53 - 105 in order removed
ok 54 - 107 in order removed
ok 55 - 109 in order removed
ok 56 - 111 in order removed
ok 57 - 113 in order removed
ok 58 - 115 in order removed
ok 59 - 117 in order removed
ok 60 - 119 in order removed
ok 61 - 121 in order removed
ok 62 - 123 in order removed
ok 63 - 125 in order removed
ok 64 - 127 in order removed
ok 65 - 129 in order removed
ok 66 - 131 in order removed
ok 67 - 133 in order removed
ok 68 - 135 in order removed
ok 69 - 137 in order removed
ok 70 - 139 in order removed
ok 71 - 141 in order removed
ok 72 - 143 in order removed
ok 73 - 145 in order removed
ok 74 - 147 in order removed
ok 75 - 149 in order removed
ok 76 - 151 in order removed
ok 77 - 153 in order removed
ok 78 - 155 in order removed
ok 79 - 157 in order removed
ok 80 - 159 in order removed
ok 81 - 161 in order removed
ok 82 - 163 in order removed
ok 83 - 165 in order removed
ok 84 - 167 in order removed
ok 85 - 169 in order removed
ok 86 - 171 in order removed
ok 87 - 173 in order removed
ok 88 - 175 in order removed
ok 89 - 177 in order removed
ok 90 - 179 in order removed
ok 91 - 181 in order removed
ok 92 - 183 in order removed
ok 93 - 185 in order removed
ok 94 - 187 in order removed
ok 95 - 189 in order removed
ok 96 - 191 in order removed
ok 97 - 193 in order removed
ok 98 - 195 in order removed
ok 99 - 197 in order removed
ok 100 - 199 in order removed
ok 101 - bremove all odd elements succeeded
ok 102 - 199 reverse ordered removed
ok 103 - 197 reverse ordered removed
ok 104 - 195 reverse ordered removed
ok 105 - 193 reverse ordered removed
ok 106 - 191 reverse ordered removed
ok 107 - 189 reverse ordered removed
ok 108 - 187 reverse ordered removed
ok 109 - 185 reverse ordered removed
ok 110 - 183 reverse ordered removed
ok 111 - 181 reverse ordered removed
ok 112 - 179 reverse ordered removed
ok 113 - 177 reverse ordered removed
ok 114 - 175 reverse ordered removed
ok 115 - 173 reverse ordered removed
ok 116 - 171 reverse ordered removed
ok 117 - 169 reverse ordered removed
ok 118 - 167 reverse ordered removed
ok 119 - 165 reverse ordered removed
ok 120 - 163 reverse ordered removed
ok 121 - 161 reverse ordered removed
ok 122 - 159 reverse ordered removed
ok 123 - 157 reverse ordered removed
ok 124 - 155 reverse ordered removed
ok 125 - 153 reverse ordered removed
ok 126 - 151 reverse ordered removed
ok 127 - 149 reverse ordered removed
ok 128 - 147 reverse ordered removed
ok 129 - 145 reverse ordered removed
ok 130 - 143 reverse ordered removed
ok 131 - 141 reverse ordered removed
ok 132 - 139 reverse ordered removed
ok 133 - 137 reverse ordered removed
ok 134 - 135 reverse ordered removed
ok 135 - 133 reverse ordered removed
ok 136 - 131 reverse ordered removed
ok 137 - 129 reverse ordered removed
ok 138 - 127 reverse ordered removed
ok 139 - 125 reverse ordered removed
ok 140 - 123 reverse ordered removed
ok 141 - 121 reverse ordered removed
ok 142 - 119 reverse ordered removed
ok 143 - 117 reverse ordered removed
ok 144 - 115 reverse ordered removed
ok 145 - 113 reverse ordered removed
ok 146 - 111 reverse ordered removed
ok 147 - 109 reverse ordered removed
ok 148 - 107 reverse ordered removed
ok 149 - 105 reverse ordered removed
ok 150 - 103 reverse ordered removed
ok 151 - 101 reverse ordered removed
ok 152 - 99 reverse ordered removed
ok 153 - 97 reverse ordered removed
ok 154 - 95 reverse ordered removed
ok 155 - 93 reverse ordered removed
ok 156 - 91 reverse ordered removed
ok 157 - 89 reverse ordered removed
ok 158 - 87 reverse ordered removed
ok 159 - 85 reverse ordered removed
ok 160 - 83 reverse ordered removed
ok 161 - 81 reverse ordered removed
ok 162 - 79 reverse ordered removed
ok 163 - 77 reverse ordered removed
ok 164 - 75 reverse ordered removed
ok 165 - 73 reverse ordered removed
ok 166 - 71 reverse ordered removed
ok 167 - 69 reverse ordered removed
ok 168 - 67 reverse ordered removed
ok 169 - 65 reverse ordered removed
ok 170 - 63 reverse ordered removed
ok 171 - 61 reverse ordered removed
ok 172 - 59 reverse ordered removed
ok 173 - 57 reverse ordered removed
ok 174 - 55 reverse ordered removed
ok 175 - 53 reverse ordered removed
ok 176 - 51 reverse ordered removed
ok 177 - 49 reverse ordered removed
ok 178 - 47 reverse ordered removed
ok 179 - 45 reverse ordered removed
ok 180 - 43 reverse ordered removed
ok 181 - 41 reverse ordered removed
ok 182 - 39 reverse ordered removed
ok 183 - 37 reverse ordered removed
ok 184 - 35 reverse ordered removed
ok 185 - 33 reverse ordered removed
ok 186 - 31 reverse ordered removed
ok 187 - 29 reverse ordered removed
ok 188 - 27 reverse ordered removed
ok 189 - 25 reverse ordered removed
ok 190 - 23 reverse ordered removed
ok 191 - 21 reverse ordered removed
ok 192 - 19 reverse ordered removed
ok 193 - 17 reverse ordered removed
ok 194 - 15 reverse ordered removed
ok 195 - 13 reverse ordered removed
ok 196 - 11 reverse ordered removed
ok 197 - 9 reverse ordered removed
ok 198 - 7 reverse ordered removed
ok 199 - 5 reverse ordered removed
ok 200 - 3 reverse ordered removed
ok 201 - 1 reverse ordered removed
ok 202 - bremove all odd elements reversely succeeded
ok 203 - 2 in order removed
ok 204 - 4 in order removed
ok 205 - 6 in order removed
ok 206 - 8 in order removed
ok 207 - 10 in order removed
ok 208 - 12 in order removed
ok 209 - 14 in order removed
ok 210 - 16 in order removed
ok 211 - 18 in order removed
ok 212 - 20 in order removed
ok 213 - 22 in order removed
ok 214 - 24 in order removed
ok 215 - 26 in order removed
ok 216 - 28 in order removed
ok 217 - 30 in order removed
ok 218 - 32 in order removed
ok 219 - 34 in order removed
ok 220 - 36 in order removed
ok 221 - 38 in order removed
ok 222 - 40 in order removed
ok 223 - 42 in order removed
ok 224 - 44 in order removed
ok 225 - 46 in order removed
ok 226 - 48 in order removed
ok 227 - 50 in order removed
ok 228 - 52 in order removed
ok 229 - 54 in order removed
ok 230 - 56 in order removed
ok 231 - 58 in order removed
ok 232 - 60 in order removed
ok 233 - 62 in order removed
ok 234 - 64 in order removed
ok 235 - 66 in order removed
ok 236 - 68 in order removed
ok 237 - 70 in order removed
ok 238 - 72 in order removed
ok 239 - 74 in order removed
ok 240 - 76 in order removed
ok 241 - 78 in order removed
ok 242 - 80 in order removed
ok 243 - 82 in order removed
ok 244 - 84 in order removed
ok 245 - 86 in order removed
ok 246 - 88 in order removed
ok 247 - 90 in order removed
ok 248 - 92 in order removed
ok 249 - 94 in order removed
ok 250 - 96 in order removed
ok 251 - 98 in order removed
ok 252 - 100 in order removed
ok 253 - 102 in order removed
ok 254 - 104 in order removed
ok 255 - 106 in order removed
ok 256 - 108 in order removed
ok 257 - 110 in order removed
ok 258 - 112 in order removed
ok 259 - 114 in order removed
ok 260 - 116 in order removed
ok 261 - 118 in order removed
ok 262 - 120 in order removed
ok 263 - 122 in order removed
ok 264 - 124 in order removed
ok 265 - 126 in order removed
ok 266 - 128 in order removed
ok 267 - 130 in order removed
ok 268 - 132 in order removed
ok 269 - 134 in order removed
ok 270 - 136 in order removed
ok 271 - 138 in order removed
ok 272 - 140 in order removed
ok 273 - 142 in order removed
ok 274 - 144 in order removed
ok 275 - 146 in order removed
ok 276 - 148 in order removed
ok 277 - 150 in order removed
ok 278 - 152 in order removed
ok 279 - 154 in order removed
ok 280 - 156 in order removed
ok 281 - 158 in order removed
ok 282 - 160 in order removed
ok 283 - 162 in order removed
ok 284 - 164 in order removed
ok 285 - 166 in order removed
ok 286 - 168 in order removed
ok 287 - 170 in order removed
ok 288 - 172 in order removed
ok 289 - 174 in order removed
ok 290 - 176 in order removed
ok 291 - 178 in order removed
ok 292 - 180 in order removed
ok 293 - 182 in order removed
ok 294 - 184 in order removed
ok 295 - 186 in order removed
ok 296 - 188 in order removed
ok 297 - 190 in order removed
ok 298 - 192 in order removed
ok 299 - 194 in order removed
ok 300 - 196 in order removed
ok 301 - 198 in order removed
ok 302 - 200 in order removed
ok 303 - bremove all even elements succeeded
ok 304 - 200 reverse ordered removed
ok 305 - 198 reverse ordered removed
ok 306 - 196 reverse ordered removed
ok 307 - 194 reverse ordered removed
ok 308 - 192 reverse ordered removed
ok 309 - 190 reverse ordered removed
ok 310 - 188 reverse ordered removed
ok 311 - 186 reverse ordered removed
ok 312 - 184 reverse ordered removed
ok 313 - 182 reverse ordered removed
ok 314 - 180 reverse ordered removed
ok 315 - 178 reverse ordered removed
ok 316 - 176 reverse ordered removed
ok 317 - 174 reverse ordered removed
ok 318 - 172 reverse ordered removed
ok 319 - 170 reverse ordered removed
ok 320 - 168 reverse ordered removed
ok 321 - 166 reverse ordered removed
ok 322 - 164 reverse ordered removed
ok 323 - 162 reverse ordered removed
ok 324 - 160 reverse ordered removed
ok 325 - 158 reverse ordered removed
ok 326 - 156 reverse ordered removed
ok 327 - 154 reverse ordered removed
ok 328 - 152 reverse ordered removed
ok 329 - 150 reverse ordered removed
ok 330 - 148 reverse ordered removed
ok 331 - 146 reverse ordered removed
ok 332 - 144 reverse ordered removed
ok 333 - 142 reverse ordered removed
ok 334 - 140 reverse ordered removed
ok 335 - 138 reverse ordered removed
ok 336 - 136 reverse ordered removed
ok 337 - 134 reverse ordered removed
ok 338 - 132 reverse ordered removed
ok 339 - 130 reverse ordered removed
ok 340 - 128 reverse ordered removed
ok 341 - 126 reverse ordered removed
ok 342 - 124 reverse ordered removed
ok 343 - 122 reverse ordered removed
ok 344 - 120 reverse ordered removed
ok 345 - 118 reverse ordered removed
ok 346 - 116 reverse ordered removed
ok 347 - 114 reverse ordered removed
ok 348 - 112 reverse ordered removed
ok 349 - 110 reverse ordered removed
ok 350 - 108 reverse ordered removed
ok 351 - 106 reverse ordered removed
ok 352 - 104 reverse ordered removed
ok 353 - 102 reverse ordered removed
ok 354 - 100 reverse ordered removed
ok 355 - 98 reverse ordered removed
ok 356 - 96 reverse ordered removed
ok 357 - 94 reverse ordered removed
ok 358 - 92 reverse ordered removed
ok 359 - 90 reverse ordered removed
ok 360 - 88 reverse ordered removed
ok 361 - 86 reverse ordered removed
ok 362 - 84 reverse ordered removed
ok 363 - 82 reverse ordered removed
ok 364 - 80 reverse ordered removed
ok 365 - 78 reverse ordered removed
ok 366 - 76 reverse ordered removed
ok 367 - 74 reverse ordered removed
ok 368 - 72 reverse ordered removed
ok 369 - 70 reverse ordered removed
ok 370 - 68 reverse ordered removed
ok 371 - 66 reverse ordered removed
ok 372 - 64 reverse ordered removed
ok 373 - 62 reverse ordered removed
ok 374 - 60 reverse ordered removed
ok 375 - 58 reverse ordered removed
ok 376 - 56 reverse ordered removed
ok 377 - 54 reverse ordered removed
ok 378 - 52 reverse ordered removed
ok 379 - 50 reverse ordered removed
ok 380 - 48 reverse ordered removed
ok 381 - 46 reverse ordered removed
ok 382 - 44 reverse ordered removed
ok 383 - 42 reverse ordered removed
ok 384 - 40 reverse ordered removed
ok 385 - 38 reverse ordered removed
ok 386 - 36 reverse ordered removed
ok 387 - 34 reverse ordered removed
ok 388 - 32 reverse ordered removed
ok 389 - 30 reverse ordered removed
ok 390 - 28 reverse ordered removed
ok 391 - 26 reverse ordered removed
ok 392 - 24 reverse ordered removed
ok 393 - 22 reverse ordered removed
ok 394 - 20 reverse ordered removed
ok 395 - 18 reverse ordered removed
ok 396 - 16 reverse ordered removed
ok 397 - 14 reverse ordered removed
ok 398 - 12 reverse ordered removed
ok 399 - 10 reverse ordered removed
ok 400 - 8 reverse ordered removed
ok 401 - 6 reverse ordered removed
ok 402 - 4 reverse ordered removed
ok 403 - 2 reverse ordered removed
ok 404 - bremove all even elements reversely succeeded
ok 405 - removed from single item list
ok 406 - No memory leaks in bremove first (leaks 0 <= 0)
ok 407 - No memory leaks in bremove last (leaks 0 <= 0)
ok 408 - No memory leaks in bremove middle (leaks 0 <= 0)
ok 409 - No memory leaks in bremove first with stack-growing (leaks 0 <= 0)
ok 410 - No memory leaks in bremove last with stack-growing (leaks 0 <= 0)
ok 411 - No memory leaks in bremove middle with stack-growing (leaks 0 <= 0)
ok 412 - No memory leaks in bremove first with stack-growing and exception (leaks 0 <= 0)
ok 413 - No memory leaks in bremove last with stack-growing and exception (leaks 0 <= 0)
ok 414 - No memory leaks in bremove middle with stack-growing and exception (leaks 0 <= 0)
ok 415 - bremove without sub is_dying()
# Can't use string ("2") as an ARRAY ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 850.
1..415
ok
t/pureperl/bsearch.t .............. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46
ok 47
ok 48
ok 49
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77
ok 78
ok 79
ok 80
ok 81
ok 82
ok 83
ok 84
ok 85
ok 86
ok 87
ok 88
ok 89
ok 90
ok 91
ok 92
ok 93
ok 94
ok 95
ok 96
ok 97
ok 98
ok 99
ok 100
ok 101
ok 102
ok 103
ok 104
ok 105
ok 106
ok 107
ok 108
ok 109
ok 110
ok 111
ok 112
ok 113
ok 114
ok 115
ok 116
ok 117
ok 118
ok 119
ok 120
ok 121
ok 122
ok 123
ok 124
ok 125
ok 126
ok 127
ok 128
ok 129
ok 130
ok 131
ok 132
ok 133
ok 134
ok 135
ok 136
ok 137
ok 138
ok 139
ok 140
ok 141
ok 142
ok 143
ok 144
ok 145
ok 146
ok 147
ok 148
ok 149
ok 150
ok 151
ok 152
ok 153
ok 154
ok 155
ok 156
ok 157
ok 158
ok 159
ok 160
ok 161
ok 162
ok 163
ok 164
ok 165
ok 166
ok 167
ok 168
ok 169
ok 170
ok 171
ok 172
ok 173
ok 174
ok 175
ok 176
ok 177
ok 178
ok 179
ok 180
ok 181
ok 182
ok 183
ok 184
ok 185
ok 186
ok 187
ok 188
ok 189
ok 190
ok 191
ok 192
ok 193
ok 194
ok 195
ok 196
ok 197
ok 198
ok 199
ok 200
ok 201
ok 202
ok 203
ok 204
ok 205
ok 206
ok 207
ok 208
ok 209
ok 210
ok 211
ok 212
ok 213
ok 214
ok 215
ok 216
ok 217
ok 218
ok 219
ok 220
ok 221
ok 222
ok 223
ok 224
ok 225
ok 226
ok 227
ok 228
ok 229
ok 230
ok 231
ok 232
ok 233
ok 234
ok 235
ok 236
ok 237
ok 238
ok 239
ok 240
ok 241
ok 242
ok 243
ok 244
ok 245
ok 246
ok 247
ok 248
ok 249
ok 250
ok 251
ok 252
ok 253
ok 254
ok 255
ok 256
ok 257
ok 258
ok 259
ok 260
ok 261
ok 262
ok 263
ok 264
ok 265
ok 266
ok 267
ok 268
ok 269
ok 270
ok 271
ok 272
ok 273
ok 274
ok 275
ok 276
ok 277
ok 278
ok 279
ok 280
ok 281
ok 282
ok 283
ok 284
ok 285
ok 286
ok 287
ok 288
ok 289
ok 290
ok 291
ok 292
ok 293
ok 294
ok 295
ok 296
ok 297
ok 298
ok 299
ok 300
ok 301
ok 302
ok 303
ok 304
ok 305
ok 306
ok 307
ok 308
ok 309
ok 310
ok 311
ok 312
ok 313
ok 314
ok 315
ok 316
ok 317
ok 318
ok 319
ok 320
ok 321
ok 322
ok 323
ok 324
ok 325
ok 326
ok 327
ok 328
ok 329
ok 330
ok 331
ok 332
ok 333
ok 334
ok 335
ok 336
ok 337
ok 338
ok 339
ok 340
ok 341
ok 342
ok 343
ok 344
ok 345
ok 346
ok 347
ok 348
ok 349
ok 350
ok 351
ok 352
ok 353
ok 354
ok 355
ok 356
ok 357
ok 358
ok 359
ok 360
ok 361
ok 362
ok 363
ok 364
ok 365
ok 366
ok 367
ok 368
ok 369
ok 370
ok 371
ok 372
ok 373
ok 374
ok 375
ok 376
ok 377
ok 378
ok 379
ok 380
ok 381
ok 382
ok 383
ok 384
ok 385
ok 386
ok 387
ok 388
ok 389
ok 390
ok 391
ok 392
ok 393
ok 394
ok 395
ok 396
ok 397
ok 398
ok 399
ok 400
ok 401
ok 402
ok 403
ok 404
ok 405
ok 406
ok 407
ok 408
ok 409
ok 410
ok 411
ok 412
ok 413
ok 414
ok 415
ok 416
ok 417
ok 418
ok 419
ok 420
ok 421
ok 422
ok 423
ok 424
ok 425
ok 426
ok 427
ok 428
ok 429
ok 430
ok 431
ok 432
ok 433
ok 434
ok 435
ok 436
ok 437
ok 438
ok 439
ok 440
ok 441
ok 442
ok 443
ok 444
ok 445
ok 446
ok 447
ok 448
ok 449
ok 450
ok 451
ok 452
ok 453
ok 454
ok 455
ok 456
ok 457
ok 458
ok 459
ok 460
ok 461
ok 462
ok 463
ok 464
ok 465
ok 466
ok 467
ok 468
ok 469
ok 470
ok 471
ok 472
ok 473
ok 474
ok 475
ok 476
ok 477
ok 478
ok 479
ok 480
ok 481
ok 482
ok 483
ok 484
ok 485
ok 486
ok 487
ok 488
ok 489
ok 490
ok 491
ok 492
ok 493
ok 494
ok 495
ok 496
ok 497
ok 498
ok 499
ok 500
ok 501
ok 502
ok 503
ok 504
ok 505
ok 506
ok 507
ok 508
ok 509
ok 510
ok 511
ok 512
ok 513
ok 514
ok 515
ok 516
ok 517
ok 518
ok 519
ok 520
ok 521
ok 522
ok 523
ok 524
ok 525
ok 526
ok 527
ok 528
ok 529
ok 530
ok 531
ok 532
ok 533
ok 534
ok 535
ok 536
ok 537
ok 538
ok 539
ok 540
ok 541
ok 542
ok 543
ok 544
ok 545
ok 546
ok 547
ok 548
ok 549
ok 550
ok 551
ok 552
ok 553
ok 554
ok 555
ok 556
ok 557
ok 558
ok 559
ok 560
ok 561
ok 562
ok 563
ok 564
ok 565
ok 566
ok 567
ok 568
ok 569
ok 570
ok 571
ok 572
ok 573
ok 574
ok 575
ok 576
ok 577
ok 578
ok 579
ok 580
ok 581
ok 582
ok 583
ok 584
ok 585
ok 586
ok 587
ok 588
ok 589
ok 590
ok 591
ok 592
ok 593
ok 594
ok 595
ok 596
ok 597
ok 598
ok 599
ok 600
ok 601
ok 602
ok 603
ok 604
ok 605
ok 606
ok 607
ok 608
ok 609
ok 610
ok 611
ok 612
ok 613
ok 614
ok 615
ok 616
ok 617
ok 618
ok 619
ok 620
ok 621
ok 622
ok 623
ok 624
ok 625
ok 626
ok 627
ok 628
ok 629
ok 630
ok 631
ok 632
ok 633
ok 634
ok 635
ok 636
ok 637
ok 638
ok 639
ok 640
ok 641
ok 642
ok 643
ok 644
ok 645
ok 646
ok 647
ok 648
ok 649
ok 650
ok 651
ok 652
ok 653
ok 654
ok 655
ok 656
ok 657
ok 658
ok 659
ok 660
ok 661
ok 662
ok 663
ok 664
ok 665
ok 666
ok 667
ok 668
ok 669
ok 670
ok 671
ok 672
ok 673
ok 674
ok 675
ok 676
ok 677
ok 678
ok 679
ok 680
ok 681
ok 682
ok 683
ok 684
ok 685
ok 686
ok 687
ok 688
ok 689
ok 690
ok 691
ok 692
ok 693
ok 694
ok 695
ok 696
ok 697
ok 698
ok 699
ok 700
ok 701
ok 702
ok 703
ok 704
ok 705
ok 706
ok 707
ok 708
ok 709
ok 710
ok 711
ok 712
ok 713
ok 714
ok 715
ok 716
ok 717
ok 718
ok 719
ok 720
ok 721
ok 722
ok 723
ok 724
ok 725
ok 726
ok 727
ok 728
ok 729
ok 730
ok 731
ok 732
ok 733
ok 734
ok 735
ok 736
ok 737
ok 738
ok 739
ok 740
ok 741
ok 742
ok 743
ok 744
ok 745
ok 746
ok 747
ok 748
ok 749
ok 750
ok 751
ok 752
ok 753
ok 754
ok 755
ok 756
ok 757
ok 758
ok 759
ok 760
ok 761
ok 762
ok 763
ok 764
ok 765
ok 766
ok 767
ok 768
ok 769
ok 770
ok 771
ok 772
ok 773
ok 774
ok 775
ok 776
ok 777
ok 778
ok 779
ok 780
ok 781
ok 782
ok 783
ok 784
ok 785
ok 786
ok 787
ok 788
ok 789
ok 790
ok 791
ok 792
ok 793
ok 794
ok 795
ok 796
ok 797
ok 798
ok 799
ok 800
ok 801
ok 802
ok 803
ok 804
ok 805
ok 806
ok 807
ok 808
ok 809
ok 810
ok 811
ok 812
ok 813
ok 814
ok 815
ok 816
ok 817
ok 818
ok 819
ok 820
ok 821
ok 822
ok 823
ok 824
ok 825
ok 826
ok 827
ok 828
ok 829
ok 830
ok 831
ok 832
ok 833
ok 834
ok 835
ok 836
ok 837
ok 838
ok 839
ok 840
ok 841
ok 842
ok 843
ok 844
ok 845
ok 846
ok 847
ok 848
ok 849
ok 850
ok 851
ok 852
ok 853
ok 854
ok 855
ok 856
ok 857
ok 858
ok 859
ok 860
ok 861
ok 862
ok 863
ok 864
ok 865
ok 866
ok 867
ok 868
ok 869
ok 870
ok 871
ok 872
ok 873
ok 874
ok 875
ok 876
ok 877
ok 878
ok 879
ok 880
ok 881
ok 882
ok 883
ok 884
ok 885
ok 886
ok 887
ok 888
ok 889
ok 890
ok 891
ok 892
ok 893
ok 894
ok 895
ok 896
ok 897
ok 898
ok 899
ok 900
ok 901
ok 902
ok 903
ok 904
ok 905
ok 906
ok 907
ok 908
ok 909
ok 910
ok 911
ok 912
ok 913
ok 914
ok 915
ok 916
ok 917
ok 918
ok 919
ok 920
ok 921
ok 922
ok 923
ok 924
ok 925
ok 926
ok 927
ok 928
ok 929
ok 930
ok 931
ok 932
ok 933
ok 934
ok 935
ok 936
ok 937
ok 938
ok 939
ok 940
ok 941
ok 942
ok 943
ok 944
ok 945
ok 946
ok 947
ok 948
ok 949
ok 950
ok 951
ok 952
ok 953
ok 954
ok 955
ok 956
ok 957
ok 958
ok 959
ok 960
ok 961
ok 962
ok 963
ok 964
ok 965
ok 966
ok 967
ok 968
ok 969
ok 970
ok 971
ok 972
ok 973
ok 974
ok 975
ok 976
ok 977
ok 978
ok 979
ok 980
ok 981
ok 982
ok 983
ok 984
ok 985
ok 986
ok 987
ok 988
ok 989
ok 990
ok 991
ok 992
ok 993
ok 994
ok 995
ok 996
ok 997
ok 998
ok 999
ok 1000
ok 1001
ok 1002
ok 1003
ok 1004
ok 1005
ok 1006
ok 1007
ok 1008
ok 1009
ok 1010
ok 1011
ok 1012
ok 1013
ok 1014
ok 1015
ok 1016
ok 1017
ok 1018
ok 1019
ok 1020
ok 1021
ok 1022
ok 1023
ok 1024
ok 1025
ok 1026
ok 1027
ok 1028
ok 1029
ok 1030
ok 1031
ok 1032
ok 1033
ok 1034
ok 1035
ok 1036
ok 1037
ok 1038
ok 1039
ok 1040
ok 1041
ok 1042
ok 1043
ok 1044
ok 1045
ok 1046
ok 1047
ok 1048
ok 1049
ok 1050
ok 1051
ok 1052
ok 1053
ok 1054
ok 1055
ok 1056
ok 1057
ok 1058
ok 1059
ok 1060
ok 1061
ok 1062
ok 1063
ok 1064
ok 1065
ok 1066
ok 1067
ok 1068
ok 1069
ok 1070
ok 1071
ok 1072
ok 1073
ok 1074
ok 1075
ok 1076
ok 1077
ok 1078
ok 1079
ok 1080
ok 1081
ok 1082
ok 1083
ok 1084
ok 1085
ok 1086
ok 1087
ok 1088
ok 1089
ok 1090
ok 1091
ok 1092
ok 1093
ok 1094
ok 1095
ok 1096
ok 1097
ok 1098
ok 1099
ok 1100
ok 1101
ok 1102
ok 1103
ok 1104
ok 1105
ok 1106
ok 1107
ok 1108
ok 1109
ok 1110
ok 1111
ok 1112
ok 1113
ok 1114
ok 1115
ok 1116
ok 1117
ok 1118
ok 1119
ok 1120
ok 1121
ok 1122
ok 1123
ok 1124
ok 1125
ok 1126
ok 1127
ok 1128
ok 1129
ok 1130
ok 1131
ok 1132
ok 1133
ok 1134
ok 1135
ok 1136
ok 1137
ok 1138
ok 1139
ok 1140
ok 1141
ok 1142
ok 1143
ok 1144
ok 1145
ok 1146
ok 1147
ok 1148
ok 1149
ok 1150
ok 1151
ok 1152
ok 1153
ok 1154
ok 1155
ok 1156
ok 1157
ok 1158
ok 1159
ok 1160
ok 1161
ok 1162
ok 1163
ok 1164
ok 1165
ok 1166
ok 1167
ok 1168
ok 1169
ok 1170
ok 1171
ok 1172
ok 1173
ok 1174
ok 1175
ok 1176
ok 1177
ok 1178
ok 1179
ok 1180
ok 1181
ok 1182
ok 1183
ok 1184
ok 1185
ok 1186
ok 1187
ok 1188
ok 1189
ok 1190
ok 1191
ok 1192
ok 1193
ok 1194
ok 1195
ok 1196
ok 1197
ok 1198
ok 1199
ok 1200
ok 1201
ok 1202
ok 1203
ok 1204
ok 1205
ok 1206
ok 1207
ok 1208
ok 1209
ok 1210
ok 1211
ok 1212
ok 1213
ok 1214
ok 1215
ok 1216
ok 1217
ok 1218
ok 1219
ok 1220
ok 1221
ok 1222
ok 1223
ok 1224
ok 1225
ok 1226
ok 1227
ok 1228
ok 1229
ok 1230
ok 1231
ok 1232
ok 1233
ok 1234
ok 1235
ok 1236
ok 1237
ok 1238
ok 1239
ok 1240
ok 1241
ok 1242
ok 1243
ok 1244
ok 1245
ok 1246
ok 1247
ok 1248
ok 1249
ok 1250
ok 1251
ok 1252
ok 1253
ok 1254
ok 1255
ok 1256
ok 1257
ok 1258
ok 1259
ok 1260
ok 1261
ok 1262
ok 1263
ok 1264
ok 1265
ok 1266
ok 1267
ok 1268
ok 1269
ok 1270
ok 1271
ok 1272
ok 1273
ok 1274
ok 1275
ok 1276
ok 1277
ok 1278
ok 1279
ok 1280
ok 1281
ok 1282
ok 1283
ok 1284
ok 1285
ok 1286
ok 1287
ok 1288
ok 1289
ok 1290
ok 1291
ok 1292
ok 1293
ok 1294
ok 1295
ok 1296
ok 1297
ok 1298
ok 1299
ok 1300
ok 1301
ok 1302
ok 1303
ok 1304
ok 1305
ok 1306
ok 1307
ok 1308
ok 1309
ok 1310
ok 1311
ok 1312
ok 1313
ok 1314
ok 1315
ok 1316
ok 1317
ok 1318
ok 1319
ok 1320
ok 1321
ok 1322
ok 1323
ok 1324
ok 1325
ok 1326
ok 1327
ok 1328
ok 1329
ok 1330
ok 1331
ok 1332
ok 1333
ok 1334
ok 1335
ok 1336
ok 1337
ok 1338
ok 1339
ok 1340
ok 1341
ok 1342
ok 1343
ok 1344
ok 1345
ok 1346
ok 1347
ok 1348
ok 1349
ok 1350
ok 1351
ok 1352
ok 1353
ok 1354
ok 1355
ok 1356
ok 1357
ok 1358
ok 1359
ok 1360
ok 1361
ok 1362
ok 1363
ok 1364
ok 1365
ok 1366
ok 1367
ok 1368
ok 1369
ok 1370
ok 1371
ok 1372
ok 1373
ok 1374
ok 1375
ok 1376
ok 1377
ok 1378
ok 1379
ok 1380
ok 1381
ok 1382
ok 1383
ok 1384
ok 1385
ok 1386
ok 1387
ok 1388
ok 1389
ok 1390
ok 1391
ok 1392
ok 1393
ok 1394
ok 1395
ok 1396
ok 1397
ok 1398
ok 1399
ok 1400
ok 1401
ok 1402
ok 1403
ok 1404
ok 1405
ok 1406
ok 1407
ok 1408
ok 1409
ok 1410
ok 1411
ok 1412
ok 1413
ok 1414
ok 1415
ok 1416
ok 1417
ok 1418
ok 1419
ok 1420
ok 1421
ok 1422
ok 1423
ok 1424
ok 1425
ok 1426
ok 1427
ok 1428
ok 1429
ok 1430
ok 1431
ok 1432
ok 1433
ok 1434
ok 1435
ok 1436
ok 1437
ok 1438
ok 1439
ok 1440
ok 1441
ok 1442
ok 1443
ok 1444
ok 1445
ok 1446
ok 1447
ok 1448
ok 1449
ok 1450
ok 1451
ok 1452
ok 1453
ok 1454
ok 1455
ok 1456
ok 1457
ok 1458
ok 1459
ok 1460
ok 1461
ok 1462
ok 1463
ok 1464
ok 1465
ok 1466
ok 1467
ok 1468
ok 1469
ok 1470
ok 1471
ok 1472
ok 1473
ok 1474
ok 1475
ok 1476
ok 1477
ok 1478
ok 1479
ok 1480
ok 1481
ok 1482
ok 1483
ok 1484
ok 1485
ok 1486
ok 1487
ok 1488
ok 1489
ok 1490
ok 1491
ok 1492
ok 1493
ok 1494
ok 1495
ok 1496
ok 1497
ok 1498
ok 1499
ok 1500
ok 1501
ok 1502
ok 1503
ok 1504
ok 1505
ok 1506
ok 1507
ok 1508
ok 1509
ok 1510
ok 1511
ok 1512
ok 1513
ok 1514
ok 1515
ok 1516
ok 1517
ok 1518
ok 1519
ok 1520
ok 1521
ok 1522
ok 1523
ok 1524
ok 1525
ok 1526
ok 1527
ok 1528
ok 1529
ok 1530
ok 1531
ok 1532
ok 1533
ok 1534
ok 1535
ok 1536
ok 1537
ok 1538
ok 1539
ok 1540
ok 1541
ok 1542
ok 1543
ok 1544
ok 1545
ok 1546
ok 1547
ok 1548
ok 1549
ok 1550
ok 1551
ok 1552
ok 1553
ok 1554
ok 1555
ok 1556
ok 1557
ok 1558
ok 1559
ok 1560
ok 1561
ok 1562
ok 1563
ok 1564
ok 1565
ok 1566
ok 1567
ok 1568
ok 1569
ok 1570
ok 1571
ok 1572
ok 1573
ok 1574
ok 1575
ok 1576
ok 1577
ok 1578
ok 1579
ok 1580
ok 1581
ok 1582
ok 1583
ok 1584
ok 1585
ok 1586
ok 1587
ok 1588
ok 1589
ok 1590
ok 1591
ok 1592
ok 1593
ok 1594
ok 1595
ok 1596
ok 1597
ok 1598
ok 1599
ok 1600
ok 1601
ok 1602
ok 1603
ok 1604
ok 1605
ok 1606
ok 1607
ok 1608
ok 1609
ok 1610
ok 1611
ok 1612
ok 1613
ok 1614
ok 1615
ok 1616
ok 1617
ok 1618
ok 1619
ok 1620
ok 1621
ok 1622
ok 1623
ok 1624
ok 1625
ok 1626
ok 1627
ok 1628
ok 1629
ok 1630
ok 1631
ok 1632
ok 1633
ok 1634
ok 1635
ok 1636
ok 1637
ok 1638
ok 1639
ok 1640
ok 1641
ok 1642
ok 1643
ok 1644
ok 1645
ok 1646
ok 1647
ok 1648
ok 1649
ok 1650
ok 1651
ok 1652
ok 1653
ok 1654
ok 1655
ok 1656
ok 1657
ok 1658
ok 1659
ok 1660
ok 1661
ok 1662
ok 1663
ok 1664
ok 1665
ok 1666
ok 1667
ok 1668
ok 1669
ok 1670
ok 1671
ok 1672
ok 1673
ok 1674
ok 1675
ok 1676
ok 1677
ok 1678
ok 1679
ok 1680
ok 1681
ok 1682
ok 1683
ok 1684
ok 1685
ok 1686
ok 1687
ok 1688
ok 1689
ok 1690
ok 1691
ok 1692
ok 1693
ok 1694
ok 1695
ok 1696
ok 1697
ok 1698
ok 1699
ok 1700
ok 1701
ok 1702
ok 1703
ok 1704
ok 1705
ok 1706
ok 1707
ok 1708
ok 1709
ok 1710
ok 1711
ok 1712
ok 1713
ok 1714
ok 1715
ok 1716
ok 1717
ok 1718
ok 1719
ok 1720
ok 1721
ok 1722
ok 1723
ok 1724
ok 1725
ok 1726
ok 1727
ok 1728
ok 1729
ok 1730
ok 1731
ok 1732
ok 1733
ok 1734
ok 1735
ok 1736
ok 1737
ok 1738
ok 1739
ok 1740
ok 1741
ok 1742
ok 1743
ok 1744
ok 1745
ok 1746
ok 1747
ok 1748
ok 1749
ok 1750
ok 1751
ok 1752
ok 1753
ok 1754
ok 1755
ok 1756
ok 1757
ok 1758
ok 1759
ok 1760
ok 1761
ok 1762
ok 1763
ok 1764
ok 1765
ok 1766
ok 1767
ok 1768
ok 1769
ok 1770
ok 1771
ok 1772
ok 1773
ok 1774
ok 1775
ok 1776
ok 1777
ok 1778
ok 1779
ok 1780
ok 1781
ok 1782
ok 1783
ok 1784
ok 1785
ok 1786
ok 1787
ok 1788
ok 1789
ok 1790
ok 1791
ok 1792
ok 1793
ok 1794
ok 1795
ok 1796
ok 1797
ok 1798
ok 1799
ok 1800
ok 1801
ok 1802
ok 1803
ok 1804
ok 1805
ok 1806
ok 1807
ok 1808
ok 1809
ok 1810
ok 1811
ok 1812
ok 1813
ok 1814
ok 1815
ok 1816
ok 1817
ok 1818
ok 1819
ok 1820
ok 1821
ok 1822
ok 1823
ok 1824
ok 1825
ok 1826
ok 1827
ok 1828
ok 1829
ok 1830
ok 1831
ok 1832
ok 1833
ok 1834
ok 1835
ok 1836
ok 1837
ok 1838
ok 1839
ok 1840
ok 1841
ok 1842
ok 1843
ok 1844
ok 1845
ok 1846
ok 1847
ok 1848
ok 1849
ok 1850
ok 1851
ok 1852
ok 1853
ok 1854
ok 1855
ok 1856
ok 1857
ok 1858
ok 1859
ok 1860
ok 1861
ok 1862
ok 1863
ok 1864
ok 1865
ok 1866
ok 1867
ok 1868
ok 1869
ok 1870
ok 1871
ok 1872
ok 1873
ok 1874
ok 1875
ok 1876
ok 1877
ok 1878
ok 1879
ok 1880
ok 1881
ok 1882
ok 1883
ok 1884
ok 1885
ok 1886
ok 1887
ok 1888
ok 1889
ok 1890
ok 1891
ok 1892
ok 1893
ok 1894
ok 1895
ok 1896
ok 1897
ok 1898
ok 1899
ok 1900
ok 1901
ok 1902
ok 1903
ok 1904
ok 1905
ok 1906
ok 1907
ok 1908
ok 1909
ok 1910
ok 1911
ok 1912
ok 1913
ok 1914
ok 1915
ok 1916
ok 1917
ok 1918
ok 1919
ok 1920
ok 1921
ok 1922
ok 1923
ok 1924
ok 1925
ok 1926
ok 1927
ok 1928
ok 1929
ok 1930
ok 1931
ok 1932
ok 1933
ok 1934
ok 1935
ok 1936
ok 1937
ok 1938
ok 1939
ok 1940
ok 1941
ok 1942
ok 1943
ok 1944
ok 1945
ok 1946
ok 1947
ok 1948
ok 1949
ok 1950
ok 1951
ok 1952
ok 1953
ok 1954
ok 1955
ok 1956
ok 1957
ok 1958
ok 1959
ok 1960
ok 1961
ok 1962
ok 1963
ok 1964
ok 1965
ok 1966
ok 1967
ok 1968
ok 1969
ok 1970
ok 1971
ok 1972
ok 1973
ok 1974
ok 1975
ok 1976
ok 1977
ok 1978
ok 1979
ok 1980
ok 1981
ok 1982
ok 1983
ok 1984
ok 1985
ok 1986
ok 1987
ok 1988
ok 1989
ok 1990
ok 1991
ok 1992
ok 1993
ok 1994
ok 1995
ok 1996
ok 1997
ok 1998
ok 1999
ok 2000
ok 2001
ok 2002
ok 2003
ok 2004
ok 2005
ok 2006
ok 2007
ok 2008
ok 2009
ok 2010
ok 2011
ok 2012
ok 2013
ok 2014
ok 2015
ok 2016
ok 2017
ok 2018
ok 2019
ok 2020
ok 2021
ok 2022
ok 2023 - No memory leaks in bsearch (leaks 0 <= 0)
ok 2024 - No memory leaks in bsearch with stack-growing (leaks 0 <= 0)
ok 2025 - No memory leaks in bsearch with stack-growing and exception (leaks 0 <= 0)
ok 2026 - bsearch without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 736.
1..2026
ok
t/pureperl/bsearchidx.t ........... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46
ok 47
ok 48
ok 49
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77
ok 78
ok 79
ok 80
ok 81
ok 82
ok 83
ok 84
ok 85
ok 86
ok 87
ok 88
ok 89
ok 90
ok 91
ok 92
ok 93
ok 94
ok 95
ok 96
ok 97
ok 98
ok 99
ok 100
ok 101
ok 102
ok 103
ok 104
ok 105
ok 106
ok 107
ok 108
ok 109
ok 110
ok 111
ok 112
ok 113
ok 114
ok 115
ok 116
ok 117
ok 118
ok 119
ok 120
ok 121
ok 122
ok 123
ok 124
ok 125
ok 126
ok 127
ok 128
ok 129
ok 130
ok 131
ok 132
ok 133
ok 134
ok 135
ok 136
ok 137
ok 138
ok 139
ok 140
ok 141
ok 142
ok 143
ok 144
ok 145
ok 146
ok 147
ok 148
ok 149
ok 150
ok 151
ok 152
ok 153
ok 154
ok 155
ok 156
ok 157
ok 158
ok 159
ok 160
ok 161
ok 162
ok 163
ok 164
ok 165
ok 166
ok 167
ok 168
ok 169
ok 170
ok 171
ok 172
ok 173
ok 174
ok 175
ok 176
ok 177
ok 178
ok 179
ok 180
ok 181
ok 182
ok 183
ok 184
ok 185
ok 186
ok 187
ok 188
ok 189
ok 190
ok 191
ok 192
ok 193
ok 194
ok 195
ok 196
ok 197
ok 198
ok 199
ok 200
ok 201
ok 202
ok 203
ok 204
ok 205
ok 206
ok 207
ok 208
ok 209
ok 210
ok 211
ok 212
ok 213
ok 214
ok 215
ok 216
ok 217
ok 218
ok 219
ok 220
ok 221
ok 222
ok 223
ok 224
ok 225
ok 226
ok 227
ok 228
ok 229
ok 230
ok 231
ok 232
ok 233
ok 234
ok 235
ok 236
ok 237
ok 238
ok 239
ok 240
ok 241
ok 242
ok 243
ok 244
ok 245
ok 246
ok 247
ok 248
ok 249
ok 250
ok 251
ok 252
ok 253
ok 254
ok 255
ok 256
ok 257
ok 258
ok 259
ok 260
ok 261
ok 262
ok 263
ok 264
ok 265
ok 266
ok 267
ok 268
ok 269
ok 270
ok 271
ok 272
ok 273
ok 274
ok 275
ok 276
ok 277
ok 278
ok 279
ok 280
ok 281
ok 282
ok 283
ok 284
ok 285
ok 286
ok 287
ok 288
ok 289
ok 290
ok 291
ok 292
ok 293
ok 294
ok 295
ok 296
ok 297
ok 298
ok 299
ok 300
ok 301
ok 302
ok 303
ok 304
ok 305
ok 306
ok 307
ok 308
ok 309
ok 310
ok 311
ok 312
ok 313
ok 314
ok 315
ok 316
ok 317
ok 318
ok 319
ok 320
ok 321
ok 322
ok 323
ok 324
ok 325
ok 326
ok 327
ok 328
ok 329
ok 330
ok 331
ok 332
ok 333
ok 334
ok 335
ok 336
ok 337
ok 338
ok 339
ok 340
ok 341
ok 342
ok 343
ok 344
ok 345
ok 346
ok 347
ok 348
ok 349
ok 350
ok 351
ok 352
ok 353
ok 354
ok 355
ok 356
ok 357
ok 358
ok 359
ok 360
ok 361
ok 362
ok 363
ok 364
ok 365
ok 366
ok 367
ok 368
ok 369
ok 370
ok 371
ok 372
ok 373
ok 374
ok 375
ok 376
ok 377
ok 378
ok 379
ok 380
ok 381
ok 382
ok 383
ok 384
ok 385
ok 386
ok 387
ok 388
ok 389
ok 390
ok 391
ok 392
ok 393
ok 394
ok 395
ok 396
ok 397
ok 398
ok 399
ok 400
ok 401
ok 402
ok 403
ok 404
ok 405
ok 406
ok 407
ok 408
ok 409
ok 410
ok 411
ok 412
ok 413
ok 414
ok 415
ok 416
ok 417
ok 418
ok 419
ok 420
ok 421
ok 422
ok 423
ok 424
ok 425
ok 426
ok 427
ok 428
ok 429
ok 430
ok 431
ok 432
ok 433
ok 434
ok 435
ok 436
ok 437
ok 438
ok 439
ok 440
ok 441
ok 442
ok 443
ok 444
ok 445
ok 446
ok 447
ok 448
ok 449
ok 450
ok 451
ok 452
ok 453
ok 454
ok 455
ok 456
ok 457
ok 458
ok 459
ok 460
ok 461
ok 462
ok 463
ok 464
ok 465
ok 466
ok 467
ok 468
ok 469
ok 470
ok 471
ok 472
ok 473
ok 474
ok 475
ok 476
ok 477
ok 478
ok 479
ok 480
ok 481
ok 482
ok 483
ok 484
ok 485
ok 486
ok 487
ok 488
ok 489
ok 490
ok 491
ok 492
ok 493
ok 494
ok 495
ok 496
ok 497
ok 498
ok 499
ok 500
ok 501
ok 502
ok 503
ok 504
ok 505
ok 506
ok 507
ok 508
ok 509
ok 510
ok 511
ok 512
ok 513
ok 514
ok 515
ok 516
ok 517
ok 518
ok 519
ok 520
ok 521
ok 522
ok 523
ok 524
ok 525
ok 526
ok 527
ok 528
ok 529
ok 530
ok 531
ok 532
ok 533
ok 534
ok 535
ok 536
ok 537
ok 538
ok 539
ok 540
ok 541
ok 542
ok 543
ok 544
ok 545
ok 546
ok 547
ok 548
ok 549
ok 550
ok 551
ok 552
ok 553
ok 554
ok 555
ok 556
ok 557
ok 558
ok 559
ok 560
ok 561
ok 562
ok 563
ok 564
ok 565
ok 566
ok 567
ok 568
ok 569
ok 570
ok 571
ok 572
ok 573
ok 574
ok 575
ok 576
ok 577
ok 578
ok 579
ok 580
ok 581
ok 582
ok 583
ok 584
ok 585
ok 586
ok 587
ok 588
ok 589
ok 590
ok 591
ok 592
ok 593
ok 594
ok 595
ok 596
ok 597
ok 598
ok 599
ok 600
ok 601
ok 602
ok 603
ok 604
ok 605
ok 606
ok 607
ok 608
ok 609
ok 610
ok 611
ok 612
ok 613
ok 614
ok 615
ok 616
ok 617
ok 618
ok 619
ok 620
ok 621
ok 622
ok 623
ok 624
ok 625
ok 626
ok 627
ok 628
ok 629
ok 630
ok 631
ok 632
ok 633
ok 634
ok 635
ok 636
ok 637
ok 638
ok 639
ok 640
ok 641
ok 642
ok 643
ok 644
ok 645
ok 646
ok 647
ok 648
ok 649
ok 650
ok 651
ok 652
ok 653
ok 654
ok 655
ok 656
ok 657
ok 658
ok 659
ok 660
ok 661
ok 662
ok 663
ok 664
ok 665
ok 666
ok 667
ok 668
ok 669
ok 670
ok 671
ok 672
ok 673
ok 674
ok 675
ok 676
ok 677
ok 678
ok 679
ok 680
ok 681
ok 682
ok 683
ok 684
ok 685
ok 686
ok 687
ok 688
ok 689
ok 690
ok 691
ok 692
ok 693
ok 694
ok 695
ok 696
ok 697
ok 698
ok 699
ok 700
ok 701
ok 702
ok 703
ok 704
ok 705
ok 706
ok 707
ok 708
ok 709
ok 710
ok 711
ok 712
ok 713
ok 714
ok 715
ok 716
ok 717
ok 718
ok 719
ok 720
ok 721
ok 722
ok 723
ok 724
ok 725
ok 726
ok 727
ok 728
ok 729
ok 730
ok 731
ok 732
ok 733
ok 734
ok 735
ok 736
ok 737
ok 738
ok 739
ok 740
ok 741
ok 742
ok 743
ok 744
ok 745
ok 746
ok 747
ok 748
ok 749
ok 750
ok 751
ok 752
ok 753
ok 754
ok 755
ok 756
ok 757
ok 758
ok 759
ok 760
ok 761
ok 762
ok 763
ok 764
ok 765
ok 766
ok 767
ok 768
ok 769
ok 770
ok 771
ok 772
ok 773
ok 774
ok 775
ok 776
ok 777
ok 778
ok 779
ok 780
ok 781
ok 782
ok 783
ok 784
ok 785
ok 786
ok 787
ok 788
ok 789
ok 790
ok 791
ok 792
ok 793
ok 794
ok 795
ok 796
ok 797
ok 798
ok 799
ok 800
ok 801
ok 802
ok 803
ok 804
ok 805
ok 806
ok 807
ok 808
ok 809
ok 810
ok 811
ok 812
ok 813
ok 814
ok 815
ok 816
ok 817
ok 818
ok 819
ok 820
ok 821
ok 822
ok 823
ok 824
ok 825
ok 826
ok 827
ok 828
ok 829
ok 830
ok 831
ok 832
ok 833
ok 834
ok 835
ok 836
ok 837
ok 838
ok 839
ok 840
ok 841
ok 842
ok 843
ok 844
ok 845
ok 846
ok 847
ok 848
ok 849
ok 850
ok 851
ok 852
ok 853
ok 854
ok 855
ok 856
ok 857
ok 858
ok 859
ok 860
ok 861
ok 862
ok 863
ok 864
ok 865
ok 866
ok 867
ok 868
ok 869
ok 870
ok 871
ok 872
ok 873
ok 874
ok 875
ok 876
ok 877
ok 878
ok 879
ok 880
ok 881
ok 882
ok 883
ok 884
ok 885
ok 886
ok 887
ok 888
ok 889
ok 890
ok 891
ok 892
ok 893
ok 894
ok 895
ok 896
ok 897
ok 898
ok 899
ok 900
ok 901
ok 902
ok 903
ok 904
ok 905
ok 906
ok 907
ok 908
ok 909
ok 910
ok 911
ok 912
ok 913
ok 914
ok 915
ok 916
ok 917
ok 918
ok 919
ok 920
ok 921
ok 922
ok 923
ok 924
ok 925
ok 926
ok 927
ok 928
ok 929
ok 930
ok 931
ok 932
ok 933
ok 934
ok 935
ok 936
ok 937
ok 938
ok 939
ok 940
ok 941
ok 942
ok 943
ok 944
ok 945
ok 946
ok 947
ok 948
ok 949
ok 950
ok 951
ok 952
ok 953
ok 954
ok 955
ok 956
ok 957
ok 958
ok 959
ok 960
ok 961
ok 962
ok 963
ok 964
ok 965
ok 966
ok 967
ok 968
ok 969
ok 970
ok 971
ok 972
ok 973
ok 974
ok 975
ok 976
ok 977
ok 978
ok 979
ok 980
ok 981
ok 982
ok 983
ok 984
ok 985
ok 986
ok 987
ok 988
ok 989
ok 990
ok 991
ok 992
ok 993
ok 994
ok 995
ok 996
ok 997
ok 998
ok 999
ok 1000
ok 1001
ok 1002
ok 1003
ok 1004
ok 1005
ok 1006
ok 1007
ok 1008
ok 1009
ok 1010
ok 1011
ok 1012
ok 1013
ok 1014
ok 1015
ok 1016
ok 1017
ok 1018
ok 1019
ok 1020
ok 1021
ok 1022
ok 1023 - No memory leaks in bsearch (leaks 0 <= 0)
ok 1024 - No memory leaks in bsearch with stack-growing (leaks 0 <= 0)
ok 1025 - No memory leaks in bsearch with stack-growing and exception (leaks 0 <= 0)
ok 1026 - bsearchidx without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 769.
1..1026
ok
t/pureperl/duplicates.t ........... 
ok 1 - duplicates:G_ARRAY leaves numbers untouched
ok 2 - duplicates of numbers
ok 3 - duplicates:G_SCALAR leaves numbers untouched
ok 4 - scalar result of duplicates of numbers
ok 5 - duplicates:G_ARRAY leaves numbers untouched
ok 6 - duplicates of numbers
ok 7 - duplicates:G_SCALAR leaves numbers untouched
ok 8 - scalar result of duplicates of numbers
ok 9 - duplicates of numbers/strings mixture
ok 10 - frozen duplicates of numbers/strings mixture
ok 11 - duplicates:G_ARRAY leaves mixture untouched
ok 12
ok 13 - duplicates:G_SCALAR leaves mixture untouched
ok 14 - scalar result of duplicates of numbers/strings mixture
ok 15 - duplicates of tied array of numbers/strings mixture
ok 16 - duplicates:G_ARRAY leaves mixture untouched
ok 17 - duplicates:G_SCALAR leaves mixture untouched
ok 18 - scalar result of duplicates of tied array of numbers/strings mixture
ok 19 - two undef's are supported correctly by duplicates
ok 20 - one undef is ignored correctly by duplicates
ok 21 - scalar one undef is ignored correctly by duplicates
ok 22 - No memory leaks in duplicates (leaks 0 <= 0)
ok 23 - No memory leaks in duplicates with exception in overloading stringify (leaks 0 <= 0)
1..23
ok
t/pureperl/each_array.t ........... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16 - No memory leaks in each_array (leaks 0 <= 0)
ok 17 - No memory leaks in each_arrayref (leaks 0 <= 0)
ok 18 - each_array without sub is_dying()
# each_arrayref: argument is not an array reference
#  at t/pureperl/each_array.t line 133.
ok 19 - each_arrayref without sub is_dying()
# each_arrayref: argument is not an array reference
#  at t/pureperl/each_array.t line 134.
1..19
ok
t/pureperl/equal_range.t .......... 
ok 1 - equal range 0
ok 2 - equal range 1
ok 3 - equal range 2
ok 4 - equal range 4
ok 5 - equal range 19
ok 6 - No memory leaks in equal_range (leaks 0 <= 0)
ok 7 - No memory leaks in equal_range with stack-growing (leaks 0 <= 0)
ok 8 - No memory leaks in equal_range with stack-growing and exception (leaks 0 <= 0)
ok 9 - equal_range without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 796.
1..9
ok
t/pureperl/false.t ................ 
ok 1 - false(null) returns undef
ok 2 - false(null) returns undef
ok 3
ok 4
ok 5
ok 6 - No memory leaks in false (leaks 0 <= 0)
ok 7 - false without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 207.
1..7
ok
t/pureperl/firstidx.t ............. 
ok 1 - firstidx
ok 2 - invalid firstidx
ok 3 - real firstidx
ok 4 - empty firstidx
ok 5
ok 6
ok 7
ok 8
ok 9 - No memory leaks in firstidx (leaks 0 <= 0)
ok 10 - firstidx without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 217.
1..10
ok
t/pureperl/firstres.t ............. 
ok 1
ok 2
ok 3
ok 4
ok 5 - No memory leaks in firstres (leaks 0 <= 0)
ok 6 - firstres without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 238.
1..6
ok
t/pureperl/firstval.t ............. 
ok 1
ok 2
ok 3 - is_undef()
ok 4
ok 5
ok 6 - No memory leaks in firstval (leaks 0 <= 0)
ok 7 - firstval without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 227.
1..7
ok
t/pureperl/frequency.t ............ 
ok 1 - frequency:G_ARRAY leaves numbers untouched
ok 2 - frequency of numbers
ok 3 - frequency:G:SCALAR leaves numbers untouched
ok 4 - scalar result of frequency of numbers
ok 5 - frequency:G_ARRAY leaves strings untouched
ok 6 - frequency of strings
ok 7 - frequency:G_SCALAR leaves strings untouched
ok 8 - scalar result of frequency of strings
ok 9 - frequency:G_ARRAY leaves number/strings mixture untouched
ok 10 - frequency of number/strings mixture
ok 11 - frequency:G_SCALAR leaves number/strings mixture untouched
ok 12 - scalar result of frequency of number/strings mixture
ok 13 - frequency:G_ARRAY leaves tied array of number/strings mixture untouched
ok 14 - frequency of tied array of number/strings mixture
ok 15 - frequency:G_SCALAR leaves tied array of number/strings mixture untouched
ok 16 - scalar result of frequency of tied array of number/strings mixture
ok 17 - stuff around undef's is supported correctly by frequency
ok 18 - two undef's are supported correctly by frequency
ok 19 - No memory leaks in frequency (leaks 0 <= 0)
ok 20 - No memory leaks in scalar frequency (leaks 0 <= 0)
ok 21 - No memory leaks in frequency with exception in overloading stringify (leaks 0 <= 0)
1..21
ok
t/pureperl/indexes.t .............. 
ok 1 - indexes > 5 ...
ok 2 - Got the null list
ok 3 - No memory leaks in indexes (leaks 0 <= 0)
ok 4 - indexes/leak: some
ok 5 - indexes/leak: none
ok 6 - indexes/leak: odd
ok 7 - indexes/leak: even
ok 8 - indexes behaves like grep on modified $_
ok 9 - indexes/modify
ok 10 - indexes_on_set not_dying()
ok 11 - indexes/modify set
ok 12 - No memory leaks in indexes (leaks 0 <= 0)
ok 13 - No memory leaks in indexes interrupted by exception (leaks 0 <= 0)
ok 14 - indexes/leak: some
ok 15 - indexes/leak: none
ok 16 - indexes/leak: odd
ok 17 - indexes/leak: even
ok 18 - weakened away
ok 19 - indexes without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 404.
1..19
ok
t/pureperl/insert_after.t ......... 
ok 1
ok 2
ok 3
ok 4
ok 5 - No memory leaks in insert_after (leaks 0 <= 0)
ok 6 - No memory leaks in insert_after with exception (leaks 0 <= 0)
ok 7 - insert_after without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 217.
ok 8 - insert_after without sub and array is_dying()
# Can't use string ("13") as an ARRAY ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 337.
ok 9 - insert_after without array is_dying()
# Can't use string ("13") as an ARRAY ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 337.
1..9
ok
t/pureperl/insert_after_string.t .. 
ok 1
ok 2
ok 3
ok 4 - No memory leaks in insert_after_string (leaks 0 <= 0)
ok 5 - No memory leaks in insert_after_string with exception (leaks 0 <= 0)
ok 6 - insert_after_string without array is_dying()
# Can't use string ("13") as an ARRAY ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 345.
1..6
ok
t/pureperl/lastidx.t .............. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9 - No memory leaks in lastidx (leaks 0 <= 0)
ok 10 - lastidx without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 295.
1..10
ok
t/pureperl/lastres.t .............. 
ok 1
ok 2
ok 3
ok 4
ok 5 - No memory leaks in lastres (leaks 0 <= 0)
ok 6 - lastres without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 324.
1..6
ok
t/pureperl/lastval.t .............. 
ok 1
ok 2
ok 3 - is_undef()
ok 4
ok 5
ok 6 - No memory leaks in lastval (leaks 0 <= 0)
ok 7 - lastval without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 307.
1..7
ok
t/pureperl/listcmp.t .............. 
ok 1 - Sequence vs. Prime vs. Fibonacci sorted out correctly
ok 2 - Sequence vs. Prime filled with undef sorted out correctly
ok 3 - No memory leaks in listcmp (leaks 0 <= 0)
ok 4 - No memory leaks in listcmp with exception in overloading stringify at begin (leaks 0 <= 0)
ok 5 - No memory leaks in listcmp with exception in overloading stringify at end (leaks 0 <= 0)
1..5
ok
t/pureperl/lower_bound.t .......... 
ok 1 - lower bound 0
ok 2 - lower bound 1
ok 3 - lower bound 2
ok 4 - lower bound 4
ok 5 - lower bound 19
ok 6 - placed 0
ok 7 - found 1
ok 8 - placed 1
ok 9 - found 2
ok 10 - placed 2
ok 11 - found 3
ok 12 - placed 3
ok 13 - found 4
ok 14 - placed 4
ok 15 - found 5
ok 16 - placed 5
ok 17 - found 6
ok 18 - placed 6
ok 19 - found 7
ok 20 - placed 7
ok 21 - found 8
ok 22 - placed 8
ok 23 - found 9
ok 24 - placed 9
ok 25 - found 10
ok 26 - placed 10
ok 27 - found 11
ok 28 - placed 11
ok 29 - found 12
ok 30 - placed 12
ok 31 - found 13
ok 32 - placed 13
ok 33 - found 14
ok 34 - placed 14
ok 35 - found 15
ok 36 - placed 15
ok 37 - found 16
ok 38 - placed 16
ok 39 - found 17
ok 40 - placed 17
ok 41 - found 18
ok 42 - placed 18
ok 43 - found 19
ok 44 - placed 19
ok 45 - found 20
ok 46 - placed 20
ok 47 - found 21
ok 48 - placed 21
ok 49 - found 22
ok 50 - placed 22
ok 51 - found 23
ok 52 - placed 23
ok 53 - found 24
ok 54 - placed 24
ok 55 - found 25
ok 56 - placed 25
ok 57 - found 26
ok 58 - placed 26
ok 59 - found 27
ok 60 - placed 27
ok 61 - found 28
ok 62 - placed 28
ok 63 - found 29
ok 64 - placed 29
ok 65 - found 30
ok 66 - placed 30
ok 67 - found 31
ok 68 - placed 31
ok 69 - found 32
ok 70 - placed 32
ok 71 - found 33
ok 72 - placed 33
ok 73 - found 34
ok 74 - placed 34
ok 75 - found 35
ok 76 - placed 35
ok 77 - found 36
ok 78 - placed 36
ok 79 - found 37
ok 80 - placed 37
ok 81 - found 38
ok 82 - placed 38
ok 83 - found 39
ok 84 - placed 39
ok 85 - found 40
ok 86 - placed 40
ok 87 - found 41
ok 88 - placed 41
ok 89 - found 42
ok 90 - placed 42
ok 91 - found 43
ok 92 - placed 43
ok 93 - found 44
ok 94 - placed 44
ok 95 - found 45
ok 96 - placed 45
ok 97 - found 46
ok 98 - placed 46
ok 99 - found 47
ok 100 - placed 47
ok 101 - found 48
ok 102 - placed 48
ok 103 - found 49
ok 104 - placed 49
ok 105 - found 50
ok 106 - placed 50
ok 107 - found 51
ok 108 - placed 51
ok 109 - found 52
ok 110 - placed 52
ok 111 - found 53
ok 112 - placed 53
ok 113 - found 54
ok 114 - placed 54
ok 115 - found 55
ok 116 - placed 55
ok 117 - found 56
ok 118 - placed 56
ok 119 - found 57
ok 120 - placed 57
ok 121 - found 58
ok 122 - placed 58
ok 123 - found 59
ok 124 - placed 59
ok 125 - found 60
ok 126 - placed 60
ok 127 - found 61
ok 128 - placed 61
ok 129 - found 62
ok 130 - placed 62
ok 131 - found 63
ok 132 - placed 63
ok 133 - found 64
ok 134 - placed 64
ok 135 - found 65
ok 136 - placed 65
ok 137 - found 66
ok 138 - placed 66
ok 139 - found 67
ok 140 - placed 67
ok 141 - found 68
ok 142 - placed 68
ok 143 - found 69
ok 144 - placed 69
ok 145 - found 70
ok 146 - placed 70
ok 147 - found 71
ok 148 - placed 71
ok 149 - found 72
ok 150 - placed 72
ok 151 - found 73
ok 152 - placed 73
ok 153 - found 74
ok 154 - placed 74
ok 155 - found 75
ok 156 - placed 75
ok 157 - found 76
ok 158 - placed 76
ok 159 - found 77
ok 160 - placed 77
ok 161 - found 78
ok 162 - placed 78
ok 163 - found 79
ok 164 - placed 79
ok 165 - found 80
ok 166 - placed 80
ok 167 - found 81
ok 168 - placed 81
ok 169 - found 82
ok 170 - placed 82
ok 171 - found 83
ok 172 - placed 83
ok 173 - found 84
ok 174 - placed 84
ok 175 - found 85
ok 176 - placed 85
ok 177 - found 86
ok 178 - placed 86
ok 179 - found 87
ok 180 - placed 87
ok 181 - found 88
ok 182 - placed 88
ok 183 - found 89
ok 184 - placed 89
ok 185 - found 90
ok 186 - placed 90
ok 187 - found 91
ok 188 - placed 91
ok 189 - found 92
ok 190 - placed 92
ok 191 - found 93
ok 192 - placed 93
ok 193 - found 94
ok 194 - placed 94
ok 195 - found 95
ok 196 - placed 95
ok 197 - found 96
ok 198 - placed 96
ok 199 - found 97
ok 200 - placed 97
ok 201 - found 98
ok 202 - placed 98
ok 203 - found 99
ok 204 - placed 99
ok 205 - found 100
ok 206 - put smaller -10 in front
ok 207 - put smaller -9 in front
ok 208 - put smaller -8 in front
ok 209 - put smaller -7 in front
ok 210 - put smaller -6 in front
ok 211 - put smaller -5 in front
ok 212 - put smaller -4 in front
ok 213 - put smaller -3 in front
ok 214 - put smaller -2 in front
ok 215 - put smaller -1 in front
ok 216 - put smaller 0 in front
ok 217 - put bigger 101 at end
ok 218 - put bigger 102 at end
ok 219 - put bigger 103 at end
ok 220 - put bigger 104 at end
ok 221 - put bigger 105 at end
ok 222 - put bigger 106 at end
ok 223 - put bigger 107 at end
ok 224 - put bigger 108 at end
ok 225 - put bigger 109 at end
ok 226 - put bigger 110 at end
ok 227 - put bigger 111 at end
ok 228 - No memory leaks in lower_bound (leaks 0 <= 0)
ok 229 - No memory leaks in lower_bound with stack-growing (leaks 0 <= 0)
ok 230 - No memory leaks in lower_bound with stack-growing and exception (leaks 0 <= 0)
ok 231 - lower_bound without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 796.
1..231
ok
t/pureperl/mesh.t ................. 
ok 1 - mesh two list with same count of elements
ok 2 - zip two list with same count of elements
ok 3 - mesh three list with increasing count of elements
ok 4 - zip three list with increasing count of elements
ok 5 - mesh one list with 9 elements with an empty list
ok 6 - No memory leaks in mesh (leaks 0 <= 0)
ok 7 - mesh with a list, not at least two arrays is_dying()
# Can't use string ("1") as an ARRAY ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 511.
1..7
ok
t/pureperl/minmax.t ............... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9 - minmax swallows max on COW
ok 10
ok 11
ok 12
ok 13 - minmax finds ivmin
ok 14 - minmax finds ivmin + 10
ok 15 - minmax finds ivmax-10
ok 16 - minmax finds ivmax
ok 17 - minmax finds ivmin
ok 18 - minmax finds ivmax
ok 19 - minmax finds uvmax-10
ok 20 - minmax finds uvmax
ok 21 - minmax finds ivmin
ok 22 - minmax finds uvmax
ok 23 - No memory leaks in minmax (leaks 0 <= 0)
1..23
ok
t/pureperl/minmaxstr.t ............ 
ok 1
ok 2
ok 3
ok 4
ok 5 - minmaxstr swallows max on COW
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11 - No memory leaks in minmaxstr (leaks 0 <= 0)
1..11
ok
t/pureperl/mode.t ................. 
ok 1 - mode:G_ARRAY lorem untouched
ok 2 - lorem mode as list
ok 3 - mode:G_SCALAR lorem untouched
ok 4 - lorem mode as scalar
ok 5 - mode:G_ARRAY probes untouched
ok 6 - unimodal result in list context
ok 7 - mode:G_SCALAR probes untouched
ok 8 - unimodal result in scalar context
ok 9 - bimodal mode:G_ARRAY probes untouched
ok 10 - bimodal result in list context
ok 11 - bimodal mode:G_SCALAR probes untouched
ok 12 - bimodal result in scalar context
ok 13 - multimodal result in list context
ok 14 - multimodal result in scalar context
ok 15 - No memory leaks in mode (unimodal) (leaks 0 <= 0)
ok 16 - No memory leaks in scalar mode (unimodal) (leaks 0 <= 0)
ok 17 - No memory leaks in mode (bimodal) (leaks 0 <= 0)
ok 18 - No memory leaks in scalar mode (bimodal) (leaks 0 <= 0)
ok 19 - No memory leaks in mode (multimodal) (leaks 0 <= 0)
ok 20 - No memory leaks in scalar mode (multimodal) (leaks 0 <= 0)
ok 21 - No memory leaks in mode (unimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 22 - No memory leaks in scalar mode (unimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 23 - No memory leaks in mode (bimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 24 - No memory leaks in scalar mode (bimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 25 - No memory leaks in mode (multimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 26 - No memory leaks in scalar mode (multimodal) with exception in overloading stringify (leaks 0 <= 0)
1..26
ok
t/pureperl/natatime.t ............. 
ok 1
ok 2 - natatime with 3 elements
ok 3
ok 4 - natatime with 1 element
ok 5 - No memory leaks in natatime (leaks 0 <= 0)
1..5
ok
t/pureperl/none.t ................. 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_true ()
ok 5 - No memory leaks in none (leaks 0 <= 0)
ok 6 - none without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 50.
1..6
ok
t/pureperl/none_u.t ............... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_undef()
ok 5 - No memory leaks in none_u (leaks 0 <= 0)
ok 6 - none_u without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 96.
1..6
ok
t/pureperl/notall.t ............... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_false()
ok 5 - No memory leaks in notall (leaks 0 <= 0)
ok 6 - notall without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 60.
1..6
ok
t/pureperl/notall_u.t ............. 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_undef()
ok 5 - No memory leaks in notall_u (leaks 0 <= 0)
ok 6 - notall_u without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 104.
1..6
ok
t/pureperl/occurrences.t .......... 
ok 1 - Each word is counted
ok 2 - Text to long, each word is there at least twice
ok 3 - 11 comma
ok 4 - 7 dots
ok 5 - 9 words 'et'
ok 6 - Words are as many as requested at www.loremipsum.de
ok 7 - probes untouched
ok 8 - occurrences of integer probes
ok 9 - probes untouched
ok 10 - occurrences of integer probes
ok 11 - No memory leaks in occurrences (leaks 0 <= 0)
ok 12 - No memory leaks in scalar occurrences (leaks 0 <= 0)
ok 13 - No memory leaks in occurrences with exception in overloading stringify (leaks 0 <= 0)
1..13
ok
t/pureperl/one.t .................. 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_false()
ok 6 - is_false()
ok 7 - is_false()
ok 8 - No memory leaks in one (leaks 0 <= 0)
ok 9 - one without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 71.
1..9
ok
t/pureperl/one_u.t ................ 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_false()
ok 6 - is_false()
ok 7 - is_undef()
ok 8 - No memory leaks in one_u (leaks 0 <= 0)
ok 9 - one_u without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 115.
1..9
ok
t/pureperl/onlyidx.t .............. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13 - No memory leaks in onlyidx (leaks 0 <= 0)
ok 14 - onlyidx without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 252.
1..14
ok
t/pureperl/onlyres.t .............. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11 - No memory leaks in onlyres (leaks 0 <= 0)
ok 12 - onlyres without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 281.
1..12
ok
t/pureperl/onlyval.t .............. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13 - No memory leaks in onlyval (leaks 0 <= 0)
ok 14 - onlyval without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 266.
1..14
ok
t/pureperl/pairwise.t ............. 
ok 1 - pw1
ok 2 - pw2
ok 3 - pw3
ok 4 - pw4
ok 5 - pw5
ok 6 - pw6
ok 7 - pw7
ok 8 - pw8
ok 9 - pw9
ok 10 - pwX
ok 11
ok 12 - pw map
ok 13
ok 14 - No memory leaks in pairwise (leaks 0 <= 0)
ok 15 - No memory leaks in exceptional block (leaks 0 <= 0)
ok 16 # skip PurePerl will warn here ...
ok 17 - warning on broken caller
ok 18 - pairwise without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 437.
ok 19 # skip PurePerl will not core here ...
ok 20 # skip PurePerl will not core here ...
1..20
ok
t/pureperl/part.t ................. 
ok 1 -   i: part % 3
ok 2 -  ii: part % 3
ok 3 - iii: part % 3
ok 4 - Values are not aliases
ok 5 -   i: part 3
ok 6 -  ii: part 3
ok 7 - iii: part 3
ok 8 -  iv: part 3
ok 9
ok 10 - part with negative indices
ok 11 - part with undef
ok 12 - warning of undef
ok 13 - amount of similar undef warnings
ok 14 -   i: part 10_000
ok 15 -  ii: part 10_000
ok 16 - iii: part 10_000
ok 17 -  iv: part 10_000
ok 18 - part $_: 1
ok 19 - part $_: 2
ok 20 - part $_: 3
ok 21 - part $_: 4
ok 22 - part $_: 5
ok 23 - part $_: 6
ok 24 - part $_: 7
ok 25 - part $_: 8
ok 26 - part $_: 9
ok 27 - part $_: 10
ok 28 - No memory leaks in part (leaks 0 <= 0)
ok 29 - No memory leaks in part with stack-growing (leaks 0 <= 0)
ok 30 - No memory leaks in part with exception (leaks 0 <= 0)
1..30
ok
t/pureperl/qsort.t ................ skipped: It's insane to use a pure-perl qsort
t/pureperl/reduce_0.t ............. 
ok 1 - weighted average of exam
ok 2 - No memory leaks in reduce_0 (leaks 0 <= 0)
ok 3 - No memory leaks in reduce_0 X (leaks 0 <= 0)
ok 4 - No memory leaks in reduce_0 with a coderef that dies (leaks 0 <= 0)
ok 5 - reduce_0 without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 164.
1..5
ok
t/pureperl/reduce_1.t ............. 
ok 1 - Wallis product => near? 1.57027316403184 ~= 1.5707963267949
1..1
ok
t/pureperl/reduce_u.t ............. 
ok 1 - weighted average of exam
ok 2 - No memory leaks in reduce_u (leaks 0 <= 0)
ok 3 - No memory leaks in reduce_u X (leaks 0 <= 0)
ok 4 - No memory leaks in reduce_u with a coderef that dies (leaks 0 <= 0)
ok 5 - reduce_u without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 139.
1..5
ok
t/pureperl/samples.t .............. 
ok 1 - samples stops correctly after 10 integer probes
ok 2 - samples doesn't add any integer twice
ok 3 - samples delivers 10 out of 10 when used as shuffle
ok 4 - samples doesn't add any integer twice
ok 5 - samples stops correctly after 10 strings probes
ok 6 - samples doesn't add any string twice
ok 7 - to much samples is_dying()
# Cannot get 5 samples from 3 elements at t/pureperl/samples.t line 41.
ok 8 # skip PurePerl will not fail here ...
1..8
ok
t/pureperl/singleton.t ............ 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12 - one undef is supported correctly by singleton
ok 13 - twice undef is supported correctly by singleton
ok 14 - scalar twice undef is supported correctly by singleton
ok 15 - No memory leaks in singleton (leaks 0 <= 0)
ok 16 - No memory leaks in singleton with exception in overloading stringify (leaks 0 <= 0)
1..16
ok
t/pureperl/slide.t ................ 
ok 1 - M. Schwern requested example
ok 2 - slide without sub is_dying()
# Can't use string ("0") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 883.
1..2
ok
t/pureperl/slideatatime.t ......... 
ok 1
ok 2 - slideatatime as natatime with 3 elements
ok 3
ok 4 - slideatatime moving 3 elements by 2 items
ok 5
ok 6 - slideatatime moving 3 elements by 1 item
ok 7
ok 8 - slideatatime as natatime with 1 element
ok 9 - No memory leaks in slideatatime (leaks 0 <= 0)
ok 10 - No memory leaks in slideatatime with exception (leaks 0 <= 0)
1..10
ok
t/pureperl/true.t ................. 
ok 1 - true(null) returns undef
ok 2 - true(null) returns undef
ok 3
ok 4
ok 5
ok 6 - No memory leaks in true (leaks 0 <= 0)
ok 7 - true without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 199.
1..7
ok
t/pureperl/uniq.t ................. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13 - undef is supported correctly
ok 14 - No memory leaks in uniq (leaks 0 <= 0)
ok 15 - No memory leaks in uniq with exception in overloading stringify (leaks 0 <= 0)
1..15
ok
t/pureperl/upper_bound.t .......... 
ok 1 - upper bound 0
ok 2 - upper bound 1
ok 3 - upper bound 2
ok 4 - upper bound 4
ok 5 - upper bound 19
ok 6 - placed 0
ok 7 - found 1
ok 8 - placed 1
ok 9 - found 2
ok 10 - placed 2
ok 11 - found 3
ok 12 - placed 3
ok 13 - found 4
ok 14 - placed 4
ok 15 - found 5
ok 16 - placed 5
ok 17 - found 6
ok 18 - placed 6
ok 19 - found 7
ok 20 - placed 7
ok 21 - found 8
ok 22 - placed 8
ok 23 - found 9
ok 24 - placed 9
ok 25 - found 10
ok 26 - placed 10
ok 27 - found 11
ok 28 - placed 11
ok 29 - found 12
ok 30 - placed 12
ok 31 - found 13
ok 32 - placed 13
ok 33 - found 14
ok 34 - placed 14
ok 35 - found 15
ok 36 - placed 15
ok 37 - found 16
ok 38 - placed 16
ok 39 - found 17
ok 40 - placed 17
ok 41 - found 18
ok 42 - placed 18
ok 43 - found 19
ok 44 - placed 19
ok 45 - found 20
ok 46 - placed 20
ok 47 - found 21
ok 48 - placed 21
ok 49 - found 22
ok 50 - placed 22
ok 51 - found 23
ok 52 - placed 23
ok 53 - found 24
ok 54 - placed 24
ok 55 - found 25
ok 56 - placed 25
ok 57 - found 26
ok 58 - placed 26
ok 59 - found 27
ok 60 - placed 27
ok 61 - found 28
ok 62 - placed 28
ok 63 - found 29
ok 64 - placed 29
ok 65 - found 30
ok 66 - placed 30
ok 67 - found 31
ok 68 - placed 31
ok 69 - found 32
ok 70 - placed 32
ok 71 - found 33
ok 72 - placed 33
ok 73 - found 34
ok 74 - placed 34
ok 75 - found 35
ok 76 - placed 35
ok 77 - found 36
ok 78 - placed 36
ok 79 - found 37
ok 80 - placed 37
ok 81 - found 38
ok 82 - placed 38
ok 83 - found 39
ok 84 - placed 39
ok 85 - found 40
ok 86 - placed 40
ok 87 - found 41
ok 88 - placed 41
ok 89 - found 42
ok 90 - placed 42
ok 91 - found 43
ok 92 - placed 43
ok 93 - found 44
ok 94 - placed 44
ok 95 - found 45
ok 96 - placed 45
ok 97 - found 46
ok 98 - placed 46
ok 99 - found 47
ok 100 - placed 47
ok 101 - found 48
ok 102 - placed 48
ok 103 - found 49
ok 104 - placed 49
ok 105 - found 50
ok 106 - placed 50
ok 107 - found 51
ok 108 - placed 51
ok 109 - found 52
ok 110 - placed 52
ok 111 - found 53
ok 112 - placed 53
ok 113 - found 54
ok 114 - placed 54
ok 115 - found 55
ok 116 - placed 55
ok 117 - found 56
ok 118 - placed 56
ok 119 - found 57
ok 120 - placed 57
ok 121 - found 58
ok 122 - placed 58
ok 123 - found 59
ok 124 - placed 59
ok 125 - found 60
ok 126 - placed 60
ok 127 - found 61
ok 128 - placed 61
ok 129 - found 62
ok 130 - placed 62
ok 131 - found 63
ok 132 - placed 63
ok 133 - found 64
ok 134 - placed 64
ok 135 - found 65
ok 136 - placed 65
ok 137 - found 66
ok 138 - placed 66
ok 139 - found 67
ok 140 - placed 67
ok 141 - found 68
ok 142 - placed 68
ok 143 - found 69
ok 144 - placed 69
ok 145 - found 70
ok 146 - placed 70
ok 147 - found 71
ok 148 - placed 71
ok 149 - found 72
ok 150 - placed 72
ok 151 - found 73
ok 152 - placed 73
ok 153 - found 74
ok 154 - placed 74
ok 155 - found 75
ok 156 - placed 75
ok 157 - found 76
ok 158 - placed 76
ok 159 - found 77
ok 160 - placed 77
ok 161 - found 78
ok 162 - placed 78
ok 163 - found 79
ok 164 - placed 79
ok 165 - found 80
ok 166 - placed 80
ok 167 - found 81
ok 168 - placed 81
ok 169 - found 82
ok 170 - placed 82
ok 171 - found 83
ok 172 - placed 83
ok 173 - found 84
ok 174 - placed 84
ok 175 - found 85
ok 176 - placed 85
ok 177 - found 86
ok 178 - placed 86
ok 179 - found 87
ok 180 - placed 87
ok 181 - found 88
ok 182 - placed 88
ok 183 - found 89
ok 184 - placed 89
ok 185 - found 90
ok 186 - placed 90
ok 187 - found 91
ok 188 - placed 91
ok 189 - found 92
ok 190 - placed 92
ok 191 - found 93
ok 192 - placed 93
ok 193 - found 94
ok 194 - placed 94
ok 195 - found 95
ok 196 - placed 95
ok 197 - found 96
ok 198 - placed 96
ok 199 - found 97
ok 200 - placed 97
ok 201 - found 98
ok 202 - placed 98
ok 203 - found 99
ok 204 - placed 99
ok 205 - found 100
ok 206 - put smaller -10 in front
ok 207 - put smaller -9 in front
ok 208 - put smaller -8 in front
ok 209 - put smaller -7 in front
ok 210 - put smaller -6 in front
ok 211 - put smaller -5 in front
ok 212 - put smaller -4 in front
ok 213 - put smaller -3 in front
ok 214 - put smaller -2 in front
ok 215 - put smaller -1 in front
ok 216 - put smaller 0 in front
ok 217 - put bigger 101 at end
ok 218 - put bigger 102 at end
ok 219 - put bigger 103 at end
ok 220 - put bigger 104 at end
ok 221 - put bigger 105 at end
ok 222 - put bigger 106 at end
ok 223 - put bigger 107 at end
ok 224 - put bigger 108 at end
ok 225 - put bigger 109 at end
ok 226 - put bigger 110 at end
ok 227 - put bigger 111 at end
ok 228 - No memory leaks in upper_bound (leaks 0 <= 0)
ok 229 - No memory leaks in upper_bound with stack-growing (leaks 0 <= 0)
ok 230 - No memory leaks in upper_bound with stack-growing and exception (leaks 0 <= 0)
ok 231 - upper_bound without sub is_dying()
# Can't use string ("42") as a subroutine ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 820.
1..231
ok
t/pureperl/zip6.t ................. 
ok 1 - zip6 two lists with same count of elements
ok 2 - zip6 three list with increasing count of elements
ok 3 - zip6 one list with 9 elements with an empty list
ok 4 - No memory leaks in zip6 (leaks 0 <= 0)
ok 5 - zip6 with a list, not at least two arrays is_dying()
# Can't use string ("1") as an ARRAY ref while "strict refs" in use at /usr/share/perl5/List/MoreUtils/PP.pm line 523.
1..5
ok
t/xs/Import.t ..................... 
ok 1 - main->can('any')
ok 2 - main->can('all')
ok 3 - main->can('none')
ok 4 - main->can('notall')
ok 5 - main->can('one')
ok 6 - main->can('any_u')
ok 7 - main->can('all_u')
ok 8 - main->can('none_u')
ok 9 - main->can('notall_u')
ok 10 - main->can('one_u')
ok 11 - main->can('true')
ok 12 - main->can('false')
ok 13 - main->can('insert_after')
ok 14 - main->can('insert_after_string')
ok 15 - main->can('apply')
ok 16 - main->can('indexes')
ok 17 - main->can('after')
ok 18 - main->can('after_incl')
ok 19 - main->can('before')
ok 20 - main->can('before_incl')
ok 21 - main->can('firstidx')
ok 22 - main->can('lastidx')
ok 23 - main->can('onlyidx')
ok 24 - main->can('firstval')
ok 25 - main->can('lastval')
ok 26 - main->can('onlyval')
ok 27 - main->can('firstres')
ok 28 - main->can('lastres')
ok 29 - main->can('onlyres')
ok 30 - main->can('singleton')
ok 31 - main->can('each_array')
ok 32 - main->can('each_arrayref')
ok 33 - main->can('pairwise')
ok 34 - main->can('natatime')
ok 35 - main->can('mesh')
ok 36 - main->can('uniq')
ok 37 - main->can('minmax')
ok 38 - main->can('part')
ok 39 - main->can('bsearch')
ok 40 - main->can('bsearchidx')
ok 41 - main->can('sort_by')
ok 42 - main->can('nsort_by')
ok 43 - main->can('last_index')
ok 44 - main->can('first_value')
ok 45 - main->can('first_index')
ok 46 - main->can('zip')
ok 47 - main->can('last_value')
ok 48 - main->can('only_index')
ok 49 - main->can('bsearch_index')
ok 50 - main->can('only_result')
ok 51 - main->can('last_result')
ok 52 - main->can('only_value')
ok 53 - main->can('first_result')
ok 54 - main->can('distinct')
1..54
ok
t/xs/XS.t ......................... 
ok 1 - _XScompiled
1..1
ok
t/xs/after.t ...................... 
ok 1 - after 5
ok 2 - Got the null list
ok 3 - after /b/
ok 4 - No memory leaks in after (leaks 0 <= 0)
ok 5 - after without sub is_dying()
# Usage: List::MoreUtils::XS::after(code, ...) at t/xs/after.t line 28.
ok 6 - check XS implementation doesn't mess up stack
1..6
ok
t/xs/after_incl.t ................. 
ok 1 - after 5, included
ok 2 - Got the null list
ok 3 - after /b/, included
ok 4 - No memory leaks in after_incl (leaks 0 <= 0)
ok 5 - after_incl without sub is_dying()
# Usage: List::MoreUtils::XS::after_incl(code, ...) at t/xs/after_incl.t line 28.
1..5
ok
t/xs/all.t ........................ 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_true ()
ok 5 - No memory leaks in all (leaks 0 <= 0)
ok 6 - all without sub is_dying()
# Usage: List::MoreUtils::XS::all(code, ...) at t/xs/all.t line 27.
1..6
ok
t/xs/all_u.t ...................... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_undef()
ok 5 - No memory leaks in all_u (leaks 0 <= 0)
ok 6 - all_u without sub is_dying()
# Usage: List::MoreUtils::XS::all_u(code, ...) at t/xs/all_u.t line 27.
1..6
ok
t/xs/any.t ........................ 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_true ()
ok 6 - is_false()
ok 7 - No memory leaks in any (leaks 0 <= 0)
ok 8 - No memory leaks in any with a coderef that dies (leaks 0 <= 0)
ok 9 - any without sub is_dying()
# Usage: List::MoreUtils::XS::any(code, ...) at t/xs/any.t line 37.
1..9
ok
t/xs/any_u.t ...................... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_true ()
ok 6 - is_undef()
ok 7 - No memory leaks in any_u (leaks 0 <= 0)
ok 8 - No memory leaks in any_u with a coderef that dies (leaks 0 <= 0)
ok 9 - any_u without sub is_dying()
# Usage: List::MoreUtils::XS::any_u(code, ...) at t/xs/any_u.t line 37.
1..9
ok
t/xs/apply.t ...................... 
ok 1 - apply(null) returns undef
ok 2 - apply(null) returns null list
ok 3 - original numbers untouched
ok 4 - returned numbers increased
ok 5 - original strings untouched
ok 6 - returned strings stripped
ok 7
ok 8 - apply must be reasonable invoked
ok 9
ok 10
ok 11 - No memory leaks in apply (leaks 0 <= 0)
ok 12 - No memory leaks in dying callback during apply (leaks 0 <= 0)
ok 13 - apply without sub is_dying()
# Usage: List::MoreUtils::XS::apply(code, ...) at t/xs/apply.t line 76.
1..13
ok
t/xs/arrayify.t ................... 
ok 1 - linear flattened int mix i
ok 2 - linear flattened int mix ii
ok 3 - arrayified struct with one element
ok 4 - arrayified struct with three elements
ok 5 - linear flattened magic int mix
ok 6 - linear flattened magic int mixture
ok 7 - linear flattened string mix i
ok 8 - No memory leaks in arrayify (leaks 0 <= 0)
ok 9 - No memory leaks in arrayify magic (leaks 0 <= 0)
ok 10 - No memory leaks in arrayify with exception in overloading stringify at begin (leaks 0 <= 0)
ok 11 - No memory leaks in arrayify with exception in overloading stringify at end (leaks 0 <= 0)
1..11
ok
t/xs/before.t ..................... 
ok 1 - before 5
ok 2 - Got the null list
ok 3 - before /f/
ok 4 - No memory leaks in before (leaks 0 <= 0)
ok 5 - before without sub is_dying()
# Usage: List::MoreUtils::XS::before(code, ...) at t/xs/before.t line 28.
1..5
ok
t/xs/before_incl.t ................ 
ok 1 - before 5, included
ok 2
ok 3 - before /f/, included
ok 4 - No memory leaks in before_incl (leaks 0 <= 0)
ok 5 - before_incl without sub is_dying()
# Usage: List::MoreUtils::XS::before_incl(code, ...) at t/xs/before_incl.t line 28.
1..5
ok
t/xs/binsert.t .................... 
ok 1 - Inserting into empty list
ok 2 - Inserting into one-item list
ok 3 - binsert odd elements into even list succeeded
ok 4 - binsert odd elements reversely into even list succeeded
ok 5 - binsert even elements into odd list succeeded
ok 6 - binsert even elements reversely into odd list succeeded
ok 7 - binsert existing even elements into even list succeeded
ok 8 - binsert existing even elements reversely into even list succeeded
ok 9 - No memory leaks in binsert random (leaks 0 <= 0)
ok 10 - No memory leaks in binsert existing random (leaks 0 <= 0)
ok 11 - No memory leaks in binsert odd into even (leaks 0 <= 0)
ok 12 - No memory leaks in binsert even into odd (leaks 0 <= 0)
ok 13 - No memory leaks in binsert odd into odd (leaks 0 <= 0)
ok 14 - No memory leaks in binsert even into even (leaks 0 <= 0)
ok 15 - No memory leaks in binsert random with stack-growing (leaks 0 <= 0)
ok 16 - No memory leaks in binsert odd with stack-growing (leaks 0 <= 0)
ok 17 - No memory leaks in binsert even with stack-growing (leaks 0 <= 0)
ok 18 - No memory leaks in binsert with stack-growing and exception (leaks 0 <= 0)
ok 19 - binsert without sub is_dying()
# Usage: List::MoreUtils::XS::binsert(code, item, list) at t/xs/binsert.t line 144.
1..19
ok
t/xs/bremove.t .................... 
ok 1 - 1 in order removed
ok 2 - 3 in order removed
ok 3 - 5 in order removed
ok 4 - 7 in order removed
ok 5 - 9 in order removed
ok 6 - 11 in order removed
ok 7 - 13 in order removed
ok 8 - 15 in order removed
ok 9 - 17 in order removed
ok 10 - 19 in order removed
ok 11 - 21 in order removed
ok 12 - 23 in order removed
ok 13 - 25 in order removed
ok 14 - 27 in order removed
ok 15 - 29 in order removed
ok 16 - 31 in order removed
ok 17 - 33 in order removed
ok 18 - 35 in order removed
ok 19 - 37 in order removed
ok 20 - 39 in order removed
ok 21 - 41 in order removed
ok 22 - 43 in order removed
ok 23 - 45 in order removed
ok 24 - 47 in order removed
ok 25 - 49 in order removed
ok 26 - 51 in order removed
ok 27 - 53 in order removed
ok 28 - 55 in order removed
ok 29 - 57 in order removed
ok 30 - 59 in order removed
ok 31 - 61 in order removed
ok 32 - 63 in order removed
ok 33 - 65 in order removed
ok 34 - 67 in order removed
ok 35 - 69 in order removed
ok 36 - 71 in order removed
ok 37 - 73 in order removed
ok 38 - 75 in order removed
ok 39 - 77 in order removed
ok 40 - 79 in order removed
ok 41 - 81 in order removed
ok 42 - 83 in order removed
ok 43 - 85 in order removed
ok 44 - 87 in order removed
ok 45 - 89 in order removed
ok 46 - 91 in order removed
ok 47 - 93 in order removed
ok 48 - 95 in order removed
ok 49 - 97 in order removed
ok 50 - 99 in order removed
ok 51 - 101 in order removed
ok 52 - 103 in order removed
ok 53 - 105 in order removed
ok 54 - 107 in order removed
ok 55 - 109 in order removed
ok 56 - 111 in order removed
ok 57 - 113 in order removed
ok 58 - 115 in order removed
ok 59 - 117 in order removed
ok 60 - 119 in order removed
ok 61 - 121 in order removed
ok 62 - 123 in order removed
ok 63 - 125 in order removed
ok 64 - 127 in order removed
ok 65 - 129 in order removed
ok 66 - 131 in order removed
ok 67 - 133 in order removed
ok 68 - 135 in order removed
ok 69 - 137 in order removed
ok 70 - 139 in order removed
ok 71 - 141 in order removed
ok 72 - 143 in order removed
ok 73 - 145 in order removed
ok 74 - 147 in order removed
ok 75 - 149 in order removed
ok 76 - 151 in order removed
ok 77 - 153 in order removed
ok 78 - 155 in order removed
ok 79 - 157 in order removed
ok 80 - 159 in order removed
ok 81 - 161 in order removed
ok 82 - 163 in order removed
ok 83 - 165 in order removed
ok 84 - 167 in order removed
ok 85 - 169 in order removed
ok 86 - 171 in order removed
ok 87 - 173 in order removed
ok 88 - 175 in order removed
ok 89 - 177 in order removed
ok 90 - 179 in order removed
ok 91 - 181 in order removed
ok 92 - 183 in order removed
ok 93 - 185 in order removed
ok 94 - 187 in order removed
ok 95 - 189 in order removed
ok 96 - 191 in order removed
ok 97 - 193 in order removed
ok 98 - 195 in order removed
ok 99 - 197 in order removed
ok 100 - 199 in order removed
ok 101 - bremove all odd elements succeeded
ok 102 - 199 reverse ordered removed
ok 103 - 197 reverse ordered removed
ok 104 - 195 reverse ordered removed
ok 105 - 193 reverse ordered removed
ok 106 - 191 reverse ordered removed
ok 107 - 189 reverse ordered removed
ok 108 - 187 reverse ordered removed
ok 109 - 185 reverse ordered removed
ok 110 - 183 reverse ordered removed
ok 111 - 181 reverse ordered removed
ok 112 - 179 reverse ordered removed
ok 113 - 177 reverse ordered removed
ok 114 - 175 reverse ordered removed
ok 115 - 173 reverse ordered removed
ok 116 - 171 reverse ordered removed
ok 117 - 169 reverse ordered removed
ok 118 - 167 reverse ordered removed
ok 119 - 165 reverse ordered removed
ok 120 - 163 reverse ordered removed
ok 121 - 161 reverse ordered removed
ok 122 - 159 reverse ordered removed
ok 123 - 157 reverse ordered removed
ok 124 - 155 reverse ordered removed
ok 125 - 153 reverse ordered removed
ok 126 - 151 reverse ordered removed
ok 127 - 149 reverse ordered removed
ok 128 - 147 reverse ordered removed
ok 129 - 145 reverse ordered removed
ok 130 - 143 reverse ordered removed
ok 131 - 141 reverse ordered removed
ok 132 - 139 reverse ordered removed
ok 133 - 137 reverse ordered removed
ok 134 - 135 reverse ordered removed
ok 135 - 133 reverse ordered removed
ok 136 - 131 reverse ordered removed
ok 137 - 129 reverse ordered removed
ok 138 - 127 reverse ordered removed
ok 139 - 125 reverse ordered removed
ok 140 - 123 reverse ordered removed
ok 141 - 121 reverse ordered removed
ok 142 - 119 reverse ordered removed
ok 143 - 117 reverse ordered removed
ok 144 - 115 reverse ordered removed
ok 145 - 113 reverse ordered removed
ok 146 - 111 reverse ordered removed
ok 147 - 109 reverse ordered removed
ok 148 - 107 reverse ordered removed
ok 149 - 105 reverse ordered removed
ok 150 - 103 reverse ordered removed
ok 151 - 101 reverse ordered removed
ok 152 - 99 reverse ordered removed
ok 153 - 97 reverse ordered removed
ok 154 - 95 reverse ordered removed
ok 155 - 93 reverse ordered removed
ok 156 - 91 reverse ordered removed
ok 157 - 89 reverse ordered removed
ok 158 - 87 reverse ordered removed
ok 159 - 85 reverse ordered removed
ok 160 - 83 reverse ordered removed
ok 161 - 81 reverse ordered removed
ok 162 - 79 reverse ordered removed
ok 163 - 77 reverse ordered removed
ok 164 - 75 reverse ordered removed
ok 165 - 73 reverse ordered removed
ok 166 - 71 reverse ordered removed
ok 167 - 69 reverse ordered removed
ok 168 - 67 reverse ordered removed
ok 169 - 65 reverse ordered removed
ok 170 - 63 reverse ordered removed
ok 171 - 61 reverse ordered removed
ok 172 - 59 reverse ordered removed
ok 173 - 57 reverse ordered removed
ok 174 - 55 reverse ordered removed
ok 175 - 53 reverse ordered removed
ok 176 - 51 reverse ordered removed
ok 177 - 49 reverse ordered removed
ok 178 - 47 reverse ordered removed
ok 179 - 45 reverse ordered removed
ok 180 - 43 reverse ordered removed
ok 181 - 41 reverse ordered removed
ok 182 - 39 reverse ordered removed
ok 183 - 37 reverse ordered removed
ok 184 - 35 reverse ordered removed
ok 185 - 33 reverse ordered removed
ok 186 - 31 reverse ordered removed
ok 187 - 29 reverse ordered removed
ok 188 - 27 reverse ordered removed
ok 189 - 25 reverse ordered removed
ok 190 - 23 reverse ordered removed
ok 191 - 21 reverse ordered removed
ok 192 - 19 reverse ordered removed
ok 193 - 17 reverse ordered removed
ok 194 - 15 reverse ordered removed
ok 195 - 13 reverse ordered removed
ok 196 - 11 reverse ordered removed
ok 197 - 9 reverse ordered removed
ok 198 - 7 reverse ordered removed
ok 199 - 5 reverse ordered removed
ok 200 - 3 reverse ordered removed
ok 201 - 1 reverse ordered removed
ok 202 - bremove all odd elements reversely succeeded
ok 203 - 2 in order removed
ok 204 - 4 in order removed
ok 205 - 6 in order removed
ok 206 - 8 in order removed
ok 207 - 10 in order removed
ok 208 - 12 in order removed
ok 209 - 14 in order removed
ok 210 - 16 in order removed
ok 211 - 18 in order removed
ok 212 - 20 in order removed
ok 213 - 22 in order removed
ok 214 - 24 in order removed
ok 215 - 26 in order removed
ok 216 - 28 in order removed
ok 217 - 30 in order removed
ok 218 - 32 in order removed
ok 219 - 34 in order removed
ok 220 - 36 in order removed
ok 221 - 38 in order removed
ok 222 - 40 in order removed
ok 223 - 42 in order removed
ok 224 - 44 in order removed
ok 225 - 46 in order removed
ok 226 - 48 in order removed
ok 227 - 50 in order removed
ok 228 - 52 in order removed
ok 229 - 54 in order removed
ok 230 - 56 in order removed
ok 231 - 58 in order removed
ok 232 - 60 in order removed
ok 233 - 62 in order removed
ok 234 - 64 in order removed
ok 235 - 66 in order removed
ok 236 - 68 in order removed
ok 237 - 70 in order removed
ok 238 - 72 in order removed
ok 239 - 74 in order removed
ok 240 - 76 in order removed
ok 241 - 78 in order removed
ok 242 - 80 in order removed
ok 243 - 82 in order removed
ok 244 - 84 in order removed
ok 245 - 86 in order removed
ok 246 - 88 in order removed
ok 247 - 90 in order removed
ok 248 - 92 in order removed
ok 249 - 94 in order removed
ok 250 - 96 in order removed
ok 251 - 98 in order removed
ok 252 - 100 in order removed
ok 253 - 102 in order removed
ok 254 - 104 in order removed
ok 255 - 106 in order removed
ok 256 - 108 in order removed
ok 257 - 110 in order removed
ok 258 - 112 in order removed
ok 259 - 114 in order removed
ok 260 - 116 in order removed
ok 261 - 118 in order removed
ok 262 - 120 in order removed
ok 263 - 122 in order removed
ok 264 - 124 in order removed
ok 265 - 126 in order removed
ok 266 - 128 in order removed
ok 267 - 130 in order removed
ok 268 - 132 in order removed
ok 269 - 134 in order removed
ok 270 - 136 in order removed
ok 271 - 138 in order removed
ok 272 - 140 in order removed
ok 273 - 142 in order removed
ok 274 - 144 in order removed
ok 275 - 146 in order removed
ok 276 - 148 in order removed
ok 277 - 150 in order removed
ok 278 - 152 in order removed
ok 279 - 154 in order removed
ok 280 - 156 in order removed
ok 281 - 158 in order removed
ok 282 - 160 in order removed
ok 283 - 162 in order removed
ok 284 - 164 in order removed
ok 285 - 166 in order removed
ok 286 - 168 in order removed
ok 287 - 170 in order removed
ok 288 - 172 in order removed
ok 289 - 174 in order removed
ok 290 - 176 in order removed
ok 291 - 178 in order removed
ok 292 - 180 in order removed
ok 293 - 182 in order removed
ok 294 - 184 in order removed
ok 295 - 186 in order removed
ok 296 - 188 in order removed
ok 297 - 190 in order removed
ok 298 - 192 in order removed
ok 299 - 194 in order removed
ok 300 - 196 in order removed
ok 301 - 198 in order removed
ok 302 - 200 in order removed
ok 303 - bremove all even elements succeeded
ok 304 - 200 reverse ordered removed
ok 305 - 198 reverse ordered removed
ok 306 - 196 reverse ordered removed
ok 307 - 194 reverse ordered removed
ok 308 - 192 reverse ordered removed
ok 309 - 190 reverse ordered removed
ok 310 - 188 reverse ordered removed
ok 311 - 186 reverse ordered removed
ok 312 - 184 reverse ordered removed
ok 313 - 182 reverse ordered removed
ok 314 - 180 reverse ordered removed
ok 315 - 178 reverse ordered removed
ok 316 - 176 reverse ordered removed
ok 317 - 174 reverse ordered removed
ok 318 - 172 reverse ordered removed
ok 319 - 170 reverse ordered removed
ok 320 - 168 reverse ordered removed
ok 321 - 166 reverse ordered removed
ok 322 - 164 reverse ordered removed
ok 323 - 162 reverse ordered removed
ok 324 - 160 reverse ordered removed
ok 325 - 158 reverse ordered removed
ok 326 - 156 reverse ordered removed
ok 327 - 154 reverse ordered removed
ok 328 - 152 reverse ordered removed
ok 329 - 150 reverse ordered removed
ok 330 - 148 reverse ordered removed
ok 331 - 146 reverse ordered removed
ok 332 - 144 reverse ordered removed
ok 333 - 142 reverse ordered removed
ok 334 - 140 reverse ordered removed
ok 335 - 138 reverse ordered removed
ok 336 - 136 reverse ordered removed
ok 337 - 134 reverse ordered removed
ok 338 - 132 reverse ordered removed
ok 339 - 130 reverse ordered removed
ok 340 - 128 reverse ordered removed
ok 341 - 126 reverse ordered removed
ok 342 - 124 reverse ordered removed
ok 343 - 122 reverse ordered removed
ok 344 - 120 reverse ordered removed
ok 345 - 118 reverse ordered removed
ok 346 - 116 reverse ordered removed
ok 347 - 114 reverse ordered removed
ok 348 - 112 reverse ordered removed
ok 349 - 110 reverse ordered removed
ok 350 - 108 reverse ordered removed
ok 351 - 106 reverse ordered removed
ok 352 - 104 reverse ordered removed
ok 353 - 102 reverse ordered removed
ok 354 - 100 reverse ordered removed
ok 355 - 98 reverse ordered removed
ok 356 - 96 reverse ordered removed
ok 357 - 94 reverse ordered removed
ok 358 - 92 reverse ordered removed
ok 359 - 90 reverse ordered removed
ok 360 - 88 reverse ordered removed
ok 361 - 86 reverse ordered removed
ok 362 - 84 reverse ordered removed
ok 363 - 82 reverse ordered removed
ok 364 - 80 reverse ordered removed
ok 365 - 78 reverse ordered removed
ok 366 - 76 reverse ordered removed
ok 367 - 74 reverse ordered removed
ok 368 - 72 reverse ordered removed
ok 369 - 70 reverse ordered removed
ok 370 - 68 reverse ordered removed
ok 371 - 66 reverse ordered removed
ok 372 - 64 reverse ordered removed
ok 373 - 62 reverse ordered removed
ok 374 - 60 reverse ordered removed
ok 375 - 58 reverse ordered removed
ok 376 - 56 reverse ordered removed
ok 377 - 54 reverse ordered removed
ok 378 - 52 reverse ordered removed
ok 379 - 50 reverse ordered removed
ok 380 - 48 reverse ordered removed
ok 381 - 46 reverse ordered removed
ok 382 - 44 reverse ordered removed
ok 383 - 42 reverse ordered removed
ok 384 - 40 reverse ordered removed
ok 385 - 38 reverse ordered removed
ok 386 - 36 reverse ordered removed
ok 387 - 34 reverse ordered removed
ok 388 - 32 reverse ordered removed
ok 389 - 30 reverse ordered removed
ok 390 - 28 reverse ordered removed
ok 391 - 26 reverse ordered removed
ok 392 - 24 reverse ordered removed
ok 393 - 22 reverse ordered removed
ok 394 - 20 reverse ordered removed
ok 395 - 18 reverse ordered removed
ok 396 - 16 reverse ordered removed
ok 397 - 14 reverse ordered removed
ok 398 - 12 reverse ordered removed
ok 399 - 10 reverse ordered removed
ok 400 - 8 reverse ordered removed
ok 401 - 6 reverse ordered removed
ok 402 - 4 reverse ordered removed
ok 403 - 2 reverse ordered removed
ok 404 - bremove all even elements reversely succeeded
ok 405 - removed from single item list
ok 406 - No memory leaks in bremove first (leaks 0 <= 0)
ok 407 - No memory leaks in bremove last (leaks 0 <= 0)
ok 408 - No memory leaks in bremove middle (leaks 0 <= 0)
ok 409 - No memory leaks in bremove first with stack-growing (leaks 0 <= 0)
ok 410 - No memory leaks in bremove last with stack-growing (leaks 0 <= 0)
ok 411 - No memory leaks in bremove middle with stack-growing (leaks 0 <= 0)
ok 412 - No memory leaks in bremove first with stack-growing and exception (leaks 0 <= 0)
ok 413 - No memory leaks in bremove last with stack-growing and exception (leaks 0 <= 0)
ok 414 - No memory leaks in bremove middle with stack-growing and exception (leaks 0 <= 0)
ok 415 - bremove without sub is_dying()
# Usage: List::MoreUtils::XS::bremove(code, list) at t/xs/bremove.t line 115.
1..415
ok
t/xs/bsearch.t .................... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46
ok 47
ok 48
ok 49
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77
ok 78
ok 79
ok 80
ok 81
ok 82
ok 83
ok 84
ok 85
ok 86
ok 87
ok 88
ok 89
ok 90
ok 91
ok 92
ok 93
ok 94
ok 95
ok 96
ok 97
ok 98
ok 99
ok 100
ok 101
ok 102
ok 103
ok 104
ok 105
ok 106
ok 107
ok 108
ok 109
ok 110
ok 111
ok 112
ok 113
ok 114
ok 115
ok 116
ok 117
ok 118
ok 119
ok 120
ok 121
ok 122
ok 123
ok 124
ok 125
ok 126
ok 127
ok 128
ok 129
ok 130
ok 131
ok 132
ok 133
ok 134
ok 135
ok 136
ok 137
ok 138
ok 139
ok 140
ok 141
ok 142
ok 143
ok 144
ok 145
ok 146
ok 147
ok 148
ok 149
ok 150
ok 151
ok 152
ok 153
ok 154
ok 155
ok 156
ok 157
ok 158
ok 159
ok 160
ok 161
ok 162
ok 163
ok 164
ok 165
ok 166
ok 167
ok 168
ok 169
ok 170
ok 171
ok 172
ok 173
ok 174
ok 175
ok 176
ok 177
ok 178
ok 179
ok 180
ok 181
ok 182
ok 183
ok 184
ok 185
ok 186
ok 187
ok 188
ok 189
ok 190
ok 191
ok 192
ok 193
ok 194
ok 195
ok 196
ok 197
ok 198
ok 199
ok 200
ok 201
ok 202
ok 203
ok 204
ok 205
ok 206
ok 207
ok 208
ok 209
ok 210
ok 211
ok 212
ok 213
ok 214
ok 215
ok 216
ok 217
ok 218
ok 219
ok 220
ok 221
ok 222
ok 223
ok 224
ok 225
ok 226
ok 227
ok 228
ok 229
ok 230
ok 231
ok 232
ok 233
ok 234
ok 235
ok 236
ok 237
ok 238
ok 239
ok 240
ok 241
ok 242
ok 243
ok 244
ok 245
ok 246
ok 247
ok 248
ok 249
ok 250
ok 251
ok 252
ok 253
ok 254
ok 255
ok 256
ok 257
ok 258
ok 259
ok 260
ok 261
ok 262
ok 263
ok 264
ok 265
ok 266
ok 267
ok 268
ok 269
ok 270
ok 271
ok 272
ok 273
ok 274
ok 275
ok 276
ok 277
ok 278
ok 279
ok 280
ok 281
ok 282
ok 283
ok 284
ok 285
ok 286
ok 287
ok 288
ok 289
ok 290
ok 291
ok 292
ok 293
ok 294
ok 295
ok 296
ok 297
ok 298
ok 299
ok 300
ok 301
ok 302
ok 303
ok 304
ok 305
ok 306
ok 307
ok 308
ok 309
ok 310
ok 311
ok 312
ok 313
ok 314
ok 315
ok 316
ok 317
ok 318
ok 319
ok 320
ok 321
ok 322
ok 323
ok 324
ok 325
ok 326
ok 327
ok 328
ok 329
ok 330
ok 331
ok 332
ok 333
ok 334
ok 335
ok 336
ok 337
ok 338
ok 339
ok 340
ok 341
ok 342
ok 343
ok 344
ok 345
ok 346
ok 347
ok 348
ok 349
ok 350
ok 351
ok 352
ok 353
ok 354
ok 355
ok 356
ok 357
ok 358
ok 359
ok 360
ok 361
ok 362
ok 363
ok 364
ok 365
ok 366
ok 367
ok 368
ok 369
ok 370
ok 371
ok 372
ok 373
ok 374
ok 375
ok 376
ok 377
ok 378
ok 379
ok 380
ok 381
ok 382
ok 383
ok 384
ok 385
ok 386
ok 387
ok 388
ok 389
ok 390
ok 391
ok 392
ok 393
ok 394
ok 395
ok 396
ok 397
ok 398
ok 399
ok 400
ok 401
ok 402
ok 403
ok 404
ok 405
ok 406
ok 407
ok 408
ok 409
ok 410
ok 411
ok 412
ok 413
ok 414
ok 415
ok 416
ok 417
ok 418
ok 419
ok 420
ok 421
ok 422
ok 423
ok 424
ok 425
ok 426
ok 427
ok 428
ok 429
ok 430
ok 431
ok 432
ok 433
ok 434
ok 435
ok 436
ok 437
ok 438
ok 439
ok 440
ok 441
ok 442
ok 443
ok 444
ok 445
ok 446
ok 447
ok 448
ok 449
ok 450
ok 451
ok 452
ok 453
ok 454
ok 455
ok 456
ok 457
ok 458
ok 459
ok 460
ok 461
ok 462
ok 463
ok 464
ok 465
ok 466
ok 467
ok 468
ok 469
ok 470
ok 471
ok 472
ok 473
ok 474
ok 475
ok 476
ok 477
ok 478
ok 479
ok 480
ok 481
ok 482
ok 483
ok 484
ok 485
ok 486
ok 487
ok 488
ok 489
ok 490
ok 491
ok 492
ok 493
ok 494
ok 495
ok 496
ok 497
ok 498
ok 499
ok 500
ok 501
ok 502
ok 503
ok 504
ok 505
ok 506
ok 507
ok 508
ok 509
ok 510
ok 511
ok 512
ok 513
ok 514
ok 515
ok 516
ok 517
ok 518
ok 519
ok 520
ok 521
ok 522
ok 523
ok 524
ok 525
ok 526
ok 527
ok 528
ok 529
ok 530
ok 531
ok 532
ok 533
ok 534
ok 535
ok 536
ok 537
ok 538
ok 539
ok 540
ok 541
ok 542
ok 543
ok 544
ok 545
ok 546
ok 547
ok 548
ok 549
ok 550
ok 551
ok 552
ok 553
ok 554
ok 555
ok 556
ok 557
ok 558
ok 559
ok 560
ok 561
ok 562
ok 563
ok 564
ok 565
ok 566
ok 567
ok 568
ok 569
ok 570
ok 571
ok 572
ok 573
ok 574
ok 575
ok 576
ok 577
ok 578
ok 579
ok 580
ok 581
ok 582
ok 583
ok 584
ok 585
ok 586
ok 587
ok 588
ok 589
ok 590
ok 591
ok 592
ok 593
ok 594
ok 595
ok 596
ok 597
ok 598
ok 599
ok 600
ok 601
ok 602
ok 603
ok 604
ok 605
ok 606
ok 607
ok 608
ok 609
ok 610
ok 611
ok 612
ok 613
ok 614
ok 615
ok 616
ok 617
ok 618
ok 619
ok 620
ok 621
ok 622
ok 623
ok 624
ok 625
ok 626
ok 627
ok 628
ok 629
ok 630
ok 631
ok 632
ok 633
ok 634
ok 635
ok 636
ok 637
ok 638
ok 639
ok 640
ok 641
ok 642
ok 643
ok 644
ok 645
ok 646
ok 647
ok 648
ok 649
ok 650
ok 651
ok 652
ok 653
ok 654
ok 655
ok 656
ok 657
ok 658
ok 659
ok 660
ok 661
ok 662
ok 663
ok 664
ok 665
ok 666
ok 667
ok 668
ok 669
ok 670
ok 671
ok 672
ok 673
ok 674
ok 675
ok 676
ok 677
ok 678
ok 679
ok 680
ok 681
ok 682
ok 683
ok 684
ok 685
ok 686
ok 687
ok 688
ok 689
ok 690
ok 691
ok 692
ok 693
ok 694
ok 695
ok 696
ok 697
ok 698
ok 699
ok 700
ok 701
ok 702
ok 703
ok 704
ok 705
ok 706
ok 707
ok 708
ok 709
ok 710
ok 711
ok 712
ok 713
ok 714
ok 715
ok 716
ok 717
ok 718
ok 719
ok 720
ok 721
ok 722
ok 723
ok 724
ok 725
ok 726
ok 727
ok 728
ok 729
ok 730
ok 731
ok 732
ok 733
ok 734
ok 735
ok 736
ok 737
ok 738
ok 739
ok 740
ok 741
ok 742
ok 743
ok 744
ok 745
ok 746
ok 747
ok 748
ok 749
ok 750
ok 751
ok 752
ok 753
ok 754
ok 755
ok 756
ok 757
ok 758
ok 759
ok 760
ok 761
ok 762
ok 763
ok 764
ok 765
ok 766
ok 767
ok 768
ok 769
ok 770
ok 771
ok 772
ok 773
ok 774
ok 775
ok 776
ok 777
ok 778
ok 779
ok 780
ok 781
ok 782
ok 783
ok 784
ok 785
ok 786
ok 787
ok 788
ok 789
ok 790
ok 791
ok 792
ok 793
ok 794
ok 795
ok 796
ok 797
ok 798
ok 799
ok 800
ok 801
ok 802
ok 803
ok 804
ok 805
ok 806
ok 807
ok 808
ok 809
ok 810
ok 811
ok 812
ok 813
ok 814
ok 815
ok 816
ok 817
ok 818
ok 819
ok 820
ok 821
ok 822
ok 823
ok 824
ok 825
ok 826
ok 827
ok 828
ok 829
ok 830
ok 831
ok 832
ok 833
ok 834
ok 835
ok 836
ok 837
ok 838
ok 839
ok 840
ok 841
ok 842
ok 843
ok 844
ok 845
ok 846
ok 847
ok 848
ok 849
ok 850
ok 851
ok 852
ok 853
ok 854
ok 855
ok 856
ok 857
ok 858
ok 859
ok 860
ok 861
ok 862
ok 863
ok 864
ok 865
ok 866
ok 867
ok 868
ok 869
ok 870
ok 871
ok 872
ok 873
ok 874
ok 875
ok 876
ok 877
ok 878
ok 879
ok 880
ok 881
ok 882
ok 883
ok 884
ok 885
ok 886
ok 887
ok 888
ok 889
ok 890
ok 891
ok 892
ok 893
ok 894
ok 895
ok 896
ok 897
ok 898
ok 899
ok 900
ok 901
ok 902
ok 903
ok 904
ok 905
ok 906
ok 907
ok 908
ok 909
ok 910
ok 911
ok 912
ok 913
ok 914
ok 915
ok 916
ok 917
ok 918
ok 919
ok 920
ok 921
ok 922
ok 923
ok 924
ok 925
ok 926
ok 927
ok 928
ok 929
ok 930
ok 931
ok 932
ok 933
ok 934
ok 935
ok 936
ok 937
ok 938
ok 939
ok 940
ok 941
ok 942
ok 943
ok 944
ok 945
ok 946
ok 947
ok 948
ok 949
ok 950
ok 951
ok 952
ok 953
ok 954
ok 955
ok 956
ok 957
ok 958
ok 959
ok 960
ok 961
ok 962
ok 963
ok 964
ok 965
ok 966
ok 967
ok 968
ok 969
ok 970
ok 971
ok 972
ok 973
ok 974
ok 975
ok 976
ok 977
ok 978
ok 979
ok 980
ok 981
ok 982
ok 983
ok 984
ok 985
ok 986
ok 987
ok 988
ok 989
ok 990
ok 991
ok 992
ok 993
ok 994
ok 995
ok 996
ok 997
ok 998
ok 999
ok 1000
ok 1001
ok 1002
ok 1003
ok 1004
ok 1005
ok 1006
ok 1007
ok 1008
ok 1009
ok 1010
ok 1011
ok 1012
ok 1013
ok 1014
ok 1015
ok 1016
ok 1017
ok 1018
ok 1019
ok 1020
ok 1021
ok 1022
ok 1023
ok 1024
ok 1025
ok 1026
ok 1027
ok 1028
ok 1029
ok 1030
ok 1031
ok 1032
ok 1033
ok 1034
ok 1035
ok 1036
ok 1037
ok 1038
ok 1039
ok 1040
ok 1041
ok 1042
ok 1043
ok 1044
ok 1045
ok 1046
ok 1047
ok 1048
ok 1049
ok 1050
ok 1051
ok 1052
ok 1053
ok 1054
ok 1055
ok 1056
ok 1057
ok 1058
ok 1059
ok 1060
ok 1061
ok 1062
ok 1063
ok 1064
ok 1065
ok 1066
ok 1067
ok 1068
ok 1069
ok 1070
ok 1071
ok 1072
ok 1073
ok 1074
ok 1075
ok 1076
ok 1077
ok 1078
ok 1079
ok 1080
ok 1081
ok 1082
ok 1083
ok 1084
ok 1085
ok 1086
ok 1087
ok 1088
ok 1089
ok 1090
ok 1091
ok 1092
ok 1093
ok 1094
ok 1095
ok 1096
ok 1097
ok 1098
ok 1099
ok 1100
ok 1101
ok 1102
ok 1103
ok 1104
ok 1105
ok 1106
ok 1107
ok 1108
ok 1109
ok 1110
ok 1111
ok 1112
ok 1113
ok 1114
ok 1115
ok 1116
ok 1117
ok 1118
ok 1119
ok 1120
ok 1121
ok 1122
ok 1123
ok 1124
ok 1125
ok 1126
ok 1127
ok 1128
ok 1129
ok 1130
ok 1131
ok 1132
ok 1133
ok 1134
ok 1135
ok 1136
ok 1137
ok 1138
ok 1139
ok 1140
ok 1141
ok 1142
ok 1143
ok 1144
ok 1145
ok 1146
ok 1147
ok 1148
ok 1149
ok 1150
ok 1151
ok 1152
ok 1153
ok 1154
ok 1155
ok 1156
ok 1157
ok 1158
ok 1159
ok 1160
ok 1161
ok 1162
ok 1163
ok 1164
ok 1165
ok 1166
ok 1167
ok 1168
ok 1169
ok 1170
ok 1171
ok 1172
ok 1173
ok 1174
ok 1175
ok 1176
ok 1177
ok 1178
ok 1179
ok 1180
ok 1181
ok 1182
ok 1183
ok 1184
ok 1185
ok 1186
ok 1187
ok 1188
ok 1189
ok 1190
ok 1191
ok 1192
ok 1193
ok 1194
ok 1195
ok 1196
ok 1197
ok 1198
ok 1199
ok 1200
ok 1201
ok 1202
ok 1203
ok 1204
ok 1205
ok 1206
ok 1207
ok 1208
ok 1209
ok 1210
ok 1211
ok 1212
ok 1213
ok 1214
ok 1215
ok 1216
ok 1217
ok 1218
ok 1219
ok 1220
ok 1221
ok 1222
ok 1223
ok 1224
ok 1225
ok 1226
ok 1227
ok 1228
ok 1229
ok 1230
ok 1231
ok 1232
ok 1233
ok 1234
ok 1235
ok 1236
ok 1237
ok 1238
ok 1239
ok 1240
ok 1241
ok 1242
ok 1243
ok 1244
ok 1245
ok 1246
ok 1247
ok 1248
ok 1249
ok 1250
ok 1251
ok 1252
ok 1253
ok 1254
ok 1255
ok 1256
ok 1257
ok 1258
ok 1259
ok 1260
ok 1261
ok 1262
ok 1263
ok 1264
ok 1265
ok 1266
ok 1267
ok 1268
ok 1269
ok 1270
ok 1271
ok 1272
ok 1273
ok 1274
ok 1275
ok 1276
ok 1277
ok 1278
ok 1279
ok 1280
ok 1281
ok 1282
ok 1283
ok 1284
ok 1285
ok 1286
ok 1287
ok 1288
ok 1289
ok 1290
ok 1291
ok 1292
ok 1293
ok 1294
ok 1295
ok 1296
ok 1297
ok 1298
ok 1299
ok 1300
ok 1301
ok 1302
ok 1303
ok 1304
ok 1305
ok 1306
ok 1307
ok 1308
ok 1309
ok 1310
ok 1311
ok 1312
ok 1313
ok 1314
ok 1315
ok 1316
ok 1317
ok 1318
ok 1319
ok 1320
ok 1321
ok 1322
ok 1323
ok 1324
ok 1325
ok 1326
ok 1327
ok 1328
ok 1329
ok 1330
ok 1331
ok 1332
ok 1333
ok 1334
ok 1335
ok 1336
ok 1337
ok 1338
ok 1339
ok 1340
ok 1341
ok 1342
ok 1343
ok 1344
ok 1345
ok 1346
ok 1347
ok 1348
ok 1349
ok 1350
ok 1351
ok 1352
ok 1353
ok 1354
ok 1355
ok 1356
ok 1357
ok 1358
ok 1359
ok 1360
ok 1361
ok 1362
ok 1363
ok 1364
ok 1365
ok 1366
ok 1367
ok 1368
ok 1369
ok 1370
ok 1371
ok 1372
ok 1373
ok 1374
ok 1375
ok 1376
ok 1377
ok 1378
ok 1379
ok 1380
ok 1381
ok 1382
ok 1383
ok 1384
ok 1385
ok 1386
ok 1387
ok 1388
ok 1389
ok 1390
ok 1391
ok 1392
ok 1393
ok 1394
ok 1395
ok 1396
ok 1397
ok 1398
ok 1399
ok 1400
ok 1401
ok 1402
ok 1403
ok 1404
ok 1405
ok 1406
ok 1407
ok 1408
ok 1409
ok 1410
ok 1411
ok 1412
ok 1413
ok 1414
ok 1415
ok 1416
ok 1417
ok 1418
ok 1419
ok 1420
ok 1421
ok 1422
ok 1423
ok 1424
ok 1425
ok 1426
ok 1427
ok 1428
ok 1429
ok 1430
ok 1431
ok 1432
ok 1433
ok 1434
ok 1435
ok 1436
ok 1437
ok 1438
ok 1439
ok 1440
ok 1441
ok 1442
ok 1443
ok 1444
ok 1445
ok 1446
ok 1447
ok 1448
ok 1449
ok 1450
ok 1451
ok 1452
ok 1453
ok 1454
ok 1455
ok 1456
ok 1457
ok 1458
ok 1459
ok 1460
ok 1461
ok 1462
ok 1463
ok 1464
ok 1465
ok 1466
ok 1467
ok 1468
ok 1469
ok 1470
ok 1471
ok 1472
ok 1473
ok 1474
ok 1475
ok 1476
ok 1477
ok 1478
ok 1479
ok 1480
ok 1481
ok 1482
ok 1483
ok 1484
ok 1485
ok 1486
ok 1487
ok 1488
ok 1489
ok 1490
ok 1491
ok 1492
ok 1493
ok 1494
ok 1495
ok 1496
ok 1497
ok 1498
ok 1499
ok 1500
ok 1501
ok 1502
ok 1503
ok 1504
ok 1505
ok 1506
ok 1507
ok 1508
ok 1509
ok 1510
ok 1511
ok 1512
ok 1513
ok 1514
ok 1515
ok 1516
ok 1517
ok 1518
ok 1519
ok 1520
ok 1521
ok 1522
ok 1523
ok 1524
ok 1525
ok 1526
ok 1527
ok 1528
ok 1529
ok 1530
ok 1531
ok 1532
ok 1533
ok 1534
ok 1535
ok 1536
ok 1537
ok 1538
ok 1539
ok 1540
ok 1541
ok 1542
ok 1543
ok 1544
ok 1545
ok 1546
ok 1547
ok 1548
ok 1549
ok 1550
ok 1551
ok 1552
ok 1553
ok 1554
ok 1555
ok 1556
ok 1557
ok 1558
ok 1559
ok 1560
ok 1561
ok 1562
ok 1563
ok 1564
ok 1565
ok 1566
ok 1567
ok 1568
ok 1569
ok 1570
ok 1571
ok 1572
ok 1573
ok 1574
ok 1575
ok 1576
ok 1577
ok 1578
ok 1579
ok 1580
ok 1581
ok 1582
ok 1583
ok 1584
ok 1585
ok 1586
ok 1587
ok 1588
ok 1589
ok 1590
ok 1591
ok 1592
ok 1593
ok 1594
ok 1595
ok 1596
ok 1597
ok 1598
ok 1599
ok 1600
ok 1601
ok 1602
ok 1603
ok 1604
ok 1605
ok 1606
ok 1607
ok 1608
ok 1609
ok 1610
ok 1611
ok 1612
ok 1613
ok 1614
ok 1615
ok 1616
ok 1617
ok 1618
ok 1619
ok 1620
ok 1621
ok 1622
ok 1623
ok 1624
ok 1625
ok 1626
ok 1627
ok 1628
ok 1629
ok 1630
ok 1631
ok 1632
ok 1633
ok 1634
ok 1635
ok 1636
ok 1637
ok 1638
ok 1639
ok 1640
ok 1641
ok 1642
ok 1643
ok 1644
ok 1645
ok 1646
ok 1647
ok 1648
ok 1649
ok 1650
ok 1651
ok 1652
ok 1653
ok 1654
ok 1655
ok 1656
ok 1657
ok 1658
ok 1659
ok 1660
ok 1661
ok 1662
ok 1663
ok 1664
ok 1665
ok 1666
ok 1667
ok 1668
ok 1669
ok 1670
ok 1671
ok 1672
ok 1673
ok 1674
ok 1675
ok 1676
ok 1677
ok 1678
ok 1679
ok 1680
ok 1681
ok 1682
ok 1683
ok 1684
ok 1685
ok 1686
ok 1687
ok 1688
ok 1689
ok 1690
ok 1691
ok 1692
ok 1693
ok 1694
ok 1695
ok 1696
ok 1697
ok 1698
ok 1699
ok 1700
ok 1701
ok 1702
ok 1703
ok 1704
ok 1705
ok 1706
ok 1707
ok 1708
ok 1709
ok 1710
ok 1711
ok 1712
ok 1713
ok 1714
ok 1715
ok 1716
ok 1717
ok 1718
ok 1719
ok 1720
ok 1721
ok 1722
ok 1723
ok 1724
ok 1725
ok 1726
ok 1727
ok 1728
ok 1729
ok 1730
ok 1731
ok 1732
ok 1733
ok 1734
ok 1735
ok 1736
ok 1737
ok 1738
ok 1739
ok 1740
ok 1741
ok 1742
ok 1743
ok 1744
ok 1745
ok 1746
ok 1747
ok 1748
ok 1749
ok 1750
ok 1751
ok 1752
ok 1753
ok 1754
ok 1755
ok 1756
ok 1757
ok 1758
ok 1759
ok 1760
ok 1761
ok 1762
ok 1763
ok 1764
ok 1765
ok 1766
ok 1767
ok 1768
ok 1769
ok 1770
ok 1771
ok 1772
ok 1773
ok 1774
ok 1775
ok 1776
ok 1777
ok 1778
ok 1779
ok 1780
ok 1781
ok 1782
ok 1783
ok 1784
ok 1785
ok 1786
ok 1787
ok 1788
ok 1789
ok 1790
ok 1791
ok 1792
ok 1793
ok 1794
ok 1795
ok 1796
ok 1797
ok 1798
ok 1799
ok 1800
ok 1801
ok 1802
ok 1803
ok 1804
ok 1805
ok 1806
ok 1807
ok 1808
ok 1809
ok 1810
ok 1811
ok 1812
ok 1813
ok 1814
ok 1815
ok 1816
ok 1817
ok 1818
ok 1819
ok 1820
ok 1821
ok 1822
ok 1823
ok 1824
ok 1825
ok 1826
ok 1827
ok 1828
ok 1829
ok 1830
ok 1831
ok 1832
ok 1833
ok 1834
ok 1835
ok 1836
ok 1837
ok 1838
ok 1839
ok 1840
ok 1841
ok 1842
ok 1843
ok 1844
ok 1845
ok 1846
ok 1847
ok 1848
ok 1849
ok 1850
ok 1851
ok 1852
ok 1853
ok 1854
ok 1855
ok 1856
ok 1857
ok 1858
ok 1859
ok 1860
ok 1861
ok 1862
ok 1863
ok 1864
ok 1865
ok 1866
ok 1867
ok 1868
ok 1869
ok 1870
ok 1871
ok 1872
ok 1873
ok 1874
ok 1875
ok 1876
ok 1877
ok 1878
ok 1879
ok 1880
ok 1881
ok 1882
ok 1883
ok 1884
ok 1885
ok 1886
ok 1887
ok 1888
ok 1889
ok 1890
ok 1891
ok 1892
ok 1893
ok 1894
ok 1895
ok 1896
ok 1897
ok 1898
ok 1899
ok 1900
ok 1901
ok 1902
ok 1903
ok 1904
ok 1905
ok 1906
ok 1907
ok 1908
ok 1909
ok 1910
ok 1911
ok 1912
ok 1913
ok 1914
ok 1915
ok 1916
ok 1917
ok 1918
ok 1919
ok 1920
ok 1921
ok 1922
ok 1923
ok 1924
ok 1925
ok 1926
ok 1927
ok 1928
ok 1929
ok 1930
ok 1931
ok 1932
ok 1933
ok 1934
ok 1935
ok 1936
ok 1937
ok 1938
ok 1939
ok 1940
ok 1941
ok 1942
ok 1943
ok 1944
ok 1945
ok 1946
ok 1947
ok 1948
ok 1949
ok 1950
ok 1951
ok 1952
ok 1953
ok 1954
ok 1955
ok 1956
ok 1957
ok 1958
ok 1959
ok 1960
ok 1961
ok 1962
ok 1963
ok 1964
ok 1965
ok 1966
ok 1967
ok 1968
ok 1969
ok 1970
ok 1971
ok 1972
ok 1973
ok 1974
ok 1975
ok 1976
ok 1977
ok 1978
ok 1979
ok 1980
ok 1981
ok 1982
ok 1983
ok 1984
ok 1985
ok 1986
ok 1987
ok 1988
ok 1989
ok 1990
ok 1991
ok 1992
ok 1993
ok 1994
ok 1995
ok 1996
ok 1997
ok 1998
ok 1999
ok 2000
ok 2001
ok 2002
ok 2003
ok 2004
ok 2005
ok 2006
ok 2007
ok 2008
ok 2009
ok 2010
ok 2011
ok 2012
ok 2013
ok 2014
ok 2015
ok 2016
ok 2017
ok 2018
ok 2019
ok 2020
ok 2021
ok 2022
ok 2023 - No memory leaks in bsearch (leaks 0 <= 0)
ok 2024 - No memory leaks in bsearch with stack-growing (leaks 0 <= 0)
ok 2025 - No memory leaks in bsearch with stack-growing and exception (leaks 0 <= 0)
ok 2026 - bsearch without sub is_dying()
# Usage: List::MoreUtils::XS::bsearch(code, ...) at t/xs/bsearch.t line 53.
1..2026
ok
t/xs/bsearchidx.t ................. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46
ok 47
ok 48
ok 49
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77
ok 78
ok 79
ok 80
ok 81
ok 82
ok 83
ok 84
ok 85
ok 86
ok 87
ok 88
ok 89
ok 90
ok 91
ok 92
ok 93
ok 94
ok 95
ok 96
ok 97
ok 98
ok 99
ok 100
ok 101
ok 102
ok 103
ok 104
ok 105
ok 106
ok 107
ok 108
ok 109
ok 110
ok 111
ok 112
ok 113
ok 114
ok 115
ok 116
ok 117
ok 118
ok 119
ok 120
ok 121
ok 122
ok 123
ok 124
ok 125
ok 126
ok 127
ok 128
ok 129
ok 130
ok 131
ok 132
ok 133
ok 134
ok 135
ok 136
ok 137
ok 138
ok 139
ok 140
ok 141
ok 142
ok 143
ok 144
ok 145
ok 146
ok 147
ok 148
ok 149
ok 150
ok 151
ok 152
ok 153
ok 154
ok 155
ok 156
ok 157
ok 158
ok 159
ok 160
ok 161
ok 162
ok 163
ok 164
ok 165
ok 166
ok 167
ok 168
ok 169
ok 170
ok 171
ok 172
ok 173
ok 174
ok 175
ok 176
ok 177
ok 178
ok 179
ok 180
ok 181
ok 182
ok 183
ok 184
ok 185
ok 186
ok 187
ok 188
ok 189
ok 190
ok 191
ok 192
ok 193
ok 194
ok 195
ok 196
ok 197
ok 198
ok 199
ok 200
ok 201
ok 202
ok 203
ok 204
ok 205
ok 206
ok 207
ok 208
ok 209
ok 210
ok 211
ok 212
ok 213
ok 214
ok 215
ok 216
ok 217
ok 218
ok 219
ok 220
ok 221
ok 222
ok 223
ok 224
ok 225
ok 226
ok 227
ok 228
ok 229
ok 230
ok 231
ok 232
ok 233
ok 234
ok 235
ok 236
ok 237
ok 238
ok 239
ok 240
ok 241
ok 242
ok 243
ok 244
ok 245
ok 246
ok 247
ok 248
ok 249
ok 250
ok 251
ok 252
ok 253
ok 254
ok 255
ok 256
ok 257
ok 258
ok 259
ok 260
ok 261
ok 262
ok 263
ok 264
ok 265
ok 266
ok 267
ok 268
ok 269
ok 270
ok 271
ok 272
ok 273
ok 274
ok 275
ok 276
ok 277
ok 278
ok 279
ok 280
ok 281
ok 282
ok 283
ok 284
ok 285
ok 286
ok 287
ok 288
ok 289
ok 290
ok 291
ok 292
ok 293
ok 294
ok 295
ok 296
ok 297
ok 298
ok 299
ok 300
ok 301
ok 302
ok 303
ok 304
ok 305
ok 306
ok 307
ok 308
ok 309
ok 310
ok 311
ok 312
ok 313
ok 314
ok 315
ok 316
ok 317
ok 318
ok 319
ok 320
ok 321
ok 322
ok 323
ok 324
ok 325
ok 326
ok 327
ok 328
ok 329
ok 330
ok 331
ok 332
ok 333
ok 334
ok 335
ok 336
ok 337
ok 338
ok 339
ok 340
ok 341
ok 342
ok 343
ok 344
ok 345
ok 346
ok 347
ok 348
ok 349
ok 350
ok 351
ok 352
ok 353
ok 354
ok 355
ok 356
ok 357
ok 358
ok 359
ok 360
ok 361
ok 362
ok 363
ok 364
ok 365
ok 366
ok 367
ok 368
ok 369
ok 370
ok 371
ok 372
ok 373
ok 374
ok 375
ok 376
ok 377
ok 378
ok 379
ok 380
ok 381
ok 382
ok 383
ok 384
ok 385
ok 386
ok 387
ok 388
ok 389
ok 390
ok 391
ok 392
ok 393
ok 394
ok 395
ok 396
ok 397
ok 398
ok 399
ok 400
ok 401
ok 402
ok 403
ok 404
ok 405
ok 406
ok 407
ok 408
ok 409
ok 410
ok 411
ok 412
ok 413
ok 414
ok 415
ok 416
ok 417
ok 418
ok 419
ok 420
ok 421
ok 422
ok 423
ok 424
ok 425
ok 426
ok 427
ok 428
ok 429
ok 430
ok 431
ok 432
ok 433
ok 434
ok 435
ok 436
ok 437
ok 438
ok 439
ok 440
ok 441
ok 442
ok 443
ok 444
ok 445
ok 446
ok 447
ok 448
ok 449
ok 450
ok 451
ok 452
ok 453
ok 454
ok 455
ok 456
ok 457
ok 458
ok 459
ok 460
ok 461
ok 462
ok 463
ok 464
ok 465
ok 466
ok 467
ok 468
ok 469
ok 470
ok 471
ok 472
ok 473
ok 474
ok 475
ok 476
ok 477
ok 478
ok 479
ok 480
ok 481
ok 482
ok 483
ok 484
ok 485
ok 486
ok 487
ok 488
ok 489
ok 490
ok 491
ok 492
ok 493
ok 494
ok 495
ok 496
ok 497
ok 498
ok 499
ok 500
ok 501
ok 502
ok 503
ok 504
ok 505
ok 506
ok 507
ok 508
ok 509
ok 510
ok 511
ok 512
ok 513
ok 514
ok 515
ok 516
ok 517
ok 518
ok 519
ok 520
ok 521
ok 522
ok 523
ok 524
ok 525
ok 526
ok 527
ok 528
ok 529
ok 530
ok 531
ok 532
ok 533
ok 534
ok 535
ok 536
ok 537
ok 538
ok 539
ok 540
ok 541
ok 542
ok 543
ok 544
ok 545
ok 546
ok 547
ok 548
ok 549
ok 550
ok 551
ok 552
ok 553
ok 554
ok 555
ok 556
ok 557
ok 558
ok 559
ok 560
ok 561
ok 562
ok 563
ok 564
ok 565
ok 566
ok 567
ok 568
ok 569
ok 570
ok 571
ok 572
ok 573
ok 574
ok 575
ok 576
ok 577
ok 578
ok 579
ok 580
ok 581
ok 582
ok 583
ok 584
ok 585
ok 586
ok 587
ok 588
ok 589
ok 590
ok 591
ok 592
ok 593
ok 594
ok 595
ok 596
ok 597
ok 598
ok 599
ok 600
ok 601
ok 602
ok 603
ok 604
ok 605
ok 606
ok 607
ok 608
ok 609
ok 610
ok 611
ok 612
ok 613
ok 614
ok 615
ok 616
ok 617
ok 618
ok 619
ok 620
ok 621
ok 622
ok 623
ok 624
ok 625
ok 626
ok 627
ok 628
ok 629
ok 630
ok 631
ok 632
ok 633
ok 634
ok 635
ok 636
ok 637
ok 638
ok 639
ok 640
ok 641
ok 642
ok 643
ok 644
ok 645
ok 646
ok 647
ok 648
ok 649
ok 650
ok 651
ok 652
ok 653
ok 654
ok 655
ok 656
ok 657
ok 658
ok 659
ok 660
ok 661
ok 662
ok 663
ok 664
ok 665
ok 666
ok 667
ok 668
ok 669
ok 670
ok 671
ok 672
ok 673
ok 674
ok 675
ok 676
ok 677
ok 678
ok 679
ok 680
ok 681
ok 682
ok 683
ok 684
ok 685
ok 686
ok 687
ok 688
ok 689
ok 690
ok 691
ok 692
ok 693
ok 694
ok 695
ok 696
ok 697
ok 698
ok 699
ok 700
ok 701
ok 702
ok 703
ok 704
ok 705
ok 706
ok 707
ok 708
ok 709
ok 710
ok 711
ok 712
ok 713
ok 714
ok 715
ok 716
ok 717
ok 718
ok 719
ok 720
ok 721
ok 722
ok 723
ok 724
ok 725
ok 726
ok 727
ok 728
ok 729
ok 730
ok 731
ok 732
ok 733
ok 734
ok 735
ok 736
ok 737
ok 738
ok 739
ok 740
ok 741
ok 742
ok 743
ok 744
ok 745
ok 746
ok 747
ok 748
ok 749
ok 750
ok 751
ok 752
ok 753
ok 754
ok 755
ok 756
ok 757
ok 758
ok 759
ok 760
ok 761
ok 762
ok 763
ok 764
ok 765
ok 766
ok 767
ok 768
ok 769
ok 770
ok 771
ok 772
ok 773
ok 774
ok 775
ok 776
ok 777
ok 778
ok 779
ok 780
ok 781
ok 782
ok 783
ok 784
ok 785
ok 786
ok 787
ok 788
ok 789
ok 790
ok 791
ok 792
ok 793
ok 794
ok 795
ok 796
ok 797
ok 798
ok 799
ok 800
ok 801
ok 802
ok 803
ok 804
ok 805
ok 806
ok 807
ok 808
ok 809
ok 810
ok 811
ok 812
ok 813
ok 814
ok 815
ok 816
ok 817
ok 818
ok 819
ok 820
ok 821
ok 822
ok 823
ok 824
ok 825
ok 826
ok 827
ok 828
ok 829
ok 830
ok 831
ok 832
ok 833
ok 834
ok 835
ok 836
ok 837
ok 838
ok 839
ok 840
ok 841
ok 842
ok 843
ok 844
ok 845
ok 846
ok 847
ok 848
ok 849
ok 850
ok 851
ok 852
ok 853
ok 854
ok 855
ok 856
ok 857
ok 858
ok 859
ok 860
ok 861
ok 862
ok 863
ok 864
ok 865
ok 866
ok 867
ok 868
ok 869
ok 870
ok 871
ok 872
ok 873
ok 874
ok 875
ok 876
ok 877
ok 878
ok 879
ok 880
ok 881
ok 882
ok 883
ok 884
ok 885
ok 886
ok 887
ok 888
ok 889
ok 890
ok 891
ok 892
ok 893
ok 894
ok 895
ok 896
ok 897
ok 898
ok 899
ok 900
ok 901
ok 902
ok 903
ok 904
ok 905
ok 906
ok 907
ok 908
ok 909
ok 910
ok 911
ok 912
ok 913
ok 914
ok 915
ok 916
ok 917
ok 918
ok 919
ok 920
ok 921
ok 922
ok 923
ok 924
ok 925
ok 926
ok 927
ok 928
ok 929
ok 930
ok 931
ok 932
ok 933
ok 934
ok 935
ok 936
ok 937
ok 938
ok 939
ok 940
ok 941
ok 942
ok 943
ok 944
ok 945
ok 946
ok 947
ok 948
ok 949
ok 950
ok 951
ok 952
ok 953
ok 954
ok 955
ok 956
ok 957
ok 958
ok 959
ok 960
ok 961
ok 962
ok 963
ok 964
ok 965
ok 966
ok 967
ok 968
ok 969
ok 970
ok 971
ok 972
ok 973
ok 974
ok 975
ok 976
ok 977
ok 978
ok 979
ok 980
ok 981
ok 982
ok 983
ok 984
ok 985
ok 986
ok 987
ok 988
ok 989
ok 990
ok 991
ok 992
ok 993
ok 994
ok 995
ok 996
ok 997
ok 998
ok 999
ok 1000
ok 1001
ok 1002
ok 1003
ok 1004
ok 1005
ok 1006
ok 1007
ok 1008
ok 1009
ok 1010
ok 1011
ok 1012
ok 1013
ok 1014
ok 1015
ok 1016
ok 1017
ok 1018
ok 1019
ok 1020
ok 1021
ok 1022
ok 1023 - No memory leaks in bsearch (leaks 0 <= 0)
ok 1024 - No memory leaks in bsearch with stack-growing (leaks 0 <= 0)
ok 1025 - No memory leaks in bsearch with stack-growing and exception (leaks 0 <= 0)
ok 1026 - bsearchidx without sub is_dying()
# Usage: List::MoreUtils::XS::bsearchidx(code, ...) at t/xs/bsearchidx.t line 48.
1..1026
ok
t/xs/duplicates.t ................. 
ok 1 - duplicates:G_ARRAY leaves numbers untouched
ok 2 - duplicates of numbers
ok 3 - duplicates:G_SCALAR leaves numbers untouched
ok 4 - scalar result of duplicates of numbers
ok 5 - duplicates:G_ARRAY leaves numbers untouched
ok 6 - duplicates of numbers
ok 7 - duplicates:G_SCALAR leaves numbers untouched
ok 8 - scalar result of duplicates of numbers
ok 9 - duplicates of numbers/strings mixture
ok 10 - frozen duplicates of numbers/strings mixture
ok 11 - duplicates:G_ARRAY leaves mixture untouched
ok 12
ok 13 - duplicates:G_SCALAR leaves mixture untouched
ok 14 - scalar result of duplicates of numbers/strings mixture
ok 15 - duplicates of tied array of numbers/strings mixture
ok 16 - duplicates:G_ARRAY leaves mixture untouched
ok 17 - duplicates:G_SCALAR leaves mixture untouched
ok 18 - scalar result of duplicates of tied array of numbers/strings mixture
ok 19 - two undef's are supported correctly by duplicates
ok 20 - one undef is ignored correctly by duplicates
ok 21 - scalar one undef is ignored correctly by duplicates
ok 22 - No memory leaks in duplicates (leaks 0 <= 0)
ok 23 - No memory leaks in duplicates with exception in overloading stringify (leaks 0 <= 0)
1..23
ok
t/xs/each_array.t ................. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16 - No memory leaks in each_array (leaks 0 <= 0)
ok 17 - No memory leaks in each_arrayref (leaks 0 <= 0)
ok 18 - each_array without sub is_dying()
# Usage: List::MoreUtils::XS::each_array(\@;\@\@...) at t/xs/each_array.t line 133.
ok 19 - each_arrayref without sub is_dying()
# Usage: List::MoreUtils::XS::each_arrayref(\@;\@\@...) at t/xs/each_array.t line 134.
1..19
ok
t/xs/equal_range.t ................ 
ok 1 - equal range 0
ok 2 - equal range 1
ok 3 - equal range 2
ok 4 - equal range 4
ok 5 - equal range 19
ok 6 - No memory leaks in equal_range (leaks 0 <= 0)
ok 7 - No memory leaks in equal_range with stack-growing (leaks 0 <= 0)
ok 8 - No memory leaks in equal_range with stack-growing and exception (leaks 0 <= 0)
ok 9 - equal_range without sub is_dying()
# Usage: List::MoreUtils::XS::equal_range(code, ...) at t/xs/equal_range.t line 44.
1..9
ok
t/xs/false.t ...................... 
ok 1 - false(null) returns undef
ok 2 - false(null) returns undef
ok 3
ok 4
ok 5
ok 6 - No memory leaks in false (leaks 0 <= 0)
ok 7 - false without sub is_dying()
# Usage: List::MoreUtils::XS::false(code, ...) at t/xs/false.t line 32.
1..7
ok
t/xs/firstidx.t ................... 
ok 1 - firstidx
ok 2 - invalid firstidx
ok 3 - real firstidx
ok 4 - empty firstidx
ok 5
ok 6
ok 7
ok 8
ok 9 - No memory leaks in firstidx (leaks 0 <= 0)
ok 10 - firstidx without sub is_dying()
# Usage: List::MoreUtils::XS::firstidx(code, ...) at t/xs/firstidx.t line 39.
1..10
ok
t/xs/firstres.t ................... 
ok 1
ok 2
ok 3
ok 4
ok 5 - No memory leaks in firstres (leaks 0 <= 0)
ok 6 - firstres without sub is_dying()
# Usage: List::MoreUtils::XS::firstres(code, ...) at t/xs/firstres.t line 34.
1..6
ok
t/xs/firstval.t ................... 
ok 1
ok 2
ok 3 - is_undef()
ok 4
ok 5
ok 6 - No memory leaks in firstval (leaks 0 <= 0)
ok 7 - firstval without sub is_dying()
# Usage: List::MoreUtils::XS::firstval(code, ...) at t/xs/firstval.t line 35.
1..7
ok
t/xs/frequency.t .................. 
ok 1 - frequency:G_ARRAY leaves numbers untouched
ok 2 - frequency of numbers
ok 3 - frequency:G:SCALAR leaves numbers untouched
ok 4 - scalar result of frequency of numbers
ok 5 - frequency:G_ARRAY leaves strings untouched
ok 6 - frequency of strings
ok 7 - frequency:G_SCALAR leaves strings untouched
ok 8 - scalar result of frequency of strings
ok 9 - frequency:G_ARRAY leaves number/strings mixture untouched
ok 10 - frequency of number/strings mixture
ok 11 - frequency:G_SCALAR leaves number/strings mixture untouched
ok 12 - scalar result of frequency of number/strings mixture
ok 13 - frequency:G_ARRAY leaves tied array of number/strings mixture untouched
ok 14 - frequency of tied array of number/strings mixture
ok 15 - frequency:G_SCALAR leaves tied array of number/strings mixture untouched
ok 16 - scalar result of frequency of tied array of number/strings mixture
ok 17 - stuff around undef's is supported correctly by frequency
ok 18 - two undef's are supported correctly by frequency
ok 19 - No memory leaks in frequency (leaks 0 <= 0)
ok 20 - No memory leaks in scalar frequency (leaks 0 <= 0)
ok 21 - No memory leaks in frequency with exception in overloading stringify (leaks 0 <= 0)
1..21
ok
t/xs/indexes.t .................... 
ok 1 - indexes > 5 ...
ok 2 - Got the null list
ok 3 - No memory leaks in indexes (leaks 0 <= 0)
ok 4 - indexes/leak: some
ok 5 - indexes/leak: none
ok 6 - indexes/leak: odd
ok 7 - indexes/leak: even
ok 8 - indexes behaves like grep on modified $_
ok 9 - indexes/modify
ok 10 - indexes_on_set not_dying()
ok 11 - indexes/modify set
ok 12 - No memory leaks in indexes (leaks 0 <= 0)
ok 13 - No memory leaks in indexes interrupted by exception (leaks 0 <= 0)
ok 14 - indexes/leak: some
ok 15 - indexes/leak: none
ok 16 - indexes/leak: odd
ok 17 - indexes/leak: even
ok 18 - weakened away
ok 19 - indexes without sub is_dying()
# Usage: List::MoreUtils::XS::indexes(code, ...) at t/xs/indexes.t line 73.
1..19
ok
t/xs/insert_after.t ............... 
ok 1
ok 2
ok 3
ok 4
ok 5 - No memory leaks in insert_after (leaks 0 <= 0)
ok 6 - No memory leaks in insert_after with exception (leaks 0 <= 0)
ok 7 - insert_after without sub is_dying()
# Usage: List::MoreUtils::XS::insert_after(code, val, \@area_of_operation) at t/xs/insert_after.t line 40.
ok 8 - insert_after without sub and array is_dying()
# Usage: List::MoreUtils::XS::insert_after(code, val, \@area_of_operation) at t/xs/insert_after.t line 41.
ok 9 - insert_after without array is_dying()
# Usage: List::MoreUtils::XS::insert_after(code, val, \@area_of_operation) at t/xs/insert_after.t line 44.
1..9
ok
t/xs/insert_after_string.t ........ 
ok 1
ok 2
ok 3
ok 4 - No memory leaks in insert_after_string (leaks 0 <= 0)
ok 5 - No memory leaks in insert_after_string with exception (leaks 0 <= 0)
ok 6 - insert_after_string without array is_dying()
# Usage: List::MoreUtils::XS::insert_after_string(string, val, \@area_of_operation) at t/xs/insert_after_string.t line 39.
1..6
ok
t/xs/lastidx.t .................... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9 - No memory leaks in lastidx (leaks 0 <= 0)
ok 10 - lastidx without sub is_dying()
# Usage: List::MoreUtils::XS::lastidx(code, ...) at t/xs/lastidx.t line 36.
1..10
ok
t/xs/lastres.t .................... 
ok 1
ok 2
ok 3
ok 4
ok 5 - No memory leaks in lastres (leaks 0 <= 0)
ok 6 - lastres without sub is_dying()
# Usage: List::MoreUtils::XS::lastres(code, ...) at t/xs/lastres.t line 34.
1..6
ok
t/xs/lastval.t .................... 
ok 1
ok 2
ok 3 - is_undef()
ok 4
ok 5
ok 6 - No memory leaks in lastval (leaks 0 <= 0)
ok 7 - lastval without sub is_dying()
# Usage: List::MoreUtils::XS::lastval(code, ...) at t/xs/lastval.t line 35.
1..7
ok
t/xs/listcmp.t .................... 
ok 1 - Sequence vs. Prime vs. Fibonacci sorted out correctly
ok 2 - Sequence vs. Prime filled with undef sorted out correctly
ok 3 - No memory leaks in listcmp (leaks 0 <= 0)
ok 4 - No memory leaks in listcmp with exception in overloading stringify at begin (leaks 0 <= 0)
ok 5 - No memory leaks in listcmp with exception in overloading stringify at end (leaks 0 <= 0)
1..5
ok
t/xs/lower_bound.t ................ 
ok 1 - lower bound 0
ok 2 - lower bound 1
ok 3 - lower bound 2
ok 4 - lower bound 4
ok 5 - lower bound 19
ok 6 - placed 0
ok 7 - found 1
ok 8 - placed 1
ok 9 - found 2
ok 10 - placed 2
ok 11 - found 3
ok 12 - placed 3
ok 13 - found 4
ok 14 - placed 4
ok 15 - found 5
ok 16 - placed 5
ok 17 - found 6
ok 18 - placed 6
ok 19 - found 7
ok 20 - placed 7
ok 21 - found 8
ok 22 - placed 8
ok 23 - found 9
ok 24 - placed 9
ok 25 - found 10
ok 26 - placed 10
ok 27 - found 11
ok 28 - placed 11
ok 29 - found 12
ok 30 - placed 12
ok 31 - found 13
ok 32 - placed 13
ok 33 - found 14
ok 34 - placed 14
ok 35 - found 15
ok 36 - placed 15
ok 37 - found 16
ok 38 - placed 16
ok 39 - found 17
ok 40 - placed 17
ok 41 - found 18
ok 42 - placed 18
ok 43 - found 19
ok 44 - placed 19
ok 45 - found 20
ok 46 - placed 20
ok 47 - found 21
ok 48 - placed 21
ok 49 - found 22
ok 50 - placed 22
ok 51 - found 23
ok 52 - placed 23
ok 53 - found 24
ok 54 - placed 24
ok 55 - found 25
ok 56 - placed 25
ok 57 - found 26
ok 58 - placed 26
ok 59 - found 27
ok 60 - placed 27
ok 61 - found 28
ok 62 - placed 28
ok 63 - found 29
ok 64 - placed 29
ok 65 - found 30
ok 66 - placed 30
ok 67 - found 31
ok 68 - placed 31
ok 69 - found 32
ok 70 - placed 32
ok 71 - found 33
ok 72 - placed 33
ok 73 - found 34
ok 74 - placed 34
ok 75 - found 35
ok 76 - placed 35
ok 77 - found 36
ok 78 - placed 36
ok 79 - found 37
ok 80 - placed 37
ok 81 - found 38
ok 82 - placed 38
ok 83 - found 39
ok 84 - placed 39
ok 85 - found 40
ok 86 - placed 40
ok 87 - found 41
ok 88 - placed 41
ok 89 - found 42
ok 90 - placed 42
ok 91 - found 43
ok 92 - placed 43
ok 93 - found 44
ok 94 - placed 44
ok 95 - found 45
ok 96 - placed 45
ok 97 - found 46
ok 98 - placed 46
ok 99 - found 47
ok 100 - placed 47
ok 101 - found 48
ok 102 - placed 48
ok 103 - found 49
ok 104 - placed 49
ok 105 - found 50
ok 106 - placed 50
ok 107 - found 51
ok 108 - placed 51
ok 109 - found 52
ok 110 - placed 52
ok 111 - found 53
ok 112 - placed 53
ok 113 - found 54
ok 114 - placed 54
ok 115 - found 55
ok 116 - placed 55
ok 117 - found 56
ok 118 - placed 56
ok 119 - found 57
ok 120 - placed 57
ok 121 - found 58
ok 122 - placed 58
ok 123 - found 59
ok 124 - placed 59
ok 125 - found 60
ok 126 - placed 60
ok 127 - found 61
ok 128 - placed 61
ok 129 - found 62
ok 130 - placed 62
ok 131 - found 63
ok 132 - placed 63
ok 133 - found 64
ok 134 - placed 64
ok 135 - found 65
ok 136 - placed 65
ok 137 - found 66
ok 138 - placed 66
ok 139 - found 67
ok 140 - placed 67
ok 141 - found 68
ok 142 - placed 68
ok 143 - found 69
ok 144 - placed 69
ok 145 - found 70
ok 146 - placed 70
ok 147 - found 71
ok 148 - placed 71
ok 149 - found 72
ok 150 - placed 72
ok 151 - found 73
ok 152 - placed 73
ok 153 - found 74
ok 154 - placed 74
ok 155 - found 75
ok 156 - placed 75
ok 157 - found 76
ok 158 - placed 76
ok 159 - found 77
ok 160 - placed 77
ok 161 - found 78
ok 162 - placed 78
ok 163 - found 79
ok 164 - placed 79
ok 165 - found 80
ok 166 - placed 80
ok 167 - found 81
ok 168 - placed 81
ok 169 - found 82
ok 170 - placed 82
ok 171 - found 83
ok 172 - placed 83
ok 173 - found 84
ok 174 - placed 84
ok 175 - found 85
ok 176 - placed 85
ok 177 - found 86
ok 178 - placed 86
ok 179 - found 87
ok 180 - placed 87
ok 181 - found 88
ok 182 - placed 88
ok 183 - found 89
ok 184 - placed 89
ok 185 - found 90
ok 186 - placed 90
ok 187 - found 91
ok 188 - placed 91
ok 189 - found 92
ok 190 - placed 92
ok 191 - found 93
ok 192 - placed 93
ok 193 - found 94
ok 194 - placed 94
ok 195 - found 95
ok 196 - placed 95
ok 197 - found 96
ok 198 - placed 96
ok 199 - found 97
ok 200 - placed 97
ok 201 - found 98
ok 202 - placed 98
ok 203 - found 99
ok 204 - placed 99
ok 205 - found 100
ok 206 - put smaller -10 in front
ok 207 - put smaller -9 in front
ok 208 - put smaller -8 in front
ok 209 - put smaller -7 in front
ok 210 - put smaller -6 in front
ok 211 - put smaller -5 in front
ok 212 - put smaller -4 in front
ok 213 - put smaller -3 in front
ok 214 - put smaller -2 in front
ok 215 - put smaller -1 in front
ok 216 - put smaller 0 in front
ok 217 - put bigger 101 at end
ok 218 - put bigger 102 at end
ok 219 - put bigger 103 at end
ok 220 - put bigger 104 at end
ok 221 - put bigger 105 at end
ok 222 - put bigger 106 at end
ok 223 - put bigger 107 at end
ok 224 - put bigger 108 at end
ok 225 - put bigger 109 at end
ok 226 - put bigger 110 at end
ok 227 - put bigger 111 at end
ok 228 - No memory leaks in lower_bound (leaks 0 <= 0)
ok 229 - No memory leaks in lower_bound with stack-growing (leaks 0 <= 0)
ok 230 - No memory leaks in lower_bound with stack-growing and exception (leaks 0 <= 0)
ok 231 - lower_bound without sub is_dying()
# Usage: List::MoreUtils::XS::lower_bound(code, ...) at t/xs/lower_bound.t line 61.
1..231
ok
t/xs/mesh.t ....................... 
ok 1 - mesh two list with same count of elements
ok 2 - zip two list with same count of elements
ok 3 - mesh three list with increasing count of elements
ok 4 - zip three list with increasing count of elements
ok 5 - mesh one list with 9 elements with an empty list
ok 6 - No memory leaks in mesh (leaks 0 <= 0)
ok 7 - mesh with a list, not at least two arrays is_dying()
# Usage: List::MoreUtils::XS::mesh(\@\@;\@...) at t/xs/mesh.t line 75.
1..7
ok
t/xs/minmax.t ..................... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9 - minmax swallows max on COW
ok 10
ok 11
ok 12
ok 13 - minmax finds ivmin
ok 14 - minmax finds ivmin + 10
ok 15 - minmax finds ivmax-10
ok 16 - minmax finds ivmax
ok 17 - minmax finds ivmin
ok 18 - minmax finds ivmax
ok 19 - minmax finds uvmax-10
ok 20 - minmax finds uvmax
ok 21 - minmax finds ivmin
ok 22 - minmax finds uvmax
ok 23 - No memory leaks in minmax (leaks 0 <= 0)
1..23
ok
t/xs/minmaxstr.t .................. 
ok 1
ok 2
ok 3
ok 4
ok 5 - minmaxstr swallows max on COW
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11 - No memory leaks in minmaxstr (leaks 0 <= 0)
1..11
ok
t/xs/mode.t ....................... 
ok 1 - mode:G_ARRAY lorem untouched
ok 2 - lorem mode as list
ok 3 - mode:G_SCALAR lorem untouched
ok 4 - lorem mode as scalar
ok 5 - mode:G_ARRAY probes untouched
ok 6 - unimodal result in list context
ok 7 - mode:G_SCALAR probes untouched
ok 8 - unimodal result in scalar context
ok 9 - bimodal mode:G_ARRAY probes untouched
ok 10 - bimodal result in list context
ok 11 - bimodal mode:G_SCALAR probes untouched
ok 12 - bimodal result in scalar context
ok 13 - multimodal result in list context
ok 14 - multimodal result in scalar context
ok 15 - No memory leaks in mode (unimodal) (leaks 0 <= 0)
ok 16 - No memory leaks in scalar mode (unimodal) (leaks 0 <= 0)
ok 17 - No memory leaks in mode (bimodal) (leaks 0 <= 0)
ok 18 - No memory leaks in scalar mode (bimodal) (leaks 0 <= 0)
ok 19 - No memory leaks in mode (multimodal) (leaks 0 <= 0)
ok 20 - No memory leaks in scalar mode (multimodal) (leaks 0 <= 0)
ok 21 - No memory leaks in mode (unimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 22 - No memory leaks in scalar mode (unimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 23 - No memory leaks in mode (bimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 24 - No memory leaks in scalar mode (bimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 25 - No memory leaks in mode (multimodal) with exception in overloading stringify (leaks 0 <= 0)
ok 26 - No memory leaks in scalar mode (multimodal) with exception in overloading stringify (leaks 0 <= 0)
1..26
ok
t/xs/natatime.t ................... 
ok 1
ok 2 - natatime with 3 elements
ok 3
ok 4 - natatime with 1 element
ok 5 - No memory leaks in natatime (leaks 0 <= 0)
1..5
ok
t/xs/none.t ....................... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_true ()
ok 5 - No memory leaks in none (leaks 0 <= 0)
ok 6 - none without sub is_dying()
# Usage: List::MoreUtils::XS::none(code, ...) at t/xs/none.t line 27.
1..6
ok
t/xs/none_u.t ..................... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_undef()
ok 5 - No memory leaks in none_u (leaks 0 <= 0)
ok 6 - none_u without sub is_dying()
# Usage: List::MoreUtils::XS::none_u(code, ...) at t/xs/none_u.t line 27.
1..6
ok
t/xs/notall.t ..................... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_false()
ok 5 - No memory leaks in notall (leaks 0 <= 0)
ok 6 - notall without sub is_dying()
# Usage: List::MoreUtils::XS::notall(code, ...) at t/xs/notall.t line 27.
1..6
ok
t/xs/notall_u.t ................... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_false()
ok 4 - is_undef()
ok 5 - No memory leaks in notall_u (leaks 0 <= 0)
ok 6 - notall_u without sub is_dying()
# Usage: List::MoreUtils::XS::notall_u(code, ...) at t/xs/notall_u.t line 27.
1..6
ok
t/xs/occurrences.t ................ 
ok 1 - Each word is counted
ok 2 - Text to long, each word is there at least twice
ok 3 - 11 comma
ok 4 - 7 dots
ok 5 - 9 words 'et'
ok 6 - Words are as many as requested at www.loremipsum.de
ok 7 - probes untouched
ok 8 - occurrences of integer probes
ok 9 - probes untouched
ok 10 - occurrences of integer probes
ok 11 - No memory leaks in occurrences (leaks 0 <= 0)
ok 12 - No memory leaks in scalar occurrences (leaks 0 <= 0)
ok 13 - No memory leaks in occurrences with exception in overloading stringify (leaks 0 <= 0)
1..13
ok
t/xs/one.t ........................ 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_false()
ok 6 - is_false()
ok 7 - is_false()
ok 8 - No memory leaks in one (leaks 0 <= 0)
ok 9 - one without sub is_dying()
# Usage: List::MoreUtils::XS::one(code, ...) at t/xs/one.t line 30.
1..9
ok
t/xs/one_u.t ...................... 
ok 1 - is_true ()
ok 2 - is_true ()
ok 3 - is_true ()
ok 4 - is_false()
ok 5 - is_false()
ok 6 - is_false()
ok 7 - is_undef()
ok 8 - No memory leaks in one_u (leaks 0 <= 0)
ok 9 - one_u without sub is_dying()
# Usage: List::MoreUtils::XS::one_u(code, ...) at t/xs/one_u.t line 30.
1..9
ok
t/xs/onlyidx.t .................... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13 - No memory leaks in onlyidx (leaks 0 <= 0)
ok 14 - onlyidx without sub is_dying()
# Usage: List::MoreUtils::XS::onlyidx(code, ...) at t/xs/onlyidx.t line 40.
1..14
ok
t/xs/onlyres.t .................... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11 - No memory leaks in onlyres (leaks 0 <= 0)
ok 12 - onlyres without sub is_dying()
# Usage: List::MoreUtils::XS::onlyres(code, ...) at t/xs/onlyres.t line 38.
1..12
ok
t/xs/onlyval.t .................... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13 - No memory leaks in onlyval (leaks 0 <= 0)
ok 14 - onlyval without sub is_dying()
# Usage: List::MoreUtils::XS::onlyval(code, ...) at t/xs/onlyval.t line 40.
1..14
ok
t/xs/pairwise.t ................... 
ok 1 - pw1
ok 2 - pw2
ok 3 - pw3
ok 4 - pw4
ok 5 - pw5
ok 6 - pw6
ok 7 - pw7
ok 8 - pw8
ok 9 - pw9
ok 10 - pwX
ok 11
ok 12 - pw map
ok 13
ok 14 - No memory leaks in pairwise (leaks 0 <= 0)
ok 15 - No memory leaks in exceptional block (leaks 0 <= 0)
ok 16 - pairwise die's on broken caller
ok 17 # skip XS will die on purpose here ...
ok 18 - pairwise without sub is_dying()
# Usage: List::MoreUtils::XS::pairwise(code, list, list) at t/xs/pairwise.t line 111.
ok 19 - pairwise without first ARRAY is_dying()
# List::MoreUtils::XS::pairwise: list1 is not an ARRAY reference at t/xs/pairwise.t line 117.
ok 20 - pairwise without second ARRAY is_dying()
# List::MoreUtils::XS::pairwise: list2 is not an ARRAY reference at t/xs/pairwise.t line 122.
1..20
ok
t/xs/part.t ....................... 
ok 1 -   i: part % 3
ok 2 -  ii: part % 3
ok 3 - iii: part % 3
ok 4 - Values are not aliases
ok 5 -   i: part 3
ok 6 -  ii: part 3
ok 7 - iii: part 3
ok 8 -  iv: part 3
ok 9
ok 10 - part with negative indices
ok 11 # skip Only PurePerl will warn here ...
ok 12 -   i: part 10_000
ok 13 -  ii: part 10_000
ok 14 - iii: part 10_000
ok 15 -  iv: part 10_000
ok 16 - part $_: 1
ok 17 - part $_: 2
ok 18 - part $_: 3
ok 19 - part $_: 4
ok 20 - part $_: 5
ok 21 - part $_: 6
ok 22 - part $_: 7
ok 23 - part $_: 8
ok 24 - part $_: 9
ok 25 - part $_: 10
ok 26 - No memory leaks in part (leaks 0 <= 0)
ok 27 - No memory leaks in part with stack-growing (leaks 0 <= 0)
ok 28 - No memory leaks in part with exception (leaks 0 <= 0)
1..28
ok
t/xs/qsort.t ...................... 
ok 1 - sorted ascending
ok 2 - sorted descending
1..2
ok
t/xs/reduce_0.t ................... 
ok 1 - weighted average of exam
ok 2 - No memory leaks in reduce_0 (leaks 0 <= 0)
ok 3 - No memory leaks in reduce_0 X (leaks 0 <= 0)
ok 4 - No memory leaks in reduce_0 with a coderef that dies (leaks 0 <= 0)
ok 5 - reduce_0 without sub is_dying()
# Usage: List::MoreUtils::XS::reduce_0(code, list, list) at t/xs/reduce_0.t line 44.
1..5
ok
t/xs/reduce_1.t ................... 
ok 1 - Wallis product => near? 1.57027316403184 ~= 1.5707963267949
1..1
ok
t/xs/reduce_u.t ................... 
ok 1 - weighted average of exam
ok 2 - No memory leaks in reduce_u (leaks 0 <= 0)
ok 3 - No memory leaks in reduce_u X (leaks 0 <= 0)
ok 4 - No memory leaks in reduce_u with a coderef that dies (leaks 0 <= 0)
ok 5 - reduce_u without sub is_dying()
# Usage: List::MoreUtils::XS::reduce_u(code, list, list) at t/xs/reduce_u.t line 44.
1..5
ok
t/xs/samples.t .................... 
ok 1 - samples stops correctly after 10 integer probes
ok 2 - samples doesn't add any integer twice
ok 3 - samples delivers 10 out of 10 when used as shuffle
ok 4 - samples doesn't add any integer twice
ok 5 - samples stops correctly after 10 strings probes
ok 6 - samples doesn't add any string twice
ok 7 - to much samples is_dying()
# Cannot get 5 samples from 3 elements at t/xs/samples.t line 41.
ok 8 - samples without list is_dying()
# Cannot get 5 samples from 0 elements at t/xs/samples.t line 45.
1..8
ok
t/xs/singleton.t .................. 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12 - one undef is supported correctly by singleton
ok 13 - twice undef is supported correctly by singleton
ok 14 - scalar twice undef is supported correctly by singleton
ok 15 - No memory leaks in singleton (leaks 0 <= 0)
ok 16 - No memory leaks in singleton with exception in overloading stringify (leaks 0 <= 0)
1..16
ok
t/xs/slide.t ...................... 
ok 1 - M. Schwern requested example
ok 2 - slide without sub is_dying()
# Usage: List::MoreUtils::XS::slide(code, item1, item2, ...) at t/xs/slide.t line 18.
1..2
ok
t/xs/slideatatime.t ............... 
ok 1
ok 2 - slideatatime as natatime with 3 elements
ok 3
ok 4 - slideatatime moving 3 elements by 2 items
ok 5
ok 6 - slideatatime moving 3 elements by 1 item
ok 7
ok 8 - slideatatime as natatime with 1 element
ok 9 - No memory leaks in slideatatime (leaks 0 <= 0)
ok 10 - No memory leaks in slideatatime with exception (leaks 0 <= 0)
1..10
ok
t/xs/true.t ....................... 
ok 1 - true(null) returns undef
ok 2 - true(null) returns undef
ok 3
ok 4
ok 5
ok 6 - No memory leaks in true (leaks 0 <= 0)
ok 7 - true without sub is_dying()
# Usage: List::MoreUtils::XS::true(code, ...) at t/xs/true.t line 32.
1..7
ok
t/xs/uniq.t ....................... 
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13 - undef is supported correctly
ok 14 - No memory leaks in uniq (leaks 0 <= 0)
ok 15 - No memory leaks in uniq with exception in overloading stringify (leaks 0 <= 0)
1..15
ok
t/xs/upper_bound.t ................ 
ok 1 - upper bound 0
ok 2 - upper bound 1
ok 3 - upper bound 2
ok 4 - upper bound 4
ok 5 - upper bound 19
ok 6 - placed 0
ok 7 - found 1
ok 8 - placed 1
ok 9 - found 2
ok 10 - placed 2
ok 11 - found 3
ok 12 - placed 3
ok 13 - found 4
ok 14 - placed 4
ok 15 - found 5
ok 16 - placed 5
ok 17 - found 6
ok 18 - placed 6
ok 19 - found 7
ok 20 - placed 7
ok 21 - found 8
ok 22 - placed 8
ok 23 - found 9
ok 24 - placed 9
ok 25 - found 10
ok 26 - placed 10
ok 27 - found 11
ok 28 - placed 11
ok 29 - found 12
ok 30 - placed 12
ok 31 - found 13
ok 32 - placed 13
ok 33 - found 14
ok 34 - placed 14
ok 35 - found 15
ok 36 - placed 15
ok 37 - found 16
ok 38 - placed 16
ok 39 - found 17
ok 40 - placed 17
ok 41 - found 18
ok 42 - placed 18
ok 43 - found 19
ok 44 - placed 19
ok 45 - found 20
ok 46 - placed 20
ok 47 - found 21
ok 48 - placed 21
ok 49 - found 22
ok 50 - placed 22
ok 51 - found 23
ok 52 - placed 23
ok 53 - found 24
ok 54 - placed 24
ok 55 - found 25
ok 56 - placed 25
ok 57 - found 26
ok 58 - placed 26
ok 59 - found 27
ok 60 - placed 27
ok 61 - found 28
ok 62 - placed 28
ok 63 - found 29
ok 64 - placed 29
ok 65 - found 30
ok 66 - placed 30
ok 67 - found 31
ok 68 - placed 31
ok 69 - found 32
ok 70 - placed 32
ok 71 - found 33
ok 72 - placed 33
ok 73 - found 34
ok 74 - placed 34
ok 75 - found 35
ok 76 - placed 35
ok 77 - found 36
ok 78 - placed 36
ok 79 - found 37
ok 80 - placed 37
ok 81 - found 38
ok 82 - placed 38
ok 83 - found 39
ok 84 - placed 39
ok 85 - found 40
ok 86 - placed 40
ok 87 - found 41
ok 88 - placed 41
ok 89 - found 42
ok 90 - placed 42
ok 91 - found 43
ok 92 - placed 43
ok 93 - found 44
ok 94 - placed 44
ok 95 - found 45
ok 96 - placed 45
ok 97 - found 46
ok 98 - placed 46
ok 99 - found 47
ok 100 - placed 47
ok 101 - found 48
ok 102 - placed 48
ok 103 - found 49
ok 104 - placed 49
ok 105 - found 50
ok 106 - placed 50
ok 107 - found 51
ok 108 - placed 51
ok 109 - found 52
ok 110 - placed 52
ok 111 - found 53
ok 112 - placed 53
ok 113 - found 54
ok 114 - placed 54
ok 115 - found 55
ok 116 - placed 55
ok 117 - found 56
ok 118 - placed 56
ok 119 - found 57
ok 120 - placed 57
ok 121 - found 58
ok 122 - placed 58
ok 123 - found 59
ok 124 - placed 59
ok 125 - found 60
ok 126 - placed 60
ok 127 - found 61
ok 128 - placed 61
ok 129 - found 62
ok 130 - placed 62
ok 131 - found 63
ok 132 - placed 63
ok 133 - found 64
ok 134 - placed 64
ok 135 - found 65
ok 136 - placed 65
ok 137 - found 66
ok 138 - placed 66
ok 139 - found 67
ok 140 - placed 67
ok 141 - found 68
ok 142 - placed 68
ok 143 - found 69
ok 144 - placed 69
ok 145 - found 70
ok 146 - placed 70
ok 147 - found 71
ok 148 - placed 71
ok 149 - found 72
ok 150 - placed 72
ok 151 - found 73
ok 152 - placed 73
ok 153 - found 74
ok 154 - placed 74
ok 155 - found 75
ok 156 - placed 75
ok 157 - found 76
ok 158 - placed 76
ok 159 - found 77
ok 160 - placed 77
ok 161 - found 78
ok 162 - placed 78
ok 163 - found 79
ok 164 - placed 79
ok 165 - found 80
ok 166 - placed 80
ok 167 - found 81
ok 168 - placed 81
ok 169 - found 82
ok 170 - placed 82
ok 171 - found 83
ok 172 - placed 83
ok 173 - found 84
ok 174 - placed 84
ok 175 - found 85
ok 176 - placed 85
ok 177 - found 86
ok 178 - placed 86
ok 179 - found 87
ok 180 - placed 87
ok 181 - found 88
ok 182 - placed 88
ok 183 - found 89
ok 184 - placed 89
ok 185 - found 90
ok 186 - placed 90
ok 187 - found 91
ok 188 - placed 91
ok 189 - found 92
ok 190 - placed 92
ok 191 - found 93
ok 192 - placed 93
ok 193 - found 94
ok 194 - placed 94
ok 195 - found 95
ok 196 - placed 95
ok 197 - found 96
ok 198 - placed 96
ok 199 - found 97
ok 200 - placed 97
ok 201 - found 98
ok 202 - placed 98
ok 203 - found 99
ok 204 - placed 99
ok 205 - found 100
ok 206 - put smaller -10 in front
ok 207 - put smaller -9 in front
ok 208 - put smaller -8 in front
ok 209 - put smaller -7 in front
ok 210 - put smaller -6 in front
ok 211 - put smaller -5 in front
ok 212 - put smaller -4 in front
ok 213 - put smaller -3 in front
ok 214 - put smaller -2 in front
ok 215 - put smaller -1 in front
ok 216 - put smaller 0 in front
ok 217 - put bigger 101 at end
ok 218 - put bigger 102 at end
ok 219 - put bigger 103 at end
ok 220 - put bigger 104 at end
ok 221 - put bigger 105 at end
ok 222 - put bigger 106 at end
ok 223 - put bigger 107 at end
ok 224 - put bigger 108 at end
ok 225 - put bigger 109 at end
ok 226 - put bigger 110 at end
ok 227 - put bigger 111 at end
ok 228 - No memory leaks in upper_bound (leaks 0 <= 0)
ok 229 - No memory leaks in upper_bound with stack-growing (leaks 0 <= 0)
ok 230 - No memory leaks in upper_bound with stack-growing and exception (leaks 0 <= 0)
ok 231 - upper_bound without sub is_dying()
# Usage: List::MoreUtils::XS::upper_bound(code, ...) at t/xs/upper_bound.t line 61.
1..231
ok
t/xs/zip6.t ....................... 
ok 1 - zip6 two lists with same count of elements
ok 2 - zip6 three list with increasing count of elements
ok 3 - zip6 one list with 9 elements with an empty list
ok 4 - No memory leaks in zip6 (leaks 0 <= 0)
ok 5 - zip6 with a list, not at least two arrays is_dying()
# Usage: List::MoreUtils::XS::zip6(\@\@;\@...) at t/xs/zip6.t line 56.
1..5
ok
All tests successful.
Files=122, Tests=9066, 308 wallclock secs (10.43 usr  3.07 sys + 265.33 cusr 40.09 csys = 318.92 CPU)
Result: PASS
