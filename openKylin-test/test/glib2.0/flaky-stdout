Running as: uid=1000(openkylin) gid=1000(openkylin) groups=1000(openkylin),27(sudo)
passwd entry: openkylin:x:1000:1000:,,,:/home/openkylin:/bin/bash
group entry: openkylin:x:1000:
Environment:
ADTTMP=/tmp/autopkgtest.w0k0RN/autopkgtest_tmp
ADT_ARTIFACTS=/tmp/autopkgtest.w0k0RN/flaky-artifacts
AUTOPKGTEST_ARTIFACTS=/tmp/autopkgtest.w0k0RN/flaky-artifacts
AUTOPKGTEST_TMP=/tmp/autopkgtest.w0k0RN/autopkgtest_tmp
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
DEBIAN_FRONTEND=noninteractive
DEB_ALLOW_FLAKY_TESTS=1
DEB_BUILD_OPTIONS=parallel=8
GIO_USE_VFS=local
GIO_USE_VOLUME_MONITOR=unix
GTK_MODULES=ukuireload-gtk-module
HOME=/home/openkylin
INVOCATION_ID=7b3863713e8c460b8665a1e23e6ba72f
LANG=C.UTF-8
LOGNAME=openkylin
MAIL=/var/mail/openkylin
OLDPWD=/
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
PWD=/tmp/autopkgtest.w0k0RN/build.Tto/src
SHELL=/bin/bash
SHLVL=0
TERM=vt220
USER=openkylin
XDG_RUNTIME_DIR=/tmp/autopkgtest.w0k0RN/autopkgtest_tmp
XDG_SESSION_CLASS=background
XDG_SESSION_ID=c2
XDG_SESSION_TYPE=unspecified
Running test: glib/testfilemonitor.test
# random seed: R02Sdf9bcbdeaf86956e5756d28c8a4927b8
1..6
# Start of monitor tests
# GLib-GIO-DEBUG: _g_io_module_get_default: Found default implementation local (GLocalVfs) for ?gio-vfs?
# Using temporary directory: /tmp/gio-test-testfilemonitor_SYCL01
# Using GFileMonitor GInotifyFileMonitor
ok 1 /monitor/atomic-replace
# Using temporary directory: /tmp/gio-test-testfilemonitor_QL3R01
# Using GFileMonitor GInotifyFileMonitor
ok 2 /monitor/file-changes
# Using temporary directory: /tmp/gio-test-testfilemonitor_PEN301
# Using GFileMonitor GInotifyFileMonitor
Executing: glib/testfilemonitor.test
ok 3 /monitor/dir-monitor
# Using temporary directory: /tmp/gio-test-testfilemonitor_356T01
# Using GFileMonitor GInotifyFileMonitor
Executing: glib/testfilemonitor.test
Executing: glib/testfilemonitor.test
Executing: glib/testfilemonitor.test
Executing: glib/testfilemonitor.test
Executing: glib/testfilemonitor.test
ok 4 /monitor/dir-not-existent
# Using temporary directory: /tmp/gio-test-testfilemonitor_NDJT01
# Using GFileMonitor 0 GInotifyFileMonitor
# Using GFileMonitor 1 GInotifyFileMonitor
ok 5 /monitor/cross-dir-moves
# Start of file tests
# Using temporary directory: /tmp/gio-test-testfilemonitor_AI6S01
# Bug Reference: https://bugzilla.gnome.org/show_bug.cgi?id=755721
# Running with hard link tests
Executing: glib/testfilemonitor.test
# Using GFileMonitor GInotifyFileMonitor
# Event 0 at expected index 7 skipped because it is marked as optional
# Event 2 at expected index 11 skipped because it is marked as optional
ok 6 /monitor/file/hard-links
# End of file tests
# End of monitor tests
PASS: glib/testfilemonitor.test
Running test: glib/gmenumodel.test
# random seed: R02S034eaa10135eec258f9cca0c0bf8aa55
# GLib-DEBUG: Launching with posix_spawn
1..13
# Start of gmenu tests
Executing: glib/gmenumodel.test
ok 1 /gmenu/equality
Executing: glib/gmenumodel.test
Executing: glib/gmenumodel.test
ok 2 /gmenu/random
ok 3 /gmenu/attributes
ok 4 /gmenu/links
ok 5 /gmenu/mutable
ok 6 /gmenu/convenience
ok 7 /gmenu/menuitem
# Start of dbus tests
ok 8 /gmenu/dbus/roundtrip
ok 9 /gmenu/dbus/subscriptions
Executing: glib/gmenumodel.test
Executing: glib/gmenumodel.test
Executing: glib/gmenumodel.test
Executing: glib/gmenumodel.test
ok 10 /gmenu/dbus/threaded
# Start of peer tests
ok 11 /gmenu/dbus/peer/roundtrip
ok 12 /gmenu/dbus/peer/subscriptions
# End of peer tests
# End of dbus tests
# Start of attributes tests
ok 13 /gmenu/attributes/iterate
# End of attributes tests
# End of gmenu tests
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
PASS: glib/gmenumodel.test
Running test: glib/timeout.test
# random seed: R02Sa40239779fedcd03af87e2dd2c094338
1..4
# Start of timeout tests
# Bug Reference: https://bugzilla.gnome.org/show_bug.cgi?id=642052
Executing: glib/timeout.test
ok 1 /timeout/seconds
# Bug Reference: https://gitlab.gnome.org/GNOME/glib/issues/1600
ok 2 /timeout/weeks-overflow
ok 3 /timeout/far-future-ready-time
Executing: glib/timeout.test
Executing: glib/timeout.test
ok 4 /timeout/rounding
# End of timeout tests
PASS: glib/timeout.test
Running test: glib/closure-refcount.test
# random seed: R02Sbd4609717344f1b8f3d24b90d572ab95
1..1
# Start of closure tests
# Init 0x2ad8273c30
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
Executing: glib/closure-refcount.test
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
Executing: glib/closure-refcount.test
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Yielding from main thread
# Yielding from main thread
# Yielding from thread2
# Yielding from main thread
# Yielding from main thread
# Yielding from thread1
# Stopping
# Stopped
ok 1 /closure/refcount
# End of closure tests
PASS: glib/closure-refcount.test
Running test: glib/mainloop.test
# random seed: R02S415f3d7ec0a80576bbfcd79fa397480b
1..35
# Start of maincontext tests
ok 1 /maincontext/basic
ok 2 /maincontext/source_finalization
# Start of source_finalization_from_source tests
# /maincontext/source_finalization_from_source/0 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 3 /maincontext/source_finalization_from_source/0
# /maincontext/source_finalization_from_source/1 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 4 /maincontext/source_finalization_from_source/1
# /maincontext/source_finalization_from_source/2 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 5 /maincontext/source_finalization_from_source/2
# /maincontext/source_finalization_from_source/3 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 6 /maincontext/source_finalization_from_source/3
# /maincontext/source_finalization_from_source/4 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 7 /maincontext/source_finalization_from_source/4
# /maincontext/source_finalization_from_source/5 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 8 /maincontext/source_finalization_from_source/5
# /maincontext/source_finalization_from_source/6 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 9 /maincontext/source_finalization_from_source/6
# /maincontext/source_finalization_from_source/7 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 10 /maincontext/source_finalization_from_source/7
# /maincontext/source_finalization_from_source/8 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 11 /maincontext/source_finalization_from_source/8
# /maincontext/source_finalization_from_source/9 summary: Tests if freeing a GSource as part of another GSource during main context destruction works.
# Bug Reference: http://bugzilla.gnome.org/https://gitlab.gnome.org/GNOME/glib/merge_requests/1353
ok 12 /maincontext/source_finalization_from_source/9
# End of source_finalization_from_source tests
# Start of source_finalization_from_dispatch tests
# /maincontext/source_finalization_from_dispatch/0 summary: Tests if freeing a GSource as part of another GSource during main context iteration works.
ok 13 /maincontext/source_finalization_from_dispatch/0
# /maincontext/source_finalization_from_dispatch/1 summary: Tests if freeing a GSource as part of another GSource during main context iteration works.
ok 14 /maincontext/source_finalization_from_dispatch/1
# /maincontext/source_finalization_from_dispatch/2 summary: Tests if freeing a GSource as part of another GSource during main context iteration works.
ok 15 /maincontext/source_finalization_from_dispatch/2
# End of source_finalization_from_dispatch tests
# End of maincontext tests
# Start of mainloop tests
ok 16 /mainloop/basic
ok 17 /mainloop/timeouts # SKIP Not running timing heavy test
ok 18 /mainloop/priorities
ok 19 /mainloop/invoke
ok 20 /mainloop/child_sources
Executing: glib/mainloop.test
ok 21 /mainloop/recursive_child_sources
ok 22 /mainloop/swapping_child_sources
# Bug Reference: http://bugzilla.gnome.org/701283
ok 23 /mainloop/blocked_child_sources
ok 24 /mainloop/source_time
# Bug Reference: http://bugzilla.gnome.org/687098
ok 25 /mainloop/overflow
ok 26 /mainloop/ready-time
ok 27 /mainloop/wakeup
ok 28 /mainloop/remove-invalid
ok 29 /mainloop/unref-while-pending
Executing: glib/mainloop.test
Executing: glib/mainloop.test
Executing: glib/mainloop.test
Executing: glib/mainloop.test
Executing: glib/mainloop.test
Executing: glib/mainloop.test
Executing: glib/mainloop.test
Executing: glib/mainloop.test
Executing: glib/mainloop.test
ok 30 /mainloop/unix-fd
ok 31 /mainloop/unix-fd-source
ok 32 /mainloop/source-unix-fd-api
ok 33 /mainloop/wait
ok 34 /mainloop/unix-file-poll
ok 35 /mainloop/nfds
# End of mainloop tests
PASS: glib/mainloop.test
Running test: glib/timer.test
# random seed: R02S922759ed9d6df4f00f62daa73c209e9e
1..9
# Start of timer tests
ok 1 /timer/basic
ok 2 /timer/stop
ok 3 /timer/continue
ok 4 /timer/reset
ok 5 /timer/is_active
# End of timer tests
# Start of timeval tests
ok 6 /timeval/add
ok 7 /timeval/from-iso8601
ok 8 /timeval/to-iso8601
# Start of to-iso8601 tests
ok 9 /timeval/to-iso8601/overflow
# End of to-iso8601 tests
# End of timeval tests
PASS: glib/timer.test
Running test: glib/gdbus-threading.test
# random seed: R02Sfe2bd8263b31efe5d32736159f93864d
# GLib-DEBUG: Launching with posix_spawn
# GLib-DEBUG: posix_spawn avoided (automatic reaping requested) (fd close requested) 
1..3
# Start of gdbus tests
ok 1 /gdbus/delivery-in-thread
ok 2 /gdbus/method-calls-in-thread
Executing: glib/gdbus-threading.test
Executing: glib/gdbus-threading.test
Executing: glib/gdbus-threading.test
# GLib-GIO-DEBUG: refcount of 0x2ae4bc5e60 is not right, sleeping
Executing: glib/gdbus-threading.test
# GLib-GIO-DEBUG: refcount of 0x2ae4bc5b60 is not right, sleeping
ok 3 /gdbus/threaded-singleton
# End of gdbus tests
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
# GLib-DEBUG: unsetenv() is not thread-safe and should not be used after threads are created
PASS: glib/gdbus-threading.test
Running test: glib/socket.test
# random seed: R02S528c7ceb3ee5f5dbc90285d513c08d43
1..23
# Start of socket tests
Executing: glib/socket.test
ok 1 /socket/ipv4_sync
ok 2 /socket/ipv4_async
ok 3 /socket/ipv6_sync
ok 4 /socket/ipv6_async
ok 5 /socket/ipv6_v4mapped
ok 6 /socket/close_graceful
ok 7 /socket/timed_wait # SKIP Not running timing heavy test
# Bug Reference: https://bugzilla.gnome.org/741707
ok 8 /socket/fd_reuse
ok 9 /socket/address
ok 10 /socket/unix-from-fd
ok 11 /socket/unix-connection
ok 12 /socket/unix-connection-ancillary-data
ok 13 /socket/source-postmortem
ok 14 /socket/read_write
ok 15 /socket/read_writev
# Start of ipv4_sync tests
ok 16 /socket/ipv4_sync/datagram
# Start of datagram tests
ok 17 /socket/ipv4_sync/datagram/timeouts
# End of datagram tests
# End of ipv4_sync tests
# Start of ipv6_sync tests
ok 18 /socket/ipv6_sync/datagram
# Start of datagram tests
Executing: glib/socket.test
ok 19 /socket/ipv6_sync/datagram/timeouts
# End of datagram tests
# End of ipv6_sync tests
# Start of reuse tests
ok 20 /socket/reuse/tcp
ok 21 /socket/reuse/udp
# End of reuse tests
# Start of get_available tests
ok 22 /socket/get_available/datagram
ok 23 /socket/get_available/stream
# End of get_available tests
# End of socket tests
PASS: glib/socket.test
SUMMARY: total=8; passed=8; skipped=0; failed=0; user=96.3s; system=69.7s; maxrss=7120
