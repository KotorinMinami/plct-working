t/97_meta.t .......................... skipped: Test::CPAN::Meta 0.12 not available for testing
t/98_pod.t ........................... skipped: Test::Pod 1.26 not available for testing
t/98_pod_coverage.t .................. skipped: Test::Pod::Coverage 1.04 not available for testing
t/99_perl_minimum_version.t .......... skipped: Perl::MinimumVersion 1.20 not available for testing
t/adopt.t ............................ skipped: adopt not implemented yet
t/autoflush.t ........................ 
1..4
ok 1 - Autoflush set
ok 2 - Autoflush still set
ok 3 - Autoflush unset
ok 4 - Autoflush still unset
ok
t/binmode.t .......................... 
1..24
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6 - no binary
ok 7
ok 8 - out binary
ok 9
ok 10 - out binary 0
ok 11
ok 12 - out binary 1
ok 13
ok 14 - reporter < \n
ok 15
ok 16 - reporter < binary \n
ok 17
ok 18 - reporter < binary \r\n
ok 19
ok 20 - reporter < binary(0) \n
ok 21
ok 22 - reporter < binary(1) \n
ok 23
ok 24 - reporter < binary(1) \r\n
ok
t/bogus.t ............................ 
1..2
ok 1 - starting ./bogus_really_bogus
ok 2 - starting /usr/bin/perl with simulated_exec_failure => 1
ok
t/eintr.t ............................ 
1..3
ok 1 - got stdout on the first pump
ok 2 - first pump didn't wait for kid exit
ok 3 - got USR1 from the kid
ok
t/filter.t ........................... 
1..80
ok 1 - filter_tests didn't pass undef (EOF) through
ok 2 - filter_tests didn't return 0 (please try again) when given a 0
ok 3 - filter_tests didn't return 0 (please try again) when given a second 0
ok 4 - filter_tests didn't return undef (EOF) after two 0s and an undef
ok 5 - filter_tests didn't consume it's input
ok 6 - filter_tests didn't return undef (EOF), tried  100 times
ok 7 - filter_tests
ok 8
ok 9 - filter_tests [] didn't pass undef (EOF) through
ok 10 - filter_tests [] didn't return 0 (please try again) when given a 0
ok 11 - filter_tests [] didn't return 0 (please try again) when given a second 0
ok 12 - filter_tests [] didn't return undef (EOF) after two 0s and an undef
ok 13 - filter_tests [] didn't consume it's input
ok 14 - filter_tests [] didn't return undef (EOF), tried  100 times
ok 15 - filter_tests []
ok 16
ok 17 - filter_tests [] 2 didn't pass undef (EOF) through
ok 18 - filter_tests [] 2 didn't return 0 (please try again) when given a 0
ok 19 - filter_tests [] 2 didn't return 0 (please try again) when given a second 0
ok 20 - filter_tests [] 2 didn't return undef (EOF) after two 0s and an undef
ok 21 - filter_tests [] 2 didn't consume it's input
ok 22 - filter_tests [] 2 didn't return undef (EOF), tried  100 times
ok 23 - filter_tests [] 2
ok 24
ok 25 - uc_filter didn't pass undef (EOF) through
ok 26 - uc_filter didn't return 0 (please try again) when given a 0
ok 27 - uc_filter didn't return 0 (please try again) when given a second 0
ok 28 - uc_filter didn't return undef (EOF) after two 0s and an undef
ok 29 - uc_filter didn't consume it's input
ok 30 - uc_filter didn't return undef (EOF), tried  100 times
ok 31 - uc_filter
ok 32
ok 33 - chunking_filter by lines 1 didn't pass undef (EOF) through
ok 34 - chunking_filter by lines 1 didn't return 0 (please try again) when given a 0
ok 35 - chunking_filter by lines 1 didn't return 0 (please try again) when given a second 0
ok 36 - chunking_filter by lines 1 didn't return undef (EOF) after two 0s and an undef
ok 37 - chunking_filter by lines 1 didn't consume it's input
ok 38 - chunking_filter by lines 1 didn't return undef (EOF), tried  100 times
ok 39 - chunking_filter by lines 1
ok 40
ok 41 - chunking_filter by lines 2 didn't pass undef (EOF) through
ok 42 - chunking_filter by lines 2 didn't return 0 (please try again) when given a 0
ok 43 - chunking_filter by lines 2 didn't return 0 (please try again) when given a second 0
ok 44 - chunking_filter by lines 2 didn't return undef (EOF) after two 0s and an undef
ok 45 - chunking_filter by lines 2 didn't consume it's input
ok 46 - chunking_filter by lines 2 didn't return undef (EOF), tried  100 times
ok 47 - chunking_filter by lines 2
ok 48
ok 49 - chunking_filter by lines 2 didn't pass undef (EOF) through
ok 50 - chunking_filter by lines 2 didn't return 0 (please try again) when given a 0
ok 51 - chunking_filter by lines 2 didn't return 0 (please try again) when given a second 0
ok 52 - chunking_filter by lines 2 didn't return undef (EOF) after two 0s and an undef
ok 53 - chunking_filter by lines 2 didn't consume it's input
ok 54 - chunking_filter by lines 2 didn't return undef (EOF), tried  100 times
ok 55 - chunking_filter by lines 2
ok 56
ok 57 - chunking_filter by an odd separator didn't pass undef (EOF) through
ok 58 - chunking_filter by an odd separator didn't return 0 (please try again) when given a 0
ok 59 - chunking_filter by an odd separator didn't return 0 (please try again) when given a second 0
ok 60 - chunking_filter by an odd separator didn't return undef (EOF) after two 0s and an undef
ok 61 - chunking_filter by an odd separator didn't consume it's input
ok 62 - chunking_filter by an odd separator didn't return undef (EOF), tried  100 times
ok 63 - chunking_filter by an odd separator
ok 64
ok 65 - chunking_filter 2 didn't pass undef (EOF) through
ok 66 - chunking_filter 2 didn't return 0 (please try again) when given a 0
ok 67 - chunking_filter 2 didn't return 0 (please try again) when given a second 0
ok 68 - chunking_filter 2 didn't return undef (EOF) after two 0s and an undef
ok 69 - chunking_filter 2 didn't consume it's input
ok 70 - chunking_filter 2 didn't return undef (EOF), tried  100 times
ok 71 - chunking_filter 2
ok 72
ok 73 - appending_filter didn't pass undef (EOF) through
ok 74 - appending_filter didn't return 0 (please try again) when given a 0
ok 75 - appending_filter didn't return 0 (please try again) when given a second 0
ok 76 - appending_filter didn't return undef (EOF) after two 0s and an undef
ok 77 - appending_filter didn't consume it's input
ok 78 - appending_filter didn't return undef (EOF), tried  100 times
ok 79 - appending_filter
ok 80
ok
t/harness.t .......................... 
1..120
ok 1 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g
ok 2 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 0, KFD
ok 3 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 0, SOURCE
ok 4 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 0, TYPE
ok 5 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 1, KFD
ok 6 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 1, SOURCE
ok 7 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 1, TYPE
ok 8 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 2, KFD
ok 9 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 2, SOURCE
ok 10 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 2, TYPE
ok 11 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 3, KFD
ok 12 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 3, SOURCE
ok 13 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 3, TYPE
ok 14 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 4, KFD
ok 15 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 4, SOURCE
ok 16 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 4, TYPE
ok 17 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 5, KFD
ok 18 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 5, SOURCE
ok 19 - ARRAY(0x2aad772100) <b < c 0<d 0< e 1<f 1< g: 5, TYPE
ok 20 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i
ok 21 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 0, DEST
ok 22 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 0, KFD
ok 23 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 0, TRUNC
ok 24 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 0, TYPE
ok 25 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 1, DEST
ok 26 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 1, KFD
ok 27 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 1, TRUNC
ok 28 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 1, TYPE
ok 29 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 2, DEST
ok 30 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 2, KFD
ok 31 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 2, TRUNC
ok 32 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 2, TYPE
ok 33 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 3, DEST
ok 34 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 3, KFD
ok 35 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 3, TRUNC
ok 36 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 3, TYPE
ok 37 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 4, DEST
ok 38 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 4, KFD
ok 39 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 4, TRUNC
ok 40 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 4, TYPE
ok 41 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 5, DEST
ok 42 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 5, KFD
ok 43 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 5, TRUNC
ok 44 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 5, TYPE
ok 45 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 6, DEST
ok 46 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 6, KFD
ok 47 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 6, TRUNC
ok 48 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 6, TYPE
ok 49 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 7, DEST
ok 50 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 7, KFD
ok 51 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 7, TRUNC
ok 52 - ARRAY(0x2aad772040) >b > c 2>d 2> e >>f >> g 2>>h 2>> i: 7, TYPE
ok 53 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e
ok 54 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 0, DEST
ok 55 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 0, KFD
ok 56 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 0, TRUNC
ok 57 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 0, TYPE
ok 58 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 1, KFD1
ok 59 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 1, KFD2
ok 60 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 1, TYPE
ok 61 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 2, DEST
ok 62 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 2, KFD
ok 63 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 2, TRUNC
ok 64 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 2, TYPE
ok 65 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 3, KFD1
ok 66 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 3, KFD2
ok 67 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 3, TYPE
ok 68 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 4, DEST
ok 69 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 4, KFD
ok 70 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 4, TRUNC
ok 71 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 4, TYPE
ok 72 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 5, KFD1
ok 73 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 5, KFD2
ok 74 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 5, TYPE
ok 75 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 6, DEST
ok 76 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 6, KFD
ok 77 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 6, TRUNC
ok 78 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 6, TYPE
ok 79 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 7, KFD1
ok 80 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 7, KFD2
ok 81 - ARRAY(0x2aad74d4f0) >&b >& c &>d &> e: 7, TYPE
ok 82 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0)
ok 83 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 0, DEST
ok 84 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 0, FILTERS
ok 85 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 0, KFD
ok 86 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 0, TRUNC
ok 87 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 0, TYPE
ok 88 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 1, KFD1
ok 89 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 1, KFD2
ok 90 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 1, TYPE
ok 91 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 2, DEST
ok 92 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 2, FILTERS
ok 93 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 2, KFD
ok 94 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 2, TRUNC
ok 95 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 2, TYPE
ok 96 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 3, FILTERS
ok 97 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 3, KFD
ok 98 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 3, SOURCE
ok 99 - ARRAY(0x2aad772100) >& CODE(0x2aae14a610) CODE(0x2aae14a670) SCALAR(0x2aad77bdc0) > CODE(0x2aae14a6d0) CODE(0x2aae14a718) SCALAR(0x2aad77bdc0) < CODE(0x2aae153480) CODE(0x2aae1534c8) SCALAR(0x2aad77bdc0): 3, TYPE
ok 100 - ARRAY(0x2aad772040) < SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0)
ok 101 - ARRAY(0x2aad772040) < SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 0, KFD
ok 102 - ARRAY(0x2aad772040) < SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 0, SOURCE
ok 103 - ARRAY(0x2aad772040) < SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 0, TYPE
ok 104 - ARRAY(0x2aad772040) < SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 1, DEST
ok 105 - ARRAY(0x2aad772040) < SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 1, KFD
ok 106 - ARRAY(0x2aad772040) < SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 1, TYPE
ok 107 - ARRAY(0x2aad74d4f0) <pipe SCALAR(0x2aad77bdc0) >pipe SCALAR(0x2aad77bdc0)
ok 108 - ARRAY(0x2aad74d4f0) <pipe SCALAR(0x2aad77bdc0) >pipe SCALAR(0x2aad77bdc0): 0, KFD
ok 109 - ARRAY(0x2aad74d4f0) <pipe SCALAR(0x2aad77bdc0) >pipe SCALAR(0x2aad77bdc0): 0, SOURCE
ok 110 - ARRAY(0x2aad74d4f0) <pipe SCALAR(0x2aad77bdc0) >pipe SCALAR(0x2aad77bdc0): 0, TYPE
ok 111 - ARRAY(0x2aad74d4f0) <pipe SCALAR(0x2aad77bdc0) >pipe SCALAR(0x2aad77bdc0): 1, DEST
ok 112 - ARRAY(0x2aad74d4f0) <pipe SCALAR(0x2aad77bdc0) >pipe SCALAR(0x2aad77bdc0): 1, KFD
ok 113 - ARRAY(0x2aad74d4f0) <pipe SCALAR(0x2aad77bdc0) >pipe SCALAR(0x2aad77bdc0): 1, TYPE
ok 114 - ARRAY(0x2aad772100) <pipe SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0)
ok 115 - ARRAY(0x2aad772100) <pipe SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 0, KFD
ok 116 - ARRAY(0x2aad772100) <pipe SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 0, SOURCE
ok 117 - ARRAY(0x2aad772100) <pipe SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 0, TYPE
ok 118 - ARRAY(0x2aad772100) <pipe SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 1, DEST
ok 119 - ARRAY(0x2aad772100) <pipe SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 1, KFD
ok 120 - ARRAY(0x2aad772100) <pipe SCALAR(0x2aad77bdc0) > SCALAR(0x2aad77bdc0): 1, TYPE
ok
t/io.t ............................... 
1..14
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok
t/kill_kill.t ........................ 
1..2
ok 1 - Did not need kill_kill
ok 2 - Did not need kill_kill
ok
t/parallel.t ......................... 
1..6
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok
t/pty.t .............................. 
1..32
# IO::Tty 1.12, IO::Pty 1.12
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok
t/pump.t ............................. 
1..27
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21 - pos$out
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok
t/readonly.t ......................... 
# Running test case 'a': '/bin/echo hello'
ok 1 - Ran test case 'a': '/bin/echo hello': OK
# hello
# Running test case 'b': '/bin/echo hello'
ok 2 - Ran test case 'b': '/bin/echo hello': OK
# hello
# Running test case 'c': '/bin/echo hello'
ok 3 - Ran test case 'c': '/bin/echo hello': OK
# hello
# Running test case 'A': '/bin/echo hello'
ok 4 - Ran test case 'A': '/bin/echo hello': OK
# hello
# Running test case 'B': '/bin/echo hello'
ok 5 - Ran test case 'B': '/bin/echo hello': OK
# hello
# Running test case 'C': '/bin/echo hello'
ok 6 - Ran test case 'C': '/bin/echo hello': OK
# hello
# Running test case 'X': '/bin/echo hello'
ok 7 - Ran test case 'X': '/bin/echo hello': OK
# hello
# Running test case 'y': '/bin/echo hello'
ok 8 - Ran test case 'y': '/bin/echo hello': OK
# hello
# Running test case 'Z': '/bin/echo hello'
ok 9 - Ran test case 'Z': '/bin/echo hello': OK
# hello
1..9
ok
t/run.t .............................. 
1..268
ok 1
ok 2 - alt_casing_filter didn't pass undef (EOF) through
ok 3 - alt_casing_filter didn't return 0 (please try again) when given a 0
ok 4 - alt_casing_filter didn't return 0 (please try again) when given a second 0
ok 5 - alt_casing_filter didn't return undef (EOF) after two 0s and an undef
ok 6 - alt_casing_filter didn't consume it's input
ok 7 - alt_casing_filter didn't return undef (EOF), tried  100 times
ok 8 - alt_casing_filter
ok 9
ok 10
ok 11 - case_inverting_filter didn't pass undef (EOF) through
ok 12 - case_inverting_filter didn't return 0 (please try again) when given a 0
ok 13 - case_inverting_filter didn't return 0 (please try again) when given a second 0
ok 14 - case_inverting_filter didn't return undef (EOF) after two 0s and an undef
ok 15 - case_inverting_filter didn't consume it's input
ok 16 - case_inverting_filter didn't return undef (EOF), tried  100 times
ok 17 - case_inverting_filter
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46 - eok at t/run.t line 259
ok 47
ok 48
ok 49
ok 50 - eok at t/run.t line 268
ok 51
ok 52
ok 53
ok 54 - eok at t/run.t line 280
ok 55 - eok at t/run.t line 281
ok 56 - eok at t/run.t line 282
ok 57
ok 58
ok 59
ok 60 - eok at t/run.t line 297
ok 61 - eok at t/run.t line 298
ok 62 - eok at t/run.t line 299
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73 - eok at t/run.t line 378
ok 74 - eok at t/run.t line 379
ok 75 - eok at t/run.t line 380
ok 76
ok 77
ok 78
ok 79 - eok at t/run.t line 397
ok 80 - eok at t/run.t line 398
ok 81
ok 82
ok 83
ok 84 - eok at t/run.t line 412
ok 85 - eok at t/run.t line 413
ok 86
ok 87
ok 88
ok 89 - eok at t/run.t line 431
ok 90 - eok at t/run.t line 432
ok 91
ok 92
ok 93
ok 94 - eok at t/run.t line 450
ok 95 - eok at t/run.t line 451
ok 96
ok 97
ok 98
ok 99 - eok at t/run.t line 469
ok 100 - eok at t/run.t line 470
ok 101
ok 102
ok 103
ok 104 - eok at t/run.t line 494
ok 105 - eok at t/run.t line 495
ok 106
ok 107
ok 108
ok 109 - eok at t/run.t line 513
ok 110 - eok at t/run.t line 514
ok 111
ok 112
ok 113
ok 114 - eok at t/run.t line 533
ok 115 - eok at t/run.t line 534
ok 116
ok 117
ok 118
ok 119 - eok at t/run.t line 553
ok 120 - eok at t/run.t line 554
ok 121
ok 122
ok 123
ok 124 - eok at t/run.t line 578
ok 125 - eok at t/run.t line 579
ok 126
ok 127
ok 128
ok 129 - eok at t/run.t line 598
ok 130 - eok at t/run.t line 599
ok 131 - eok at t/run.t line 600
ok 132
ok 133
ok 134
ok 135 - eok at t/run.t line 621
ok 136
ok 137
ok 138
ok 139
ok 140
ok 141
ok 142 - eok at t/run.t line 656
ok 143 - eok at t/run.t line 657
ok 144
ok 145
ok 146
ok 147 - eok at t/run.t line 678
ok 148 - eok at t/run.t line 679
ok 149
ok 150
ok 151
ok 152 - eok at t/run.t line 700
ok 153 - eok at t/run.t line 701
ok 154
ok 155
ok 156
ok 157
ok 158 - eok at t/run.t line 713
ok 159
ok 160
ok 161
ok 162
ok 163
ok 164
ok 165
ok 166
ok 167
ok 168
ok 169
ok 170
ok 171
ok 172 - eok at t/run.t line 773
ok 173 - eok at t/run.t line 774
ok 174
ok 175
ok 176
ok 177 - eok at t/run.t line 793
ok 178 - eok at t/run.t line 794
ok 179
ok 180
ok 181
ok 182
ok 183
ok 184
ok 185
ok 186
ok 187
ok 188
ok 189
ok 190
ok 191
ok 192
ok 193
ok 194
ok 195
ok 196
ok 197
ok 198
ok 199
ok 200 - eok at t/run.t line 840
ok 201 - eok at t/run.t line 841
ok 202
ok 203
ok 204
ok 205
ok 206
ok 207
ok 208 - An object of class 'IPC::Run' isa 'IPC::Run'
ok 209
ok 210 - eok at t/run.t line 870
ok 211 - eok at t/run.t line 871
ok 212 - eok at t/run.t line 872
ok 213
ok 214 - after pump_nb
ok 215 - eok at t/run.t line 879
ok 216 - eok at t/run.t line 880
ok 217 - eok at t/run.t line 881
ok 218
ok 219 - after pump
ok 220
ok 221 - eok at t/run.t line 889
ok 222 - eok at t/run.t line 890
ok 223
ok 224
ok 225
ok 226
ok 227 - eok at t/run.t line 896
ok 228 - eok at t/run.t line 897
ok 229
ok 230
ok 231 - eok at t/run.t line 913
ok 232 - eok at t/run.t line 914
ok 233 - eok at t/run.t line 915
ok 234
ok 235
ok 236
ok 237
ok 238 - eok at t/run.t line 922
ok 239 - eok at t/run.t line 923
ok 240 - eok at t/run.t line 924
ok 241
ok 242
ok 243
ok 244
ok 245 - eok at t/run.t line 933
ok 246 - eok at t/run.t line 934
ok 247 - eok at t/run.t line 935
ok 248
ok 249
ok 250
ok 251
ok 252 - eok at t/run.t line 944
ok 253 - eok at t/run.t line 945
ok 254 - eok at t/run.t line 946
ok 255
ok 256
ok 257
ok 258
ok 259 - eok at t/run.t line 967
ok 260 - eok at t/run.t line 968
ok 261
ok 262
ok 263
ok 264 - eok at t/run.t line 990
ok 265 - eok at t/run.t line 991
ok 266 - eok at t/run.t line 992
ok 267 - Error running bogus program when path is empty
ok 268 - No warnings found during program call with empty path
ok
t/run_stdin-callback-return-array.t .. 
1..9
ok 1 - no callback
ok 2 - undef
ok 3 - empty string
ok 4 - empty array
ok 5 - package scalar
ok 6 - lexical scalar
ok 7 - block lexical array
ok 8 - package array
ok 9 - lexical array
ok
t/signal.t ........................... 
1..3
ok 1
ok 2 - USR2
# USR1
# USR2
# USR1
# 
ok 3
ok
t/timeout.t .......................... 
1..26
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26 - not too slow to reap
ok
t/timer.t ............................ 
1..77
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9 - Infinity timer.
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46
ok 47
ok 48
ok 49
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77 - timer firing in run()
ok
t/utf8.t ............................. 
1..4
ok 1 - Encode::decode_utf8() does not lvalue our bytes string var
ok 2 - byte string and unicode string same string as far as humans are concerned
ok 3 - run() w/ byte string
ok 4 - run() w/ unicode string
ok
t/windows_search_path.t .............. 
1..11
ok 1 - We're win32 mode?
ok 2 - No error calling _search_path for './temp'
ok 3 - Executable ./temp.EXE found
ok 4 - No error calling _search_path for '.\temp'
ok 5 - Executable .\temp.EXE found
ok 6 - No error calling _search_path for './5.11.5/temp'
ok 7 - Executable ./5.11.5/temp.EXE found
ok 8 - No error calling _search_path for './5.11.5/temp'
ok 9 - Executable ./5.11.5/temp.BAT found
ok 10 - No error calling _search_path for './5.11.5/temp'
ok 11 - Executable ./5.11.5/temp.COM found
ok
All tests successful.
Files=24, Tests=721, 61 wallclock secs ( 1.64 usr  0.68 sys + 36.90 cusr 12.53 csys = 51.75 CPU)
Result: PASS
