t/01_init.t ................... 
1..2
ok 1 - use Archive::Zip;
ok 2 - use Archive::Zip::MemberRead;
# Calling "unzip" resulted in:
# UnZip 6.00 of 20 April 2009, by Debian. Original by Info-ZIP.
# 
# Usage: unzip [-Z] [-opts[modifiers]] file[.zip] [list] [-x xlist] [-d exdir]
#   Default action is to extract files in list, except those in xlist, to exdir;
#   file[.zip] may be a wildcard.  -Z => ZipInfo mode ("unzip -Z" for usage).
# 
#   -p  extract files to pipe, no messages     -l  list files (short format)
#   -f  freshen existing files, create none    -t  test compressed archive data
#   -u  update files, create if necessary      -z  display archive comment only
#   -v  list verbosely/show version info       -T  timestamp archive to latest
#   -x  exclude files that follow (in xlist)   -d  extract files into exdir
# modifiers:
#   -n  never overwrite existing files         -q  quiet mode (-qq => quieter)
#   -o  overwrite files WITHOUT prompting      -a  auto-convert any text files
#   -j  junk paths (do not make directories)   -aa treat ALL files as text
#   -U  use escapes for all non-ASCII Unicode  -UU ignore any Unicode fields
#   -C  match filenames case-insensitively     -L  make (some) names lowercase
#   -X  restore UID/GID info                   -V  retain VMS version numbers
#   -K  keep setuid/setgid/tacky permissions   -M  pipe through "more" pager
#   -O CHARSET  specify a character encoding for DOS, Windows and OS/2 archives
#   -I CHARSET  specify a character encoding for UNIX and other archives
# 
# See "unzip -hh" or unzip.txt for more help.  Examples:
#   unzip data1 -x joe   => extract all files except joe from zipfile data1.zip
#   unzip -p foo | more  => send contents of foo.zip via pipe into program more
#   unzip -fo foo ReadMe => quietly replace existing ReadMe if archive file newer
# Exit value 0
ok
t/02_main.t ................... 
ok 1 - Testing CRC matches expected
ok 2 - Got expected _unixToDosTime error
ok 3 - Got expected DOS DateTime value
ok 4 - Got expected DOS DateTime value
ok 5 - Got expected DOS DateTime value
ok 6 - Got expected DOS DateTime value
ok 7 - Got expected DOS DateTime value
ok 8 - Got expected DOS DateTime value
ok 9 - Got expected DOS DateTime value
ok 10 - Got expected DOS DateTime value
ok 11 - Got expected DOS DateTime value
ok 12 - Got expected DOS DateTime value
ok 13 - Got expected DOS DateTime value
ok 14 - Got expected DOS DateTime value
ok 15 - Got expected DOS DateTime value
ok 16 - Got expected DOS DateTime value
ok 17 - Got expected DOS DateTime value
ok 18 - Got expected DOS DateTime value
ok 19 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 20 - ->members is 0
ok 21 - ->numberofMembers is 0
ok 22 - ->writeToFileNamed ok
# Non-zero exit value on reference
# "unzip -t" returned non-zero exit value 256 on file "t/data/emptyzip.zip"
# (which might be entirely OK on your operating system) and resulted in the
# following output:
# Archive:  t/data/emptyzip.zip
# warning [t/data/emptyzip.zip]:  zipfile is empty
ok 23
# Non-zero exit value
# "unzip -t" returned non-zero exit value 256 on file "/tmp/testout-wanir.zip"
# (which might be entirely OK on your operating system) and resulted in the
# following output:
# Archive:  /tmp/testout-wanir.zip
# warning [/tmp/testout-wanir.zip]:  zipfile is empty
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46
ok 47
ok 48 - old compression method OK
ok 49 - writeToFileNamed returns AZ_OK
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77
ok 78
ok 79
ok 80
ok 81
ok 82
ok 83
ok 84 - write and test zip file - open piped handle
ok 85 - write and test zip file - write piped
ok 86 - write and test zip file - close piped handle
ok 87 - write and test zip file - test write piped
ok 88 - write and test zip file - write plain
ok 89 - write and test zip file - test write plain
ok 90
ok 91
ok 92
ok 93
ok 94 - write and test zip file - open piped handle
ok 95 - write and test zip file - write piped
ok 96 - write and test zip file - close piped handle
ok 97 - write and test zip file - test write piped
ok 98 - write and test zip file - write plain
ok 99 - write and test zip file - test write plain
ok 100
ok 101
ok 102
ok 103
ok 104
ok 105 - write and test zip file - open piped handle
ok 106 - write and test zip file - write piped
ok 107 - write and test zip file - close piped handle
ok 108 - write and test zip file - test write piped
ok 109 - write and test zip file - write plain
ok 110 - write and test zip file - test write plain
ok 111
ok 112
ok 113
ok 114
ok 115
ok 116
ok 117
ok 118
ok 119 - write and test zip file - open piped handle
ok 120 - write and test zip file - write piped
ok 121 - write and test zip file - close piped handle
ok 122 - write and test zip file - test write piped
ok 123 - write and test zip file - write plain
ok 124 - write and test zip file - test write plain
ok 125
ok 126
ok 127
ok 128
ok 129 - write and test zip file - open piped handle
ok 130 - write and test zip file - write piped
ok 131 - write and test zip file - close piped handle
ok 132 - write and test zip file - test write piped
ok 133 - write and test zip file - write plain
ok 134 - write and test zip file - test write plain
ok 135
ok 136
ok 137
ok 138
ok 139
ok 140
ok 141
ok 142
ok 143
ok 144
ok 145
ok 146
ok 147
ok 148
ok 149 - Pipe open
ok 150 - Write zip to file handle
ok 151 - Pipe close
ok 152
ok 153
ok 154
ok 155 - write and test zip file - open piped handle
ok 156 - write and test zip file - write piped
ok 157 - write and test zip file - close piped handle
ok 158 - write and test zip file - test write piped
ok 159 - write and test zip file - write plain
ok 160 - write and test zip file - test write plain
ok 161
ok 162
ok 163 - write and test zip file - open piped handle
ok 164 - write and test zip file - write piped
ok 165 - write and test zip file - close piped handle
ok 166 - write and test zip file - test write piped
ok 167 - write and test zip file - write plain
ok 168 - write and test zip file - test write plain
ok 169
ok 170
ok 171 - write and test zip file - open piped handle
ok 172 - write and test zip file - write piped
ok 173 - write and test zip file - close piped handle
ok 174 - write and test zip file - test write piped
ok 175 - write and test zip file - write plain
ok 176 - write and test zip file - test write plain
ok 177 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 178 - ->members is 0
ok 179 - ->numberofMembers is 0
ok 180 - ->writeToFileNamed ok
ok 181
# Non-zero exit value
# "unzip -t" returned non-zero exit value 256 on file "/tmp/testout-wanir.zip"
# (which might be entirely OK on your operating system) and resulted in the
# following output:
# Archive:  /tmp/testout-wanir.zip
# warning [/tmp/testout-wanir.zip]:  zipfile is empty
ok 182
ok 183
ok 184
ok 185
ok 186
ok 187
ok 188
ok 189
ok 190
ok 191
ok 192
ok 193
ok 194
ok 195
ok 196
ok 197
ok 198
ok 199
ok 200
ok 201
ok 202
ok 203
ok 204
ok 205
ok 206 - old compression method OK
ok 207 - writeToFileNamed returns AZ_OK
ok 208
ok 209
ok 210
ok 211
ok 212
ok 213
ok 214
ok 215
ok 216
ok 217
ok 218
ok 219
ok 220
ok 221
ok 222
ok 223
ok 224
ok 225
ok 226
ok 227
ok 228
ok 229
ok 230
ok 231
ok 232
ok 233
ok 234
ok 235
ok 236
ok 237
ok 238
ok 239
ok 240
ok 241
ok 242 - write and test zip file - open piped handle
ok 243 - write and test zip file - write piped
ok 244 - write and test zip file - close piped handle
ok 245 - write and test zip file - test write piped
ok 246 - write and test zip file - write plain
ok 247 - write and test zip file - test write plain
ok 248
ok 249
ok 250
ok 251
ok 252 - write and test zip file - open piped handle
ok 253 - write and test zip file - write piped
ok 254 - write and test zip file - close piped handle
ok 255 - write and test zip file - test write piped
ok 256 - write and test zip file - write plain
ok 257 - write and test zip file - test write plain
ok 258
ok 259
ok 260
ok 261
ok 262
ok 263 - write and test zip file - open piped handle
ok 264 - write and test zip file - write piped
ok 265 - write and test zip file - close piped handle
ok 266 - write and test zip file - test write piped
ok 267 - write and test zip file - write plain
ok 268 - write and test zip file - test write plain
ok 269
ok 270
ok 271
ok 272
ok 273
ok 274
ok 275
ok 276
ok 277 - write and test zip file - open piped handle
ok 278 - write and test zip file - write piped
ok 279 - write and test zip file - close piped handle
ok 280 - write and test zip file - test write piped
ok 281 - write and test zip file - write plain
ok 282 - write and test zip file - test write plain
ok 283
ok 284
ok 285
ok 286
ok 287 - write and test zip file - open piped handle
ok 288 - write and test zip file - write piped
ok 289 - write and test zip file - close piped handle
ok 290 - write and test zip file - test write piped
ok 291 - write and test zip file - write plain
ok 292 - write and test zip file - test write plain
ok 293
ok 294
ok 295
ok 296
ok 297
ok 298
ok 299
ok 300
ok 301
ok 302
ok 303
ok 304
ok 305
ok 306
ok 307 - Pipe open
ok 308 - Write zip to file handle
ok 309 - Pipe close
ok 310
ok 311
ok 312
ok 313 - write and test zip file - open piped handle
ok 314 - write and test zip file - write piped
ok 315 - write and test zip file - close piped handle
ok 316 - write and test zip file - test write piped
ok 317 - write and test zip file - write plain
ok 318 - write and test zip file - test write plain
ok 319
ok 320
ok 321 - write and test zip file - open piped handle
ok 322 - write and test zip file - write piped
ok 323 - write and test zip file - close piped handle
ok 324 - write and test zip file - test write piped
ok 325 - write and test zip file - write plain
ok 326 - write and test zip file - test write plain
ok 327
ok 328
ok 329 - write and test zip file - open piped handle
ok 330 - write and test zip file - write piped
ok 331 - write and test zip file - close piped handle
ok 332 - write and test zip file - test write piped
ok 333 - write and test zip file - write plain
ok 334 - write and test zip file - test write plain
ok 335 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 336 - ->members is 0
ok 337 - ->numberofMembers is 0
ok 338 - ->writeToFileNamed ok
ok 339
# Non-zero exit value
# "unzip -t" returned non-zero exit value 256 on file "/tmp/testout-wanir.zip"
# (which might be entirely OK on your operating system) and resulted in the
# following output:
# Archive:  /tmp/testout-wanir.zip
# warning [/tmp/testout-wanir.zip]:  zipfile is empty
ok 340
ok 341
ok 342
ok 343
ok 344
ok 345
ok 346
ok 347
ok 348
ok 349
ok 350
ok 351
ok 352
ok 353
ok 354
ok 355
ok 356
ok 357
ok 358
ok 359
ok 360
ok 361
ok 362
ok 363
ok 364 - old compression method OK
ok 365 - writeToFileNamed returns AZ_OK
ok 366
ok 367
ok 368
ok 369
ok 370
ok 371
ok 372
ok 373
ok 374
ok 375
ok 376
ok 377
ok 378
ok 379
ok 380
ok 381
ok 382
ok 383
ok 384
ok 385
ok 386
ok 387
ok 388
ok 389
ok 390
ok 391
ok 392
ok 393
ok 394
ok 395
ok 396
ok 397
ok 398
ok 399
ok 400 - write and test zip file - open piped handle
ok 401 - write and test zip file - write piped
ok 402 - write and test zip file - close piped handle
ok 403 - write and test zip file - test write piped
ok 404 - write and test zip file - write plain
ok 405 - write and test zip file - test write plain
ok 406
ok 407
ok 408
ok 409
ok 410 - write and test zip file - open piped handle
ok 411 - write and test zip file - write piped
ok 412 - write and test zip file - close piped handle
ok 413 - write and test zip file - test write piped
ok 414 - write and test zip file - write plain
ok 415 - write and test zip file - test write plain
ok 416
ok 417
ok 418
ok 419
ok 420
ok 421 - write and test zip file - open piped handle
ok 422 - write and test zip file - write piped
ok 423 - write and test zip file - close piped handle
ok 424 - write and test zip file - test write piped
ok 425 - write and test zip file - write plain
ok 426 - write and test zip file - test write plain
ok 427
ok 428
ok 429
ok 430
ok 431
ok 432
ok 433
ok 434
ok 435 - write and test zip file - open piped handle
ok 436 - write and test zip file - write piped
ok 437 - write and test zip file - close piped handle
ok 438 - write and test zip file - test write piped
ok 439 - write and test zip file - write plain
ok 440 - write and test zip file - test write plain
ok 441
ok 442
ok 443
ok 444
ok 445 - write and test zip file - open piped handle
ok 446 - write and test zip file - write piped
ok 447 - write and test zip file - close piped handle
ok 448 - write and test zip file - test write piped
ok 449 - write and test zip file - write plain
ok 450 - write and test zip file - test write plain
ok 451
ok 452
ok 453
ok 454
ok 455
ok 456
ok 457
ok 458
ok 459
ok 460
ok 461
ok 462
ok 463
ok 464
ok 465 - Pipe open
ok 466 - Write zip to file handle
ok 467 - Pipe close
ok 468
ok 469
ok 470
ok 471 - write and test zip file - open piped handle
ok 472 - write and test zip file - write piped
ok 473 - write and test zip file - close piped handle
ok 474 - write and test zip file - test write piped
ok 475 - write and test zip file - write plain
ok 476 - write and test zip file - test write plain
ok 477
ok 478
ok 479 - write and test zip file - open piped handle
ok 480 - write and test zip file - write piped
ok 481 - write and test zip file - close piped handle
ok 482 - write and test zip file - test write piped
ok 483 - write and test zip file - write plain
ok 484 - write and test zip file - test write plain
ok 485
ok 486
ok 487 - write and test zip file - open piped handle
ok 488 - write and test zip file - write piped
ok 489 - write and test zip file - close piped handle
ok 490 - write and test zip file - test write piped
ok 491 - write and test zip file - write plain
ok 492 - write and test zip file - test write plain
ok 493
ok 494
ok 495
ok 496
ok 497
ok 498
ok 499
# Got (expected) status != AZ_OK
#   got status: 3
#     expected: 3
#   got errors: format error: invalid extra field (bad header ID or data size)
#     expected: (?^:invalid\ extra\ field\ \(bad\ header\ ID\ or\ data\ size\))
#  at /usr/share/perl5/Archive/Zip/Member.pm line 637.
# 	Archive::Zip::Member::_extractZip64ExtraField(Archive::Zip::StringMember=HASH(0x2af783d808), "\x{d}\x{0}", undef, undef) called at /usr/share/perl5/Archive/Zip/Member.pm line 442
# 	Archive::Zip::Member::cdExtraField(Archive::Zip::StringMember=HASH(0x2af783d808), "\x{d}\x{0}") called at t/02_main.t line 442
ok 500
ok 501
# Got (expected) status != AZ_OK
#   got status: 3
#     expected: 3
#   got errors: format error: invalid extra field (bad data)
#     expected: (?^:invalid\ extra\ field\ \(bad\ data\))
#  at /usr/share/perl5/Archive/Zip/Member.pm line 625.
# 	Archive::Zip::Member::_extractZip64ExtraField(Archive::Zip::StringMember=HASH(0x2af783d808), "\x{d}\x{0}\x{c}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}", undef, undef) called at /usr/share/perl5/Archive/Zip/Member.pm line 442
# 	Archive::Zip::Member::cdExtraField(Archive::Zip::StringMember=HASH(0x2af783d808), "\x{d}\x{0}\x{c}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}") called at t/02_main.t line 446
ok 502
ok 503
# Got (expected) status != AZ_OK
#   got status: 3
#     expected: 3
#   got errors: format error: invalid extra field (contains zip64 information)
#     expected: (?^:invalid\ extra\ field\ \(contains\ zip64\ information\))
#  at /usr/share/perl5/Archive/Zip/Member.pm line 448.
# 	Archive::Zip::Member::cdExtraField(Archive::Zip::StringMember=HASH(0x2af783d808), "\x{1}\x{0}\x{0}\x{0}") called at t/02_main.t line 453
ok 504
ok 505
ok 506
ok 507
ok 508
ok 509
ok 510
ok 511
# Got (expected) status != AZ_OK
#   got status: 3
#     expected: 3
#   got errors: format error: invalid extra field (bad header ID or data size)
#     expected: (?^:invalid\ extra\ field\ \(bad\ header\ ID\ or\ data\ size\))
#  at /usr/share/perl5/Archive/Zip/Member.pm line 637.
# 	Archive::Zip::Member::_extractZip64ExtraField(Archive::Zip::StringMember=HASH(0x2af7868ce0), "\x{d}\x{0}", undef, undef) called at /usr/share/perl5/Archive/Zip/Member.pm line 419
# 	Archive::Zip::Member::localExtraField(Archive::Zip::StringMember=HASH(0x2af7868ce0), "\x{d}\x{0}") called at t/02_main.t line 475
ok 512
ok 513
# Got (expected) status != AZ_OK
#   got status: 3
#     expected: 3
#   got errors: format error: invalid extra field (bad data)
#     expected: (?^:invalid\ extra\ field\ \(bad\ data\))
#  at /usr/share/perl5/Archive/Zip/Member.pm line 625.
# 	Archive::Zip::Member::_extractZip64ExtraField(Archive::Zip::StringMember=HASH(0x2af7868ce0), "\x{d}\x{0}\x{c}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}", undef, undef) called at /usr/share/perl5/Archive/Zip/Member.pm line 419
# 	Archive::Zip::Member::localExtraField(Archive::Zip::StringMember=HASH(0x2af7868ce0), "\x{d}\x{0}\x{c}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}\x{0}") called at t/02_main.t line 479
ok 514
ok 515
# Got (expected) status != AZ_OK
#   got status: 3
#     expected: 3
#   got errors: format error: invalid extra field (contains zip64 information)
#     expected: (?^:invalid\ extra\ field\ \(contains\ zip64\ information\))
#  at /usr/share/perl5/Archive/Zip/Member.pm line 425.
# 	Archive::Zip::Member::localExtraField(Archive::Zip::StringMember=HASH(0x2af7868ce0), "\x{1}\x{0}\x{0}\x{0}") called at t/02_main.t line 486
ok 516
ok 517
ok 518
ok 519
1..519
ok
t/03_ex.t ..................... 
1..18
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - An object of class 'Archive::Zip::StringMember' isa 'Archive::Zip::StringMember'
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
# $ZIP = bless( {
#   "centralDirectorySize" => 76,
#   "numberOfCentralDirectoriesOnThisDisk" => 1,
#   "writeCentralDirectoryOffset" => 0,
#   "desiredZip64Mode" => 0,
#   "zip64" => 0,
#   "eocdOffset" => 0,
#   "versionMadeBy" => 0,
#   "zipfileComment" => "",
#   "members" => [],
#   "numberOfCentralDirectories" => 1,
#   "fileName" => "",
#   "centralDirectoryOffsetWRTStartingDiskNumber" => 360,
#   "writeEOCDOffset" => 0,
#   "diskNumber" => 0,
#   "diskNumberWithStartOfCentralDirectory" => 0,
#   "versionNeededToExtract" => 0
# }, 'Archive::Zip::Archive' );
# 
# Found EOCD at 436 (0x1b4)
# 
# Found central directory for member #1 at 360
# $CDMEMBER1 = bless( {
#   "diskNumberStart" => 0,
#   "desiredCompressionMethod" => 0,
#   "localHeaderRelativeOffset" => 0,
#   "compressionMethod" => 0,
#   "versionNeededToExtract" => 20,
#   "compressedSize" => 300,
#   "dataOffset" => 0,
#   "desiredZip64Mode" => 0,
#   "localExtraField" => "",
#   "eocdCrc32" => 2889301810,
#   "fh" => $Archive::Zip::BufferedFileHandle,
#   "fileAttributeFormat" => 3,
#   "crc32" => 2889301810,
#   "internalFileAttributes" => 0,
#   "fileName" => "testdir/k80YhEn6q4/testing.txt",
#   "fileComment" => "",
#   "desiredCompressionLevel" => 0,
#   "bitFlag" => 0,
#   "uncompressedSize" => 300,
#   "possibleEocdOffset" => 0,
#   "externalFileAttributes" => 2176188416,
#   "password" => undef,
#   "lastModFileDateTime" => 1448103483,
#   "crc32c" => -1,
#   "externalFileName" => "(/tmp/testin-nAdQq.zip)",
#   "archiveZip64" => 0,
#   "versionMadeBy" => 20,
#   "zip64" => 0,
#   "cdExtraField" => ""
# }, 'Archive::Zip::ZipFileMember' );
# 
# 
# $LHMEMBER1 = bless( {
#   "diskNumberStart" => 0,
#   "desiredCompressionMethod" => 0,
#   "localHeaderRelativeOffset" => 0,
#   "compressionMethod" => 0,
#   "versionNeededToExtract" => 20,
#   "compressedSize" => 300,
#   "dataOffset" => 60,
#   "desiredZip64Mode" => 0,
#   "localExtraField" => "",
#   "eocdCrc32" => 2889301810,
#   "fh" => $Archive::Zip::BufferedFileHandle,
#   "fileAttributeFormat" => 3,
#   "crc32" => 2889301810,
#   "internalFileAttributes" => 0,
#   "fileName" => "testdir/k80YhEn6q4/testing.txt",
#   "fileComment" => "",
#   "desiredCompressionLevel" => 0,
#   "bitFlag" => 0,
#   "uncompressedSize" => 300,
#   "possibleEocdOffset" => 0,
#   "externalFileAttributes" => 2176188416,
#   "password" => undef,
#   "lastModFileDateTime" => 1448103483,
#   "crc32c" => -1,
#   "externalFileName" => "(/tmp/testin-nAdQq.zip)",
#   "archiveZip64" => 0,
#   "versionMadeBy" => 20,
#   "zip64" => 0,
#   "cdExtraField" => ""
# }, 'Archive::Zip::ZipFileMember' );
# 
# End of member: 304, CD at 360
# 
ok 9
#  Length    Size         Last Modified         CRC-32  Name
# -------- --------  ------------------------  -------- ----
#      300      300  Thu Feb 16 09:49:54 2023  ac373f32 testdir/k80YhEn6q4/testing.txt
# All CRCs check OK
ok 10
ok 11
ok 12
ok 13
ok 14 - testdir/k80YhEn6q4/testdir/k80YhEn6q4/testing.txt exists
ok 15 - updateTree.pl create
ok 16 - zip created
ok 17 - updateTree.pl update
ok 18 - zip updated
ok
t/04_readmember.t ............. 
1..10
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2
ok 3
ok 4 - Preserve line ending
ok 5 - Do not preserve line ending
ok 6
ok 7
ok 8
ok 9
ok 10
ok
t/05_tree.t ................... 
1..8
# file .
# file ./MANIFEST
# file ./MANIFEST.SKIP
# file ./examples
# file ./examples/writeScalar.pl
# file ./examples/zipGrep.pl
# file ./examples/mfh.pl
# file ./examples/zipinfo.pl
# file ./examples/ziprecent.pl
# file ./examples/zip.pl
# file ./examples/updateZip.pl
# file ./examples/updateTree.pl
# file ./examples/writeScalar2.pl
# file ./examples/selfex.pl
# file ./examples/extract.pl
# file ./examples/unzipAll.pl
# file ./examples/zipcheck.pl
# file ./examples/readScalar.pl
# file ./examples/copy.pl
# file ./examples/ziptest.pl
# file ./examples/mailZip.pl
# file ./examples/calcSizes.pl
# file ./blib
# file ./blib/arch
# file ./blib/lib
# file ./blib/lib/Debian
# file ./blib/lib/Debian/pkgperl
# file ./blib/lib/Debian/pkgperl/Foobar.pm
# file ./t
# file ./t/02_main.t
# file ./t/21_zip64.t
# file ./t/17_101092.t
# file ./t/19_bug_101240.t
# file ./t/20_bug_github11.t
# file ./t/12_bug_47223.t
# file ./t/05_tree.t
# file ./t/06_update.t
# file ./t/14_leading_separator.t
# file ./t/10_chmod.t
# file ./t/11_explorer.t
# file ./t/16_decrypt.t
# file ./t/04_readmember.t
# file ./t/07_filenames_of_0.t
# file ./t/23_closed_handle.t
# file ./t/26_bzip2.t
# file ./t/24_unicode_win32.t
# file ./t/09_output_record_sep.t
# file ./t/common.pm
# file ./t/03_ex.t
# file ./t/28_zip64_unsupported.t
# file ./t/25_traversal.t
# file ./t/13_bug_46303.t
# file ./t/README.md
# file ./t/15_decrypt.t
# file ./t/01_init.t
# file ./t/22_deflated_dir.t
# file ./t/08_readmember_record_sep.t
# file ./t/27_symlinks.t
# file ./t/18_bug_92205.t
# file ./t/data
# file ./t/data/zip64-azeocd.zip
# file ./t/data/emptystorestr.zip
# file ./t/data/perl.zip
# file ./t/data/storestr.zip
# file ./t/data/zip64.zip
# file ./t/data/bad_github11.zip
# file ./t/data/streamed.zip
# file ./t/data/emptyzip.zip
# file ./t/data/dotdot-from-unexistant-path.zip
# file ./t/data/linux.zip
# file ./t/data/empty.zip
# file ./t/data/link-samename.zip
# file ./t/data/expected.jpg
# file ./t/data/emptydefstr.zip
# file ./t/data/emptystore.zip
# file ./t/data/good_github11.zip
# file ./t/data/store.zip
# file ./t/data/winzip.zip
# file ./t/data/chmod.zip
# file ./t/data/zip64-iocz.zip
# file ./t/data/link-dir.zip
# file ./t/data/emptydef.zip
# file ./t/data/def.zip
# file ./t/data/simple.zip
# file ./t/data/crypt.zip
# file ./t/data/jar.zip
# file ./t/data/crypcomp.zip
# file ./t/data/zip64-azheaders.zip
# file ./t/data/defstr.zip
# file ./t/data/symlink.zip
# file ./t/data/zip64-infozip.zip
# file ./t/data/bzip.zip
# file ./t/data/mkzip.pl
# file ./testdir
# file ./testdir/fy_pjtEPKe
# file ./lib
# file ./lib/Debian
# file ./lib/Debian/pkgperl
# file ./lib/Debian/pkgperl/Foobar.pm
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok
t/06_update.t ................. 
1..16
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2
ok 3
ok 4 - not enough files to test
ok 5
ok 6 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 7 - initial updateTree failed
ok 8 - wrong members after create
ok 9 - creating testdir/DEhgvkVoCc/data/xxxxxx failed
ok 10 - updateTree failed
ok 11 - wrong members after update
ok 12 - deleting testdir/DEhgvkVoCc/data/xxxxxx failed
ok 13 - updateTree failed
ok 14 - wrong members after update
ok 15 - updateTree failed
ok 16 - wrong members after mirror update
ok
t/07_filenames_of_0.t ......... 
1..14
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2
ok 3 - Checking that a file called '0' was added properly by addTree
ok 4 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 5 - An object of class 'Archive::Zip::StringMember' isa 'Archive::Zip::StringMember'
ok 6 - write and test zip file - open piped handle
ok 7 - write and test zip file - write piped
ok 8 - write and test zip file - close piped handle
ok 9 - write and test zip file - test write piped
ok 10 - write and test zip file - write plain
ok 11 - write and test zip file - test write plain
ok 12 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 13
ok 14 - Checking that a file called '0' was added properly by addString
ok
t/08_readmember_record_sep.t .. 
1..15
ok 1 - 'Testing that $zip is an Archive::Zip' isa 'Archive::Zip'
ok 2 - An object of class 'Archive::Zip::StringMember' isa 'Archive::Zip::Member'
ok 3
ok 4 - Filehandle is valid
ok 5 - Testing the first line in a normal read.
ok 6 - Testing the second line in a normal read.
ok 7 - Filehandle is valid
ok 8 - Testing the first "line" when $/ is set.
ok 9 - Testing the second "line" when $/ is set.
ok 10 - Filehandle is valid
ok 11 - Testing the first line when input_record_separator is set.
ok 12 - Testing the second line when input_record_separator is set.
ok 13 - Filehandle is valid
ok 14 - Testing the first "line" in a both set read
ok 15 - Testing the second "line" in a both set read.
ok
t/09_output_record_sep.t ...... 
1..16
ok 1 - $\ is unset - Content of file after extraction
ok 2 - $\ is unset - open piped handle
ok 3 - $\ is unset - write piped
ok 4 - $\ is unset - close piped handle
ok 5 - $\ is unset - test write piped
ok 6 - $\ is unset - write plain
ok 7 - $\ is unset - test write plain
ok 8 - $\ is unset - Read back the file from the archive
ok 9 - $\ is \n - Content of file after extraction
ok 10 - $\ is \n - open piped handle
ok 11 - $\ is \n - write piped
ok 12 - $\ is \n - close piped handle
ok 13 - $\ is \n - test write piped
ok 14 - $\ is \n - write plain
ok 15 - $\ is \n - test write plain
ok 16 - $\ is \n - Read back the file from the archive
ok
t/10_chmod.t .................. 
1..4
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2
ok 3
ok 4 - File permission is OK.
ok
t/11_explorer.t ............... 
1..4
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - Created a member
ok 3 - ->fileName ok
ok 4 - Directory has directory bit set as expected by Windows Explorer
ok
t/12_bug_47223.t .............. skipped: Only required on Win32.
t/13_bug_46303.t .............. 
1..4
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - Read file
ok 3 - Extracted archive
ok 4 - Checked directory
ok
t/14_leading_separator.t ...... 
1..3
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - An object of class 'Archive::Zip::NewFileMember' isa 'Archive::Zip::FileMember'
ok 3 - no leading separator
ok
t/15_decrypt.t ................ 
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - Read file
ok 3 - get memberNames
ok 4 - memberNames
ok 5 - find member
ok 6 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::Member'
ok 7 - set password
ok 8 - get password
ok 9 - Decoded buffer
ok 10 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 11 - Read file
ok 12 - get memberNames
ok 13 - memberNames
ok 14 - find member
ok 15 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::Member'
ok 16 - set password
ok 17 - get password
ok 18 - Decoded buffer
1..18
ok
t/16_decrypt.t ................ 
1..8
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - read file
ok 3 - get memberNames
ok 4 - memberNames
ok 5 - find member
ok 6 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::Member'
ok 7 - correct password
ok 8 - decoded buffer
ok
t/17_101092.t ................. 
1..2
ok 1
ok 2
ok
t/18_bug_92205.t .............. 
1..32
ok 1 - "unzip -t" ok after t/data/emptydef.zip to /tmp/testout-65QnL.zip
ok 2 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 3 - "unzip -t" ok after t/data/emptydefstr.zip to /tmp/testout-65QnL.zip
ok 4 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 5 - "unzip -t" ok after t/data/emptystore.zip to /tmp/testout-65QnL.zip
ok 6 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 7 - "unzip -t" ok after t/data/emptystorestr.zip to /tmp/testout-65QnL.zip
ok 8 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 9 - "unzip -t" ok after t/data/emptydef.zip to /tmp/testout-65QnL.zip
ok 10 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 11 - "unzip -t" ok after t/data/emptydefstr.zip to /tmp/testout-65QnL.zip
ok 12 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 13 - "unzip -t" ok after t/data/emptystore.zip to /tmp/testout-65QnL.zip
ok 14 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 15 - "unzip -t" ok after t/data/emptystorestr.zip to /tmp/testout-65QnL.zip
ok 16 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 17 - "unzip -t" ok after t/data/emptydef.zip to /tmp/testout-65QnL.zip
ok 18 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 19 - "unzip -t" ok after t/data/emptydefstr.zip to /tmp/testout-65QnL.zip
ok 20 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 21 - "unzip -t" ok after t/data/emptystore.zip to /tmp/testout-65QnL.zip
ok 22 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 23 - "unzip -t" ok after t/data/emptystorestr.zip to /tmp/testout-65QnL.zip
ok 24 - /tmp/testout-65QnL.zip eq t/data/emptystore.zip
ok 25 - "unzip -t" ok after t/data/def.zip to /tmp/testout-65QnL.zip
ok 26 - /tmp/testout-65QnL.zip eq t/data/def.zip
ok 27 - "unzip -t" ok after t/data/defstr.zip to /tmp/testout-65QnL.zip
ok 28 - /tmp/testout-65QnL.zip eq t/data/defstr.zip
ok 29 - "unzip -t" ok after t/data/store.zip to /tmp/testout-65QnL.zip
ok 30 - /tmp/testout-65QnL.zip eq t/data/store.zip
ok 31 - "unzip -t" ok after t/data/storestr.zip to /tmp/testout-65QnL.zip
ok 32 - /tmp/testout-65QnL.zip eq t/data/storestr.zip
ok
t/19_bug_101240.t ............. 
1..7
ok 1
ok 2
ok 3 - [UNICODE=0] output file exists
ok 4 - [UNICODE=0] output file is empty
ok 5
ok 6 - [UNICODE=1] output file exists
ok 7 - [UNICODE=1] output file is empty
ok
t/20_bug_github11.t ........... 
1..2
ok 1 - Testing known good zip
ok 2 - Testing known bad zip
ok
t/21_zip64.t .................. 
1..86
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - Archive t/data/zip64.zip
ok 3 - Zip64 flag t/data/zip64.zip
ok 4 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::ZipFileMember'
ok 5 - Member zip64 flag t/data/zip64.zip
ok 6 - Member uncompressed size t/data/zip64.zip
ok 7 - Member compressed size t/data/zip64.zip
ok 8 - Zip64 extra field extraction
ok 9 - Zip64 extra field removal
ok 10
ok 11
ok 12 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 13 - Archive t/data/zip64-infozip.zip
ok 14 - Zip64 flag t/data/zip64-infozip.zip
ok 15 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::ZipFileMember'
ok 16 - Member zip64 flag t/data/zip64-infozip.zip
ok 17 - Member uncompressed size t/data/zip64-infozip.zip
ok 18 - Member compressed size t/data/zip64-infozip.zip
ok 19 - Zip64 extra field extraction
ok 20 - Zip64 extra field removal
ok 21
ok 22
ok 23 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 24 - Archive t/data/zip64-iocz.zip
ok 25 - Zip64 flag t/data/zip64-iocz.zip
ok 26 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::ZipFileMember'
ok 27 - Member zip64 flag t/data/zip64-iocz.zip
ok 28 - Member uncompressed size t/data/zip64-iocz.zip
ok 29 - Member compressed size t/data/zip64-iocz.zip
ok 30 - Zip64 extra field extraction
ok 31 - Zip64 extra field removal
ok 32
ok 33
ok 34 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 35 - Archive t/data/zip64-azeocd.zip
ok 36 - Zip64 flag t/data/zip64-azeocd.zip
ok 37 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::ZipFileMember'
ok 38 - Member zip64 flag t/data/zip64-azeocd.zip
ok 39 - Member uncompressed size t/data/zip64-azeocd.zip
ok 40 - Member compressed size t/data/zip64-azeocd.zip
ok 41 - Zip64 extra field extraction
ok 42 - Zip64 extra field removal
ok 43
ok 44
ok 45 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 46 - Archive t/data/zip64-azheaders.zip
ok 47 - Zip64 flag t/data/zip64-azheaders.zip
ok 48 - An object of class 'Archive::Zip::ZipFileMember' isa 'Archive::Zip::ZipFileMember'
ok 49 - Member zip64 flag t/data/zip64-azheaders.zip
ok 50 - Member uncompressed size t/data/zip64-azheaders.zip
ok 51 - Member compressed size t/data/zip64-azheaders.zip
ok 52 - Zip64 extra field extraction
ok 53 - Zip64 extra field removal
ok 54
ok 55
ok 56 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 57 - Zip64 flag archive (pre)
ok 58 - Desired zip64 mode (1)
ok 59 - Desired zip64 mode (2)
ok 60 - Member addition
ok 61 - Zip64 flag member (pre)
ok 62 - write and test zip file - open piped handle
ok 63 - write and test zip file - write piped
ok 64 - write and test zip file - close piped handle
ok 65 - write and test zip file - test write piped
ok 66 - write and test zip file - write plain
ok 67 - write and test zip file - test write plain
ok 68 - Zip64 flag archive (post)
ok 69 - Zip64 flag member (post)
ok 70 - Member addition
ok 71 - Zip64 flag member (pre)
ok 72 - Desired zip64 mode (1)
ok 73 - Desired zip64 mode (2)
ok 74 - write and test zip file - open piped handle
ok 75 - write and test zip file - write piped
ok 76 - write and test zip file - close piped handle
ok 77 - write and test zip file - test write piped
ok 78 - write and test zip file - write plain
ok 79 - write and test zip file - test write plain
ok 80 - Zip64 flag archive (post)
ok 81 - Member lookup
ok 82 - Zip64 flag member (post)
ok 83 - Member lookup
ok 84 - Zip64 flag member (post)
ok 85 - Zip64 format error
# Got (expected) status != AZ_OK
#   got status: 3
#     expected: 3
#   got errors: format error: invalid zip64 extended information extra field
#     expected: (?^:invalid\ zip64\ extended\ information\ extra\ field)
#  at /usr/share/perl5/Archive/Zip/Member.pm line 710.
# 	Archive::Zip::Member::_extractZip64ExtraField("Archive::Zip::Member", "\x{1}\x{0}\x{0}\x{0}", 4294967295, undef) called at t/21_zip64.t line 136
ok 86 - Zip64 format error
ok
t/22_deflated_dir.t ........... 
1..8
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - Read file
ok 3 - Wrote file - open piped handle
ok 4 - Wrote file - write piped
ok 5 - Wrote file - close piped handle
ok 6 - Wrote file - test write piped
ok 7 - Wrote file - write plain
ok 8 - Wrote file - test write plain
ok
t/23_closed_handle.t .......... 
1..2
ok 1 - One filehandle was created
ok 2 - Filehandle is closed
ok
t/24_unicode_win32.t .......... 
1..48
ok 1 - Checking that a file named with unicode chars was added properly by addTree - open piped handle
ok 2 - Checking that a file named with unicode chars was added properly by addTree - write piped
ok 3 - Checking that a file named with unicode chars was added properly by addTree - close piped handle
ok 4 - Checking that a file named with unicode chars was added properly by addTree - test write piped
ok 5 - Checking that a file named with unicode chars was added properly by addTree - write plain
ok 6 - Checking that a file named with unicode chars was added properly by addTree - test write plain
ok 7 - Checking that a file named with unicode chars was added properly by addTree - test read
ok 8 - Checking that a file named with unicode chars was added properly by addTree - test members
ok 9 - Checking that a file named with unicode chars was added properly by addString - open piped handle
ok 10 - Checking that a file named with unicode chars was added properly by addString - write piped
ok 11 - Checking that a file named with unicode chars was added properly by addString - close piped handle
ok 12 - Checking that a file named with unicode chars was added properly by addString - test write piped
ok 13 - Checking that a file named with unicode chars was added properly by addString - write plain
ok 14 - Checking that a file named with unicode chars was added properly by addString - test write plain
ok 15 - Checking that a file named with unicode chars was added properly by addString - test read
ok 16 - Checking that a file named with unicode chars was added properly by addString - test members
ok 17 - Checking that a file named with unicode chars was added properly by addFile - open piped handle
ok 18 - Checking that a file named with unicode chars was added properly by addFile - write piped
ok 19 - Checking that a file named with unicode chars was added properly by addFile - close piped handle
ok 20 - Checking that a file named with unicode chars was added properly by addFile - test write piped
ok 21 - Checking that a file named with unicode chars was added properly by addFile - write plain
ok 22 - Checking that a file named with unicode chars was added properly by addFile - test write plain
ok 23 - Checking that a file named with unicode chars was added properly by addFile - test read
ok 24 - Checking that a file named with unicode chars was added properly by addFile - test members
ok 25 - Checking that a file named with unicode chars was added properly by addDirectory - open piped handle
ok 26 - Checking that a file named with unicode chars was added properly by addDirectory - write piped
ok 27 - Checking that a file named with unicode chars was added properly by addDirectory - close piped handle
ok 28 - Checking that a file named with unicode chars was added properly by addDirectory - test write piped
ok 29 - Checking that a file named with unicode chars was added properly by addDirectory - write plain
ok 30 - Checking that a file named with unicode chars was added properly by addDirectory - test write plain
ok 31 - Checking that a file named with unicode chars was added properly by addDirectory - test read
ok 32 - Checking that a file named with unicode chars was added properly by addDirectory - test members
ok 33 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - open piped handle
ok 34 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - write piped
ok 35 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - close piped handle
ok 36 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - test write piped
ok 37 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - write plain
ok 38 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - test write plain
ok 39 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - test read
ok 40 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a direcotry - test members
ok 41 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - open piped handle
ok 42 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - write piped
ok 43 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - close piped handle
ok 44 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - test write piped
ok 45 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - write plain
ok 46 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - test write plain
ok 47 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - test read
ok 48 - Checking that a file named with unicode chars was added properly by addFileOrDirectory from a file - test members
ok
t/25_traversal.t .............. 
1..41
ok 1 - Working directory changed
ok 2 # skip Symbolic links are not supported
ok 3 # skip Symbolic links are not supported
ok 4 # skip Symbolic links are not supported
ok 5 # skip Symbolic links are not supported
ok 6 # skip Symbolic links are not supported
ok 7 # skip Symbolic links are not supported
ok 8 # skip Symbolic links are not supported
ok 9 # skip Symbolic links are not supported
ok 10 # skip Symbolic links are not supported
ok 11 # skip Symbolic links are not supported
ok 12 # skip Symbolic links are not supported
ok 13 # skip Symbolic links are not supported
ok 14 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 15 - Archive read
ok 16 - Tree extraction aborted
# Got (expected) status != AZ_OK
#   got status: 2
#     expected: 2
#   got errors: error: Could not extract /tmp/autopkgtest.W9cngJ/autopkgtest_tmp/smokeY8RMO5/testdir/3kgBv0igJy/unexisting/../../../../../tmp/gotcha-dotdot-unexistingpath safely: a parent directory is used
#     expected: (?^:Could not extract .* safely: a parent directory is used)
#  at /usr/share/perl5/Archive/Zip/Archive.pm line 1182.
# 	Archive::Zip::Archive::_extractionNameIsSafe("/tmp/autopkgtest.W9cngJ/autopkgtest_tmp/smokeY8RMO5/testdir/3"...) called at /usr/share/perl5/Archive/Zip/Archive.pm line 1235
# 	Archive::Zip::Archive::extractTree(Archive::Zip::Archive=HASH(0x2b04cdff98)) called at t/25_traversal.t line 103
# 	eval {...} called at t/25_traversal.t line 103
ok 17 - A file was not created in a parent directory
ok 18 - Member extraction without a local name aborted
# Got (expected) status != AZ_OK
#   got status: 2
#     expected: 2
#   got errors: error: Could not extract unexisting/../../../../../tmp/gotcha-dotdot-unexistingpath safely: a parent directory is used
#     expected: (?^:Could not extract .* safely: a parent directory is used)
#  at /usr/share/perl5/Archive/Zip/Archive.pm line 1182.
# 	Archive::Zip::Archive::_extractionNameIsSafe("unexisting/../../../../../tmp/gotcha-dotdot-unexistingpath") called at /usr/share/perl5/Archive/Zip/Archive.pm line 224
# 	Archive::Zip::Archive::extractMember(Archive::Zip::Archive=HASH(0x2b04cdff98), "unexisting/../../../../../tmp/gotcha-dotdot-unexistingpath") called at t/25_traversal.t line 116
# 	eval {...} called at t/25_traversal.t line 116
ok 19 - A file was not created in a parent directory
ok 20 - Directory created
ok 21 - Member extraction passed
ok 22 - File created
ok 23 - File removed
ok 24 # skip Symbolic links are not supported
ok 25 # skip Symbolic links are not supported
ok 26 # skip Symbolic links are not supported
ok 27 # skip Symbolic links are not supported
ok 28 # skip Symbolic links are not supported
ok 29 # skip Symbolic links are not supported
ok 30 # skip Symbolic links are not supported
ok 31 # skip Symbolic links are not supported
ok 32 # skip Symbolic links are not supported
ok 33 # skip Symbolic links are not supported
ok 34 # skip Symbolic links are not supported
ok 35 # skip Symbolic links are not supported
ok 36 # skip Symbolic links are not supported
ok 37 # skip Symbolic links are not supported
ok 38 # skip Symbolic links are not supported
ok 39 # skip Symbolic links are not supported
ok 40 # skip Symbolic links are not supported
ok 41 # skip Symbolic links are not supported
ok
t/26_bzip2.t .................. 
1..8
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2
ok 3 - write and test zip file - open piped handle
ok 4 - write and test zip file - write piped
ok 5 - write and test zip file - close piped handle
ok 6 - write and test zip file - test write piped
ok 7 - write and test zip file - write plain
ok 8 - write and test zip file - test write plain
ok
t/27_symlinks.t ............... 
1..16
ok 1 - An object of class 'Archive::Zip::Archive' isa 'Archive::Zip'
ok 2 - Archive read
ok 3 - 'Member found' isa 'Archive::Zip::Member'
ok 4 - Link extraction (1)
ok 5 - Link extraction failure (1)
# Got (expected) status != AZ_OK
#   got status: 4
#     expected: 4
#   got errors: IO error: creating symbolic link : File exists
#  at /usr/share/perl5/Archive/Zip/Member.pm line 1403.
# 	Archive::Zip::Member::_writeData(Archive::Zip::ZipFileMember=HASH(0x2aebd0d190), "testdir/2Be_XEnBFO/some/dir/symlink") called at /usr/share/perl5/Archive/Zip/Member.pm line 1322
# 	Archive::Zip::Member::extractToFileHandle(Archive::Zip::ZipFileMember=HASH(0x2aebd0d190), "testdir/2Be_XEnBFO/some/dir/symlink") called at /usr/share/perl5/Archive/Zip/Member.pm line 557
# 	Archive::Zip::Member::extractToFileNamed(Archive::Zip::ZipFileMember=HASH(0x2aebd0d190), "testdir/2Be_XEnBFO/some/dir/symlink") called at t/27_symlinks.t line 44
ok 6 - Symlink (1)
ok 7 - Symlink target (1)
ok 8 - Symlink cleanup (1)
ok 9 - Link extraction (2)
ok 10 - Link extraction failure (2)
# Got (expected) status != AZ_OK
#   got status: 4
#     expected: 4
#   got errors: IO error: creating symbolic link : File exists
#  at /usr/share/perl5/Archive/Zip/Member.pm line 1403.
# 	Archive::Zip::Member::_writeData(Archive::Zip::ZipFileMember=HASH(0x2aebd0d190), "testdir/2Be_XEnBFO/some/dir/symlink") called at /usr/share/perl5/Archive/Zip/Member.pm line 1322
# 	Archive::Zip::Member::extractToFileHandle(Archive::Zip::ZipFileMember=HASH(0x2aebd0d190), "testdir/2Be_XEnBFO/some/dir/symlink") called at t/27_symlinks.t line 52
ok 11 - Symlink (2)
ok 12 - Symlink target (2)
ok 13 - Symlink cleanup (2)
ok 14 - Tree extraction
ok 15 - Symlink (3)
ok 16 - Symlink target (3)
ok
t/28_zip64_unsupported.t ...... skipped: Zip64 format is supported.
All tests successful.
Files=28, Tests=911, 88 wallclock secs ( 1.78 usr  0.54 sys + 63.41 cusr 25.46 csys = 91.19 CPU)
Result: PASS
