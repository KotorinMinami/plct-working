t/00-report-prereqs.t ....... 
1..1
# 
# Versions for all modules listed in static metadata (including optional ones):
# 
# === Configure Requires ===
# 
#     Module              Want Have
#     ------------------- ---- ----
#     ExtUtils::MakeMaker  any 7.34
# 
# === Test Requires ===
# 
#     Module              Want     Have
#     ------------------- ---- --------
#     ExtUtils::MakeMaker  any     7.34
#     File::Spec           any     3.78
#     IO::Handle           any     1.40
#     IPC::Open3           any     1.20
#     Test::More           any 1.302162
# 
# === Test Recommends ===
# 
#     Module         Want     Have
#     ---------- -------- --------
#     CPAN::Meta 2.120900 2.150010
# 
ok 1
ok
t/adapter-import.t .......... 
1..1
ok 1 - stdout
ok
t/capture.t ................. 
1..12
ok 1 - main logged to arrayref
ok 2 - main logged flattened arguments
ok 3 - Foo logged to arrayref
ok 4 - main logged to coderef
ok 5 - Foo logged to coderef
ok 6 - main logged text-only to arrayref
ok 7 - main logged flattened arguments
ok 8 - Foo ->trace was ignored
ok 9 - main logged full data
ok 10 - main logged combined context
ok 11 - Foo logged full data
ok 12 - Foo logged combined context
ok
t/context.t ................. 
1..2
ok 1 - text log is correct
ok 2 - structured log is correct
ok
t/default-adapter-env.t ..... 
1..4
ok 1 - 'we have a proxy...' isa 'Log::Any::Proxy'
ok 2 - ...but it's not the null proxy
ok 3 - 'correct adapter set' isa 'Log::Any::Adapter::Test'
ok 4 - adapter got error string
ok
t/default-adapter-params.t .. 
1..1
ok 1 - log_level specified in default_adapter was applied
ok
t/default-adapter-use.t ..... 
1..3
ok 1 - 'we have a proxy...' isa 'Log::Any::Proxy'
ok 2 - ...but it's not the null proxy
ok 3 - Log captured on STDERR
ok
t/default-adapter.t ......... 
1..4
ok 1 - got error
ok 2 - got debug
ok 3 - got multi-line
ok 4 - log is empty
ok
t/default-vs-test.t ......... 
1..4
ok 1 - got error
ok 2 - got debug
ok 3 - got multi-line
ok 4 - log is empty
ok
t/errors-adapter.t .......... 
1..3
ok 1 - adapter = Blah
ok 2 - adapter = +My::Adapter::Blah
ok 3 - adapter = ''
ok
t/filescreen.t .............. 
1..33
ok 1 - file won't log debugs
ok 2 - file will log warnings
ok 3 - debug not logged to file
ok 4 - warn logged to file
ok 5 - warn logged UTF-8 to file
ok 6 - file will log trace lexically
ok 7 - log defaults to trace level
ok 8 - one warning issued
ok 9 - warning is correct
ok 10 - warn logged raw to file
ok 11 - got warning printing UTF-8 as raw
ok 12 - emergency log level file will log emergency
ok 13 - emergency log level file will not log alert
ok 14 - stdout won't log debugs
ok 15 - stdout will log warnings
ok 16 - debug not logged to stdout
ok 17 - warn logged to stdout
ok 18 - stdout will log trace lexically
ok 19 - log defaults to trace level
ok 20 - one warning issued
ok 21 - warning is correct
ok 22 - emergency log level file will log emergency
ok 23 - emergency log level file will not log alert
ok 24 - stderr won't log debugs
ok 25 - stderr will log warnings
ok 26 - debug not logged to stderr
ok 27 - warn logged to stderr
ok 28 - stderr will log trace lexically
ok 29 - log defaults to trace level
ok 30 - one warning issued
ok 31 - warning is correct
ok 32 - emergency log level file will log emergency
ok 33 - emergency log level file will not log alert
ok
t/import.t .................. 
1..2
ok 1 - logged correctly
ok 2 - logged correctly
ok
t/inner-adapter.t ........... 
1..2
ok 1 - setting inner package as adapter is OK
ok 2 - logged a message via inner adapter
ok
t/log-any-test.t ............ 
1..5
ok 1 - got error
ok 2 - got debug
ok 3 - got multi-line
ok 4 - log is empty
not ok 5 - this is TODO on purpose # TODO to do
#   Failed (TODO) test 'this is TODO on purpose'
#   at t/log-any-test.t line 21.
# could not find message matching (?^:should not be there)
# log contains no messages
ok
t/memory.t .................. 
1..37
ok 1 - memoization - no cat
ok 2 - memoization - cat
ok 3 - 'Foo::log before set' isa 'Log::Any::Adapter::Null'
ok 4 - 'Bar::log before set' isa 'Log::Any::Adapter::Null'
ok 5 - 'Baz::log before set' isa 'Log::Any::Adapter::Null'
ok 6 - 'main_log before set' isa 'Log::Any::Adapter::Null'
ok 7 - no consumer yet
ok 8 - 'Foo::log after first set' isa 'Log::Any::Adapter::Test'
ok 9 - 'Bar::log after first set' isa 'Log::Any::Adapter::Test'
ok 10 - 'Baz::log after first set' isa 'Log::Any::Adapter::Null'
ok 11 - 'main_log after first set' isa 'Log::Any::Adapter::Null'
ok 12 - consumer active
ok 13 - 'Foo::log after second set' isa 'Log::Any::Adapter::Test'
ok 14 - 'Bar::log after second set' isa 'Log::Any::Adapter::Test'
ok 15 - 'Baz::log after second set' isa 'Log::Any::Adapter::Test'
ok 16 - 'main_log after second set' isa 'Log::Any::Adapter::Test'
ok 17 - consumer active
ok 18 - Foo::log and Bar::log are different
ok 19 - memoization - no cat
ok 20 - memoization - cat
ok 21 - Foo::log has empty buffer
ok 22 - Bar::log has empty buffer
ok 23 - Bar::log has empty buffer
ok 24 - Foo::log and Bar::log are different objects
ok 25 - Foo log appeared in memory
ok 26 - Bar log appeared in memory
ok 27 - main log appeared in memory
ok 28 - 'Foo::log' isa 'Log::Any::Adapter::Null'
ok 29 - 'Bar::log' isa 'Log::Any::Adapter::Null'
ok 30 - 'Baz::log' isa 'Log::Any::Adapter::Test'
ok 31 - 'main_log' isa 'Log::Any::Adapter::Test'
ok 32 - 'Foo::log' isa 'Log::Any::Adapter::Null'
ok 33 - 'Bar::log' isa 'Log::Any::Adapter::Null'
ok 34 - 'Baz::log' isa 'Log::Any::Adapter::Null'
ok 35 - 'main_log' isa 'Log::Any::Adapter::Null'
ok 36 - 'Foo::log in lexical scope' isa 'Log::Any::Adapter::Test'
ok 37 - 'Foo::log outside lexical scope' isa 'Log::Any::Adapter::Null'
ok
t/multiplex.t ............... 
1..16
ok 1 - require Log::Any::Adapter::Multiplex;
ok 2 - adapters are required
ok 3 - adapters must be a hash
ok 4 - adapters must be a hash
ok 5 - adapters values must be arrays
ok 6 - Multiplex set up as expected
ok 7 - multiplex logging off for both destinations
ok 8 - multiplex logging on for one destination
ok 9 - multiplex logging on for other destination
ok 10 - multiplex logging on for both destinations
ok 11 - Arguments passed to structured adapter
ok 12 - Arguments passed to unstructured adapter
ok 13 - Passed appropriate structured args
ok 14 - Passed appropriate unstructured args
ok 15 - structured adapter not called when not logging
ok 16 - unstructured adapter not called when not logging
ok
t/null-proxy.t .............. 
1..14
ok 1 - 'no adapter proxy is Null' isa 'Log::Any::Proxy::Null'
ok 2 - 'no adapter proxy with formatter is Null' isa 'Log::Any::Proxy::Null'
ok 3 - 'explicit proxy class is correct' isa 'Log::Any::Proxy::Test'
ok 4 - output of test method is returned
ok 5 - 'no adapter proxy is still Null after logging' isa 'Log::Any::Proxy::Null'
ok 6 - output of test method is returned
ok 7 - 'no adapter proxy with formatter is still Null after logging' isa 'Log::Any::Proxy::Null'
ok 8 - 'existing logger reblessed' isa 'Log::Any::Proxy'
ok 9 - 'existing logger reblessed' isa 'Log::Any::Proxy'
ok 10 - 'explicit proxy class is not reblessed' isa 'Log::Any::Proxy::Test'
ok 11 - log is logged
ok 12 - output of test method is returned
ok 13 - proxy attributes are preserved
ok 14 - output of test method is returned
ok
t/proxy.t ................... 
1..18
ok 1 - prefix added
ok 2 - log message built is returned
ok 3 - arguments concatenated
ok 4 - log message built is returned
ok 5 - default formatter expands coderefs
ok 6 - log message built is returned
ok 7 - default formatter does not expand coderefs as sprintf args
ok 8 - log message built is returned
ok 9 - log contains '(?^:Einstein)'
ok 10 - no warning
ok 11 - filter has category and numeric level
ok 12 - log message run through filter is returned
ok 13 - formatter has category and numeric level
ok 14 - log message run through formatter is returned
ok 15 - category override
ok 16 - log message with category and run through filter is returned
ok 17 - clone keeps existing properties and allows override
ok 18 - log message is returned
ok
t/release-backcompat.t ...... skipped: these tests are for release candidate testing
t/replace_log.t ............. 
1..1
ok 1 - main log appeared in memory
ok
t/sprintf.t ................. 
1..1
ok 1 - message was formatted
ok
t/stringify.t ............... 
1..1
ok 1 - URI was correctly stringified
ok
t/structured-logging.t ...... 
1..2
ok 1 - text log correct
ok 2 - identical output of normal log lines when using structured log adapter
ok
t/syslog.t .................. 
1..27
ok 1 - Log::Any alert maps to the right syslog priority
ok 2 - Log::Any passed through the right message
ok 3 - Log::Any critical maps to the right syslog priority
ok 4 - Log::Any passed through the right message
ok 5 - Log::Any debug maps to the right syslog priority
ok 6 - Log::Any passed through the right message
ok 7 - Log::Any emergency maps to the right syslog priority
ok 8 - Log::Any passed through the right message
ok 9 - Log::Any error maps to the right syslog priority
ok 10 - Log::Any passed through the right message
ok 11 - Log::Any info maps to the right syslog priority
ok 12 - Log::Any passed through the right message
ok 13 - Log::Any notice maps to the right syslog priority
ok 14 - Log::Any passed through the right message
ok 15 - Log::Any trace maps to the right syslog priority
ok 16 - Log::Any passed through the right message
ok 17 - Log::Any warning maps to the right syslog priority
ok 18 - Log::Any passed through the right message
ok 19 - log opened with correct name
ok 20 - log opened with correct options
ok 21 - log opened with correct facility
ok 22 - log opened with correct name
ok 23 - log opened with correct options
ok 24 - log opened with correct facility
ok 25 - no log written because log_level too high
ok 26 - emergency log is logged
ok 27 - emergency log is logged
ok
t/util.t .................... 
1..3
ok 1 - warn alias is correct
ok 2 - Warn alias is correct
ok 3 - WARN alias is correct
ok
t/valid-methods.t ........... 
1..87
ok 1 - !is_trace
ok 2 - !is_debug
ok 3 - !is_info
ok 4 - !is_notice
ok 5 - !is_warning
ok 6 - !is_error
ok 7 - !is_critical
ok 8 - !is_alert
ok 9 - !is_emergency
ok 10
ok 11 - trace runs
ok 12 - tracef runs
ok 13 - debug runs
ok 14 - debugf runs
ok 15 - info runs
ok 16 - infof runs
ok 17 - notice runs
ok 18 - noticef runs
ok 19 - warning runs
ok 20 - warningf runs
ok 21 - error runs
ok 22 - errorf runs
ok 23 - critical runs
ok 24 - criticalf runs
ok 25 - alert runs
ok 26 - alertf runs
ok 27 - emergency runs
ok 28 - emergencyf runs
ok 29 - bad method
ok 30 - !is_trace
ok 31 - !is_debug
ok 32 - !is_info
ok 33 - !is_notice
ok 34 - !is_warning
ok 35 - !is_error
ok 36 - !is_critical
ok 37 - !is_alert
ok 38 - !is_emergency
ok 39
ok 40 - trace runs
ok 41 - tracef runs
ok 42 - debug runs
ok 43 - debugf runs
ok 44 - info runs
ok 45 - infof runs
ok 46 - notice runs
ok 47 - noticef runs
ok 48 - warning runs
ok 49 - warningf runs
ok 50 - error runs
ok 51 - errorf runs
ok 52 - critical runs
ok 53 - criticalf runs
ok 54 - alert runs
ok 55 - alertf runs
ok 56 - emergency runs
ok 57 - emergencyf runs
ok 58 - bad method
ok 59 - !is_trace
ok 60 - !is_debug
ok 61 - !is_info
ok 62 - !is_notice
ok 63 - !is_warning
ok 64 - !is_error
ok 65 - !is_critical
ok 66 - !is_alert
ok 67 - !is_emergency
ok 68
ok 69 - trace runs
ok 70 - tracef runs
ok 71 - debug runs
ok 72 - debugf runs
ok 73 - info runs
ok 74 - infof runs
ok 75 - notice runs
ok 76 - noticef runs
ok 77 - warning runs
ok 78 - warningf runs
ok 79 - error runs
ok 80 - errorf runs
ok 81 - critical runs
ok 82 - criticalf runs
ok 83 - alert runs
ok 84 - alertf runs
ok 85 - emergency runs
ok 86 - emergencyf runs
ok 87 - bad method
ok
All tests successful.
Files=26, Tests=284, 39 wallclock secs ( 1.21 usr  0.58 sys + 30.06 cusr  7.96 csys = 39.81 CPU)
Result: PASS
