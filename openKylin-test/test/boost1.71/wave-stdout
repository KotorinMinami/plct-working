-- The CXX compiler identification is GNU 9.3.0
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found Boost: /usr/lib/riscv64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version "1.71.0") found components: wave thread 
-- Configuring done
-- Generating done
-- Build files have been written to: /tmp/tmp.Zsl9DWpluQ/build
Scanning dependencies of target demo2
[ 25%] Building CXX object CMakeFiles/demo2.dir/demo2.cpp.o
[ 50%] Linking CXX executable demo2
[ 50%] Built target demo2
Scanning dependencies of target demo1
[ 75%] Building CXX object CMakeFiles/demo1.dir/demo1.cpp.o
[100%] Linking CXX executable demo1
[100%] Built target demo1
build: OK

int main(int argc, char *argv[])
{
        if (2 != argc) {
                std::cerr << "Usage: advanced_hooks infile" << std::endl;
                return -1;
        }
run: demo1 OK
NEWLINE          (#394) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  1/ 1): >\n<
INT              (#334) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/ 1): >int<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/ 4): > <
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/ 5): >main<
LEFTPAREN        (#277) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/ 9): >(<
INT              (#334) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/10): >int<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/13): > <
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/14): >argc<
COMMA            (#264) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/18): >,<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/19): > <
CHAR             (#313) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/20): >char<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/24): > <
STAR             (#302) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/25): >*<
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/26): >argv<
LEFTBRACKET      (#278) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/30): >[<
RIGHTBRACKET     (#295) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/31): >]<
RIGHTPAREN       (#294) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/32): >)<
NEWLINE          (#394) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  2/33): >\n<
LEFTBRACE        (#274) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  3/ 1): >{<
NEWLINE          (#394) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  3/ 2): >\n<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/ 1): >    <
IF               (#332) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/ 5): >if<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/ 7): > <
LEFTPAREN        (#277) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/ 8): >(<
INTLIT           (#384) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/ 9): >2<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/10): > <
NOTEQUAL         (#285) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/11): >!=<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/13): > <
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/14): >argc<
RIGHTPAREN       (#294) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/18): >)<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/19): > <
LEFTBRACE        (#274) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/20): >{<
NEWLINE          (#394) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  4/21): >\n<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/ 1): >        <
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/ 9): >std<
COLON_COLON      (#296) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/12): >::<
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/14): >cerr<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/18): > <
SHIFTLEFT        (#298) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/19): ><<<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/21): > <
STRINGLIT        (#390) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/22): >"Usage: advanced_hooks infile"<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/52): > <
SHIFTLEFT        (#298) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/53): ><<<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/55): > <
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/56): >std<
COLON_COLON      (#296) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/59): >::<
IDENTIFIER       (#380) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/61): >endl<
SEMICOLON        (#297) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/65): >;<
NEWLINE          (#394) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  5/66): >\n<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  6/ 1): >        <
RETURN           (#345) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  6/ 9): >return<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  6/15): > <
MINUS            (#279) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  6/16): >-<
INTLIT           (#384) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  6/17): >1<
SEMICOLON        (#297) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  6/18): >;<
NEWLINE          (#394) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  6/19): >\n<
SPACE            (#392) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  7/ 1): >    <
RIGHTBRACE       (#293) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  7/ 5): >}<
NEWLINE          (#394) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  7/ 6): >\n<
EOF              (#401) at /tmp/tmp.Zsl9DWpluQ/src/demo1_test.cpp (  8/ 1): ><
run: demo2 OK
